<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Simple Xsec World</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://xsec.7ever.cn/"/>
  <updated>2018-01-12T09:00:33.599Z</updated>
  <id>https://xsec.7ever.cn/</id>
  
  <author>
    <name>Xingyue</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>mac 忘记开机密码</title>
    <link href="https://xsec.7ever.cn/2018/01/12/mac-forget-password/"/>
    <id>https://xsec.7ever.cn/2018/01/12/mac-forget-password/</id>
    <published>2018-01-12T08:59:21.000Z</published>
    <updated>2018-01-12T09:00:33.599Z</updated>
    
    <content type="html"><![CDATA[<ul><li><p>在单用户模式下启动 Mac 设备。</p></li><li><p>打开终端窗口，然后输入以下命令：</p></li></ul><p>mount -uw /</p><ul><li>Capitan 或 Yosemite 系统用户分别输入以下两个命令：</li></ul><p>launchcti load /System/Library/LaunchDaemons/com.apple.taskgated.plist<br>launchctl load /System/Library/LaunchDaemons/com.apple.opendirectoryd.plist</p><p>而 Mavericks、Mountain Lion 或 Lion 系统用户则输入以下命令：</p><p>launchctl load /System/Library/LaunchDaemons/com.apple.opendirectoryd.plist</p><p>需要注意的是，如果你不知道用户的短名称，可以输入以下命令来获取用户列表(短名称位于左侧，完整名称位于右侧)：</p><p>dscl localonly ls /Local/Default/Users realname</p><ul><li>输入以下命令，并将 shortname 替换为管理员用户的短名称(用户个人文件夹的名称)：</li></ul><p>passwd shortname</p><p>系统提示时，输入新的帐户密码，但是你可能看不到任何表明正在键入的指示。</p><ul><li>输入 reboot 命令以重新启动 Mac。</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;&lt;p&gt;在单用户模式下启动 Mac 设备。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;打开终端窗口，然后输入以下命令：&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;mount -uw /&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Capitan 或 Yosemite 系统用户分别输入以下两个命
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>通过https 站点分发ipa 安装包</title>
    <link href="https://xsec.7ever.cn/2018/01/12/ipa-publish-https/"/>
    <id>https://xsec.7ever.cn/2018/01/12/ipa-publish-https/</id>
    <published>2018-01-12T02:01:07.000Z</published>
    <updated>2018-01-12T02:05:57.796Z</updated>
    
    <content type="html"><![CDATA[<ul><li><p>配置下载页:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"itms-services://?action=download-manifest&amp;url=https://......./test.plist"</span>&gt;</span>下载测试版<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div></pre></td></tr></table></figure></li><li><p>编写plist文件:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</div><div class="line">&lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt;</div><div class="line">&lt;plist version="1.0"&gt;</div><div class="line">&lt;dict&gt;</div><div class="line">&lt;key&gt;items&lt;/key&gt;</div><div class="line">&lt;array&gt;</div><div class="line">&lt;dict&gt;</div><div class="line">&lt;key&gt;assets&lt;/key&gt;</div><div class="line">&lt;array&gt;</div><div class="line">&lt;dict&gt;</div><div class="line">&lt;key&gt;kind&lt;/key&gt;</div><div class="line">&lt;string&gt;software-package&lt;/string&gt;</div><div class="line">&lt;key&gt;url&lt;/key&gt;</div><div class="line">&lt;string&gt;https://.....................ipa&lt;/string&gt;</div><div class="line">&lt;/dict&gt;</div><div class="line">&lt;dict&gt;</div><div class="line">&lt;key&gt;kind&lt;/key&gt;</div><div class="line">&lt;string&gt;full-size-image&lt;/string&gt;</div><div class="line">&lt;key&gt;needs-shine&lt;/key&gt;</div><div class="line">&lt;false/&gt;</div><div class="line">&lt;key&gt;url&lt;/key&gt;</div><div class="line">&lt;string&gt;https://............................icon.png&lt;/string&gt;</div><div class="line">&lt;/dict&gt;</div><div class="line">&lt;dict&gt;</div><div class="line">&lt;key&gt;kind&lt;/key&gt;</div><div class="line">&lt;string&gt;display-image&lt;/string&gt;</div><div class="line">&lt;key&gt;needs-shine&lt;/key&gt;</div><div class="line">&lt;false/&gt;</div><div class="line">&lt;key&gt;url&lt;/key&gt;</div><div class="line">&lt;string&gt;https://...........................icon@2x.png&lt;/string&gt;</div><div class="line">&lt;/dict&gt;</div><div class="line">&lt;/array&gt;</div><div class="line">&lt;key&gt;metadata&lt;/key&gt;</div><div class="line">&lt;dict&gt;</div><div class="line">&lt;key&gt;bundle-identifier&lt;/key&gt;</div><div class="line">&lt;string&gt;com.package.yours&lt;/string&gt;</div><div class="line">&lt;key&gt;bundle-version&lt;/key&gt;</div><div class="line">&lt;string&gt;2.0.2&lt;/string&gt;</div><div class="line">&lt;key&gt;kind&lt;/key&gt;</div><div class="line">&lt;string&gt;software&lt;/string&gt;</div><div class="line">&lt;key&gt;subtitle&lt;/key&gt;</div><div class="line">&lt;string&gt;测试ipa&lt;/string&gt;</div><div class="line">&lt;key&gt;title&lt;/key&gt;</div><div class="line">&lt;string&gt;测试ipa安装&lt;/string&gt;</div><div class="line">&lt;/dict&gt;</div><div class="line">&lt;/dict&gt;</div><div class="line">&lt;/array&gt;</div><div class="line">&lt;/dict&gt;</div><div class="line">&lt;/plist&gt;</div></pre></td></tr></table></figure></li><li><p>最后放好你的ipa，用ios 手机 safri 浏览器打开你的 发布页，点击 下载测试版 就可以安装了.</p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;&lt;p&gt;配置下载页:&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code
      
    
    </summary>
    
      <category term="开发" scheme="https://xsec.7ever.cn/categories/%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="https" scheme="https://xsec.7ever.cn/tags/https/"/>
    
      <category term="ipa" scheme="https://xsec.7ever.cn/tags/ipa/"/>
    
  </entry>
  
  <entry>
    <title>最简单的ES6开发编译环境</title>
    <link href="https://xsec.7ever.cn/2018/01/11/from-zero-es6-npm/"/>
    <id>https://xsec.7ever.cn/2018/01/11/from-zero-es6-npm/</id>
    <published>2018-01-11T12:53:47.000Z</published>
    <updated>2018-01-13T07:30:35.160Z</updated>
    
    <content type="html"><![CDATA[<ul><li>安装全局的babel-cli,用来转换ES6代码</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span> npm install -g babel-cli</div></pre></td></tr></table></figure><ul><li><p>初始化你的项目目录:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span> mkdir sample &amp;&amp; cd sample</div><div class="line"><span class="meta">$</span> mkdir src</div><div class="line"><span class="meta">$</span> mkdir dist</div><div class="line"><span class="meta">$</span> npm init -y # 一路初始化自己的项目</div></pre></td></tr></table></figure></li><li><p>创建静态文件:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span> cat index.html</div><div class="line">&lt;!DOCTYPE html&gt;</div><div class="line">&lt;html lang="en"&gt;</div><div class="line">    &lt;head&gt;</div><div class="line">        &lt;title&gt;&lt;/title&gt;</div><div class="line">        &lt;meta charset="UTF-8"&gt;</div><div class="line">        &lt;meta name="viewport" content="width=device-width, initial-scale=1"&gt;</div><div class="line">        &lt;script src="./dist/index.js"&gt;&lt;/script&gt;</div><div class="line">    &lt;/head&gt;</div><div class="line">    &lt;body&gt;</div><div class="line">        Hello ECMA Script 6</div><div class="line">&lt;script src="./dist/index.js"&gt;&lt;/script&gt;</div><div class="line">    &lt;/body&gt;</div><div class="line">&lt;/html&gt;</div></pre></td></tr></table></figure></li><li><p>npm 安装转换器，及依赖</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span> npm install --save-dev babel-preset-es2015 babel-cli</div></pre></td></tr></table></figure></li><li><p>创建babel 使用配置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span> cat .babelrc</div><div class="line"></div><div class="line">&#123;</div><div class="line">    "presets":[</div><div class="line">        "es2015"</div><div class="line">    ],</div><div class="line">    "plugins":[]</div><div class="line">&#125;</div></pre></td></tr></table></figure></li><li><p>package.json 中添加 转换命令:</p></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">....</div><div class="line">    "build": "babel src -d dist"</div><div class="line">....</div></pre></td></tr></table></figure><ul><li>一个完整版的package.json 如下,理论上说package.json + .babelrc 就可以配置基础的环境了:</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  "name": "xes6",</div><div class="line">  "version": "1.0.0",</div><div class="line">  "description": "",</div><div class="line">  "main": "index.js",</div><div class="line">  "scripts": &#123;</div><div class="line">    "test": "echo \"Error: no test specified\" &amp;&amp; exit 1",</div><div class="line">    "build": "babel src -d dist --watch"</div><div class="line">  &#125;,</div><div class="line">  "keywords": [],</div><div class="line">  "author": "",</div><div class="line">  "license": "ISC",</div><div class="line">  "devDependencies": &#123;</div><div class="line">    "babel-cli": "^6.26.0",</div><div class="line">    "babel-preset-es2015": "^6.24.1"</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><ul><li>试一下吧：<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm run build</div></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;安装全局的babel-cli,用来转换ES6代码&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/p
      
    
    </summary>
    
      <category term="开发" scheme="https://xsec.7ever.cn/categories/%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="ES6" scheme="https://xsec.7ever.cn/tags/ES6/"/>
    
      <category term="node" scheme="https://xsec.7ever.cn/tags/node/"/>
    
      <category term="npm" scheme="https://xsec.7ever.cn/tags/npm/"/>
    
  </entry>
  
  <entry>
    <title>比nginx自己更好用的ip 访问控制</title>
    <link href="https://xsec.7ever.cn/2018/01/10/nginx-lua-better-access-control/"/>
    <id>https://xsec.7ever.cn/2018/01/10/nginx-lua-better-access-control/</id>
    <published>2018-01-10T09:46:19.000Z</published>
    <updated>2018-01-10T09:54:33.599Z</updated>
    
    <content type="html"><![CDATA[<p>nginx 自己的ip访问控制大家应该都用过，就是下边的这种写法:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">...</div><div class="line">allow ip1;</div><div class="line">allow ip2;</div><div class="line">allow ip3;</div><div class="line">deny all;</div><div class="line">...</div></pre></td></tr></table></figure><p>当你有一堆IP需要控制的时候，就是一件比较难受的事情了。<br>所以，使用lua 写了这么一段lua代码。</p><p>nginx 自己需要配置支持 lua 去翻其他的代码吧:</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">M.access_by_net</span><span class="params">(name)</span></span> </div><div class="line">    <span class="keyword">local</span> client_ip =  ngx.var.remote_addr <span class="keyword">or</span> <span class="string">"0.0.0.0"</span></div><div class="line">    <span class="keyword">local</span> pts,pts_len = U.findAll(client_ip,<span class="string">'%.'</span>)</div><div class="line">    <span class="keyword">if</span> pts_len == <span class="number">3</span> <span class="keyword">then</span></div><div class="line">        <span class="keyword">local</span> network = <span class="built_in">string</span>.<span class="built_in">sub</span>(client_ip,<span class="number">0</span>,pts[<span class="number">3</span>])</div><div class="line">        <span class="keyword">local</span> allow_hosts = &#123;&#125;</div><div class="line">        <span class="keyword">local</span> allow_nets = &#123;&#125;</div><div class="line"></div><div class="line"><span class="comment">--- 这部分就可以自己定义了</span></div><div class="line">        <span class="keyword">if</span> name == <span class="string">"sec"</span> <span class="keyword">then</span></div><div class="line">            allow_nets = &#123;<span class="string">"10.222.28."</span>&#125;</div><div class="line">        <span class="keyword">elseif</span> name == <span class="string">"es"</span> <span class="keyword">then</span></div><div class="line">            allow_nets = &#123;&#125;</div><div class="line">            allow_hosts = &#123;<span class="string">"10.210.12.17"</span>&#125;</div><div class="line">        <span class="keyword">end</span> </div><div class="line"></div><div class="line">        <span class="keyword">if</span> U.inArray(allow_hosts,client_ip) <span class="keyword">or</span> U.inArray(allow_nets,network) <span class="keyword">then</span></div><div class="line">            <span class="keyword">return</span> <span class="literal">true</span></div><div class="line">        <span class="keyword">end</span> </div><div class="line">    <span class="keyword">end</span> </div><div class="line">    <span class="keyword">return</span> ngx.<span class="built_in">exit</span>(<span class="number">403</span>)</div><div class="line"><span class="keyword">end</span></div></pre></td></tr></table></figure><p>nginx 自己里边配置就比较简单了:<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">access_by_lua "tools.access_by_net('es')";</div></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;nginx 自己的ip访问控制大家应该都用过，就是下边的这种写法:&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div cl
      
    
    </summary>
    
      <category term="系统" scheme="https://xsec.7ever.cn/categories/%E7%B3%BB%E7%BB%9F/"/>
    
    
      <category term="lua" scheme="https://xsec.7ever.cn/tags/lua/"/>
    
      <category term="nginx" scheme="https://xsec.7ever.cn/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>python 使用rabbitmq的简单代码</title>
    <link href="https://xsec.7ever.cn/2018/01/04/rabbitmq-python-sample/"/>
    <id>https://xsec.7ever.cn/2018/01/04/rabbitmq-python-sample/</id>
    <published>2018-01-04T02:17:51.000Z</published>
    <updated>2018-01-04T03:02:59.791Z</updated>
    
    <content type="html"><![CDATA[<ul><li>安装pika处理rabbitmq协议</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pip install pika</div></pre></td></tr></table></figure><ul><li><p>发送数据到rabbitmq</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> pika                                                                                                                                                                </div><div class="line">                                                                                                                                                                           </div><div class="line">credentials = pika.PlainCredentials(<span class="string">''</span>,<span class="string">''</span>)                                                                                                                    </div><div class="line">connection = pika.BlockingConnection(                                                                                                                                      </div><div class="line">        pika.ConnectionParameters(<span class="string">''</span>,<span class="number">5672</span>,<span class="string">'/'</span>,credentials)                                                                                                       </div><div class="line">)                                                                                                                                                                          </div><div class="line">channel = connection.channel()                                                                                                                                             </div><div class="line">channel.queue_declare(queue=<span class="string">'hello'</span>)                                                                                                                                       </div><div class="line"><span class="comment">#发送数据到exchange,exchange保存为空，将发送数据到声明的queue</span></div><div class="line">channel.basic_publish(                                                                                                                                                     </div><div class="line">exchange=<span class="string">'jira_publish'</span>,                                                                                                                                   </div><div class="line">        routing_key=<span class="string">'ajira'</span>,                                                                                                                                               </div><div class="line">        body=<span class="string">'Hello World!'</span>                                                                                                                                                </div><div class="line">)                                                                                                                                                                          </div><div class="line"><span class="keyword">print</span> <span class="string">" [x] Sent 'Hello World!'"</span>                                                                                                                                           </div><div class="line">connection.close()</div></pre></td></tr></table></figure></li><li><p>接收数据:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> pika                                                                                                                                                                </div><div class="line">                                                                                                                                                                           </div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">callback</span><span class="params">(ch, method, properties, body)</span>:</span>                                                                                                                                </div><div class="line">        <span class="keyword">print</span> body                                                                                                                                                         </div><div class="line">                                                                                                                                                                           </div><div class="line">credentials = pika.PlainCredentials(<span class="string">''</span>,<span class="string">''</span>)                                                                                                                    </div><div class="line">connection = pika.BlockingConnection(                                                                                                                                      </div><div class="line">        pika.ConnectionParameters(<span class="string">''</span>,<span class="number">5672</span>,<span class="string">'/'</span>,credentials)                                                                                                       </div><div class="line">)                                                                                                                                                                          </div><div class="line">channel = connection.channel()                                                                                                                                             </div><div class="line">channel.basic_consume(callback,queue=<span class="string">'hello'</span>,no_ack=<span class="keyword">True</span>)                                                                                                                  </div><div class="line">channel.start_consuming()</div></pre></td></tr></table></figure></li></ul><p><strong>如此就完成了一个基本的消息异步处理流程</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;安装pika处理rabbitmq协议&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/t
      
    
    </summary>
    
      <category term="开发" scheme="https://xsec.7ever.cn/categories/%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="python" scheme="https://xsec.7ever.cn/tags/python/"/>
    
      <category term="rabbitmq" scheme="https://xsec.7ever.cn/tags/rabbitmq/"/>
    
  </entry>
  
  <entry>
    <title>SweetAlert 使用 自定义弹出框内容</title>
    <link href="https://xsec.7ever.cn/2017/12/26/sweetalert-use-custom-content-elment/"/>
    <id>https://xsec.7ever.cn/2017/12/26/sweetalert-use-custom-content-elment/</id>
    <published>2017-12-26T11:42:05.000Z</published>
    <updated>2017-12-26T11:44:44.585Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://sweetalert.js.org/guides/#installation" target="_blank" rel="external">说明地址:(https://sweetalert.js.org/guides/#installation)</a><br>wget  <a href="https://unpkg.com/sweetalert/dist/sweetalert.min.js" target="_blank" rel="external">https://unpkg.com/sweetalert/dist/sweetalert.min.js</a></p><p>自定义内容方法:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">swal(&#123;</div><div class="line">  content: &#123;</div><div class="line">    element: <span class="string">"div"</span>,</div><div class="line">    attributes: &#123;</div><div class="line">        innerHTML:<span class="string">"&lt;b&gt;ONE&lt;/b&gt;"</span></div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://sweetalert.js.org/guides/#installation&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;说明地址:(https://sweetalert.js.org/guides/#installat
      
    
    </summary>
    
      <category term="开发" scheme="https://xsec.7ever.cn/categories/%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="SweetAlert" scheme="https://xsec.7ever.cn/tags/SweetAlert/"/>
    
  </entry>
  
  <entry>
    <title>使用wget下载整站资源</title>
    <link href="https://xsec.7ever.cn/2017/12/22/wget-download-site/"/>
    <id>https://xsec.7ever.cn/2017/12/22/wget-download-site/</id>
    <published>2017-12-22T02:15:21.000Z</published>
    <updated>2017-12-22T02:16:16.819Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">wget -r -p -np -k https://docs.zivadynamics.com/vfx/</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;lin
      
    
    </summary>
    
    
      <category term="wget" scheme="https://xsec.7ever.cn/tags/wget/"/>
    
  </entry>
  
  <entry>
    <title>使用lua 扩展nginx 的一个简单模板</title>
    <link href="https://xsec.7ever.cn/2017/12/20/nginx-lua-config-tools/"/>
    <id>https://xsec.7ever.cn/2017/12/20/nginx-lua-config-tools/</id>
    <published>2017-12-20T06:51:51.000Z</published>
    <updated>2017-12-29T07:22:39.418Z</updated>
    
    <content type="html"><![CDATA[<p>nginx 配置文件先加入require的路径标识:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">lua_package_path '/data1/nginx/lua/?.lua;';</div><div class="line">lua_package_cpath '/usr/local/lib/lua/5.1/?.so;';</div><div class="line"></div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment">##代码中可以使用tools对象,及ngx.shared.server （table对象）</span></span></div><div class="line">init_by_lua 'tools = require "tools"';</div><div class="line">lua_shared_dict server 5m;</div></pre></td></tr></table></figure><p>vhost 部分配置:<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">server &#123;</div><div class="line">    listen 10.13.8.75:80;</div><div class="line">server_name webide.sina.com.cn;</div><div class="line">default_type  text/html;</div><div class="line"></div><div class="line">location /login &#123;</div><div class="line">content_by_lua "tools.content_by_lua('login')";</div><div class="line">header_filter_by_lua "tools.header_filter_by_lua('login')";</div><div class="line">&#125;</div><div class="line"></div><div class="line">location / &#123;</div><div class="line">proxy_pass http://127.0.0.1:9000;</div><div class="line">proxy_http_version 1.1;</div><div class="line">proxy_set_header Upgrade $http_upgrade;</div><div class="line">proxy_set_header Connection "upgrade";</div><div class="line">rewrite_by_lua "tools.rewrite_by_lua()";</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>对应的lua 代码集中的地方:<br><figure class="highlight lua"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">local</span> M = &#123;&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">M.set_by_lua</span><span class="params">(name)</span></span> </div><div class="line"><span class="keyword">if</span> ( name == <span class="string">'proxy_addr'</span> )</div><div class="line"><span class="keyword">then</span></div><div class="line"><span class="keyword">return</span> <span class="string">"http://127.0.0.1:9000"</span></div><div class="line"><span class="keyword">elseif</span> (name == <span class="string">"another_name"</span>)</div><div class="line"><span class="keyword">then</span></div><div class="line"><span class="keyword">return</span> <span class="string">"bye bye "</span></div><div class="line"><span class="keyword">end</span></div><div class="line"><span class="keyword">end</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">M.access_by_lua</span><span class="params">()</span></span> </div><div class="line"><span class="comment">--- returnngx.exit(ngx.HTTP_FORBIDDEN) </span></div><div class="line"><span class="keyword">return</span> </div><div class="line"><span class="keyword">end</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">M.rewrite_by_lua</span><span class="params">()</span></span></div><div class="line"><span class="comment">--- ngx.exec("/login")</span></div><div class="line"><span class="keyword">end</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">M.content_by_lua</span><span class="params">(name)</span></span></div><div class="line">ngx.say(<span class="string">"hello login page page from lua : "</span> .. name)</div><div class="line"><span class="keyword">end</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">M.header_filter_by_lua</span><span class="params">(name)</span></span></div><div class="line"></div><div class="line"><span class="keyword">end</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">M.body_filter_by_lua</span><span class="params">(name)</span></span></div><div class="line"></div><div class="line"><span class="keyword">end</span></div><div class="line"><span class="keyword">return</span> M</div></pre></td></tr></table></figure></p><h4 id="根据不同的server-name-做不同的proxy-pass"><a href="#根据不同的server-name-做不同的proxy-pass" class="headerlink" title="根据不同的server_name 做不同的proxy_pass"></a>根据不同的server_name 做不同的proxy_pass</h4><ul><li><p>nginx 做泛域名绑定:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">server_name *.webide.sina.com.cn;</div></pre></td></tr></table></figure></li><li><p>lua 获取需要转发的地址:</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">M.set_pass_addr</span><span class="params">()</span></span></div><div class="line">    <span class="keyword">local</span> server_name = ngx.var.host </div><div class="line">    <span class="keyword">local</span> first_pt = <span class="built_in">string</span>.<span class="built_in">find</span>(server_name,<span class="string">'%.'</span>) - <span class="number">1</span> </div><div class="line">    <span class="keyword">local</span> first_segment = <span class="built_in">string</span>.<span class="built_in">sub</span>(server_name,<span class="number">0</span>,first_pt)</div><div class="line">    <span class="keyword">local</span> _type = <span class="built_in">string</span>.<span class="built_in">sub</span>(first_segment,<span class="number">0</span>,<span class="number">1</span>)</div><div class="line">    <span class="keyword">local</span> _port = <span class="built_in">string</span>.<span class="built_in">sub</span>(first_segment,<span class="number">2</span>,<span class="number">10</span>)</div><div class="line">    <span class="keyword">return</span> <span class="string">"http://127.0.0.1:"</span> .. _port</div><div class="line"><span class="keyword">end</span></div></pre></td></tr></table></figure></li><li><p>nginx 根据返回的变量做proxy_pass</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">set_by_lua $p_pass_addr  "return tools.set_pass_addr()";</div><div class="line">proxy_pass $p_pass_addr;</div></pre></td></tr></table></figure></li><li><p>开发阶段建议把 <strong>lua_cache</strong> 打开:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">lua_code_cache 'off';</div></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;nginx 配置文件先加入require的路径标识:&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;li
      
    
    </summary>
    
      <category term="系统" scheme="https://xsec.7ever.cn/categories/%E7%B3%BB%E7%BB%9F/"/>
    
    
      <category term="lua" scheme="https://xsec.7ever.cn/tags/lua/"/>
    
      <category term="nginx" scheme="https://xsec.7ever.cn/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>关于javascript this 的几点讨论</title>
    <link href="https://xsec.7ever.cn/2017/12/16/javascript-function-this/"/>
    <id>https://xsec.7ever.cn/2017/12/16/javascript-function-this/</id>
    <published>2017-12-16T13:31:25.000Z</published>
    <updated>2017-12-17T05:04:30.684Z</updated>
    
    <content type="html"><![CDATA[<p>javascript 函数中调用的this，一般去寻找对象本身， .语法之前的对象，如果没发现，那么this 即为全局对象。</p><p>几个例子如下:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params">a,b</span>)</span>&#123;</div><div class="line"><span class="built_in">console</span>.log(<span class="keyword">this</span>,a,b);</div><div class="line">&#125;</div><div class="line"></div><div class="line">fn(<span class="number">1</span>,<span class="number">2</span>); <span class="comment">// this 输出的值为window</span></div><div class="line"></div><div class="line"><span class="keyword">var</span> a = &#123;&#125;;</div><div class="line">a.method = fn;</div><div class="line">a.method(<span class="number">1</span>,<span class="number">2</span>); <span class="comment">// this 输出的值为 a</span></div></pre></td></tr></table></figure><p>另外，必要的情况下，我们需要改变this的绑定关系,这时候需要函数的call或者apply方法:<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params">a,b</span>)</span>&#123;</div><div class="line"><span class="built_in">console</span>.log(<span class="keyword">this</span>,a,b);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">var</span> this_obj = &#123;&#125;;</div><div class="line">fn.call(this_obj,<span class="number">1</span>,<span class="number">2</span>); <span class="comment">// 输出的this,即为this_obj</span></div><div class="line">fn.apply(this_obj,[<span class="number">1</span>,<span class="number">2</span>]); <span class="comment">//区别于call，参数可以传递为一个数组</span></div></pre></td></tr></table></figure></p><p>创建对象自身的时候包含原型链,可以动态扩展对象的行为,即查找对象属性时，如果自身不存在，会转而查找他的上一层。<br>并且，上层动态创建的属性，依然会反映到新创建的对象中:<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> info = &#123;</div><div class="line">hi:<span class="string">'hi this is world'</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">var</span> ninfo = <span class="built_in">Object</span>.create(info); <span class="comment">//创建原型链关联关系</span></div><div class="line"><span class="built_in">console</span>.log(ninfo.hi);<span class="comment">//可以获取到数据 "hi this is world"</span></div><div class="line">info.hello = <span class="string">'hello world'</span>;<span class="comment">//扩展原来的对象</span></div><div class="line"><span class="built_in">console</span>.log(ninfo.hello);<span class="comment">//依然可以获得hello的属性</span></div></pre></td></tr></table></figure></p><p>创建对象时，顺路包含相关扩展:<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="comment">//扩展对象的行为包含move方法</span></div><div class="line"><span class="keyword">var</span> makeMove = <span class="function"><span class="keyword">function</span>(<span class="params">base</span>)</span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">var</span> me = <span class="built_in">Object</span>.create(base);</div><div class="line"></div><div class="line">    me.move = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        me.location++;</div><div class="line">        <span class="keyword">if</span>(me.location &gt;= <span class="number">30</span>) &#123;</div><div class="line">            me.location = <span class="number">1</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="built_in">console</span>.log(me.location);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    me.loop = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        me.move();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">return</span> me;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>最初始的扩展方式等同于构造函数，javascript中构建类的一个基本方式如下:<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="comment">//不调用new的方式</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">C</span>(<span class="params">info</span>)</span>&#123;</div><div class="line"><span class="keyword">var</span> o = <span class="built_in">Object</span>.create(C.prototype);</div><div class="line">o.info = info;</div><div class="line"><span class="keyword">return</span> o;</div><div class="line">&#125;</div><div class="line"></div><div class="line">C.prototype = &#123;</div><div class="line">hello:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line"><span class="built_in">console</span>.log(<span class="keyword">this</span>.info);</div><div class="line">&#125;</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="keyword">var</span> c = C(<span class="string">"hello"</span>);</div><div class="line">c.hello()</div></pre></td></tr></table></figure></p><p>伪类模式，javascript 引入new的关键字，调用的函数直接为构造函数，内部会初始化一个this，并且会自动实现原型链的关联,并且会自动的把this返回，作为对象实例:<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//简单的实现方式</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">C</span>(<span class="params">info</span>)</span>&#123;</div><div class="line"><span class="keyword">this</span>.info = info;</div><div class="line">&#125;</div><div class="line"></div><div class="line">C.prototype = &#123;</div><div class="line">hello:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line"><span class="built_in">console</span>.log(<span class="keyword">this</span>.info);</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;javascript 函数中调用的this，一般去寻找对象本身， .语法之前的对象，如果没发现，那么this 即为全局对象。&lt;/p&gt;
&lt;p&gt;几个例子如下:&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td cla
      
    
    </summary>
    
      <category term="开发" scheme="https://xsec.7ever.cn/categories/%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="javascript" scheme="https://xsec.7ever.cn/tags/javascript/"/>
    
      <category term="this" scheme="https://xsec.7ever.cn/tags/this/"/>
    
  </entry>
  
  <entry>
    <title>使用rsyslog 转发文件日志</title>
    <link href="https://xsec.7ever.cn/2017/12/16/rsyslog-transferlog/"/>
    <id>https://xsec.7ever.cn/2017/12/16/rsyslog-transferlog/</id>
    <published>2017-12-16T12:21:03.000Z</published>
    <updated>2017-12-16T12:22:38.627Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">module(load="imfile")</div><div class="line"></div><div class="line">ruleset(name="graylog-remote") &#123;</div><div class="line">    action(type="omfwd"</div><div class="line">        Protocol="udp"</div><div class="line">        Target="10.211.101.93"</div><div class="line">        Port="521")</div><div class="line">    stop</div><div class="line">&#125;</div><div class="line"></div><div class="line">input(</div><div class="line">    type="imfile"</div><div class="line">    File="/data0/nginx/logs/radius_ac.log"</div><div class="line">    Facility="user"</div><div class="line">    Severity="notice"</div><div class="line">    Tag=""</div><div class="line">    PersistStateInterval="1"</div><div class="line">    Ruleset="graylog-remote"</div><div class="line">)</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/di
      
    
    </summary>
    
      <category term="系统" scheme="https://xsec.7ever.cn/categories/%E7%B3%BB%E7%BB%9F/"/>
    
    
      <category term="linux" scheme="https://xsec.7ever.cn/tags/linux/"/>
    
      <category term="rsyslog" scheme="https://xsec.7ever.cn/tags/rsyslog/"/>
    
  </entry>
  
  <entry>
    <title>一些常用的rpm命令</title>
    <link href="https://xsec.7ever.cn/2017/12/16/rpm-useful-command/"/>
    <id>https://xsec.7ever.cn/2017/12/16/rpm-useful-command/</id>
    <published>2017-12-16T11:54:00.000Z</published>
    <updated>2017-12-16T11:55:26.355Z</updated>
    
    <content type="html"><![CDATA[<p>查看安装的rpm包:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">rpm -qa</div></pre></td></tr></table></figure><p>查看一个rpm包包含的文件:<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">rpm -ql rsyslog</div></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;查看安装的rpm包:&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;p
      
    
    </summary>
    
      <category term="系统" scheme="https://xsec.7ever.cn/categories/%E7%B3%BB%E7%BB%9F/"/>
    
    
      <category term="linux" scheme="https://xsec.7ever.cn/tags/linux/"/>
    
      <category term="rpm" scheme="https://xsec.7ever.cn/tags/rpm/"/>
    
  </entry>
  
  <entry>
    <title>centos7 修改dns</title>
    <link href="https://xsec.7ever.cn/2017/12/08/centos7-change-dns/"/>
    <id>https://xsec.7ever.cn/2017/12/08/centos7-change-dns/</id>
    <published>2017-12-08T07:55:13.000Z</published>
    <updated>2017-12-08T07:56:49.382Z</updated>
    
    <content type="html"><![CDATA[<ul><li>修改系统配置 /etc/resolv.conf:</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">nameserver 10.210.12.10</div><div class="line">nameserver 172.16.105.248</div></pre></td></tr></table></figure><ul><li>重启系统网络:</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">systemctl restart NetworkManager.service</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;修改系统配置 /etc/resolv.conf:&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;di
      
    
    </summary>
    
      <category term="系统" scheme="https://xsec.7ever.cn/categories/%E7%B3%BB%E7%BB%9F/"/>
    
    
      <category term="centos" scheme="https://xsec.7ever.cn/tags/centos/"/>
    
      <category term="dns" scheme="https://xsec.7ever.cn/tags/dns/"/>
    
  </entry>
  
  <entry>
    <title>快速创建大文件</title>
    <link href="https://xsec.7ever.cn/2017/12/06/shell-create-bigfile-quick/"/>
    <id>https://xsec.7ever.cn/2017/12/06/shell-create-bigfile-quick/</id>
    <published>2017-12-06T06:04:59.000Z</published>
    <updated>2017-12-06T06:05:29.123Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span><span class="bash"> dd <span class="keyword">if</span>=/dev/zero of=<span class="built_in">test</span> bs=1M count=1000</span></div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;lin
      
    
    </summary>
    
    
      <category term="shell" scheme="https://xsec.7ever.cn/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>一些常用的PostgreSQL-sql</title>
    <link href="https://xsec.7ever.cn/2017/12/04/some-PostgreSQL-sql/"/>
    <id>https://xsec.7ever.cn/2017/12/04/some-PostgreSQL-sql/</id>
    <published>2017-12-04T06:44:07.000Z</published>
    <updated>2017-12-11T07:30:52.283Z</updated>
    
    <content type="html"><![CDATA[<p>常见的几个sql:</p><ul><li>创建表：</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">CREATE TABLE excmdb (</div><div class="line">    asset_number character varying(128),</div><div class="line">    ips text[],</div><div class="line">    product character varying(128),</div><div class="line">    administrator character varying(64),</div><div class="line">    rack character varying(128),</div><div class="line">manifest character varying(32),</div><div class="line">constraint pk_tbl_primary_asset_manifest primary key (asset_number,manifest)</div><div class="line">);</div></pre></td></tr></table></figure><ul><li><p>导出表结构:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span><span class="bash"> pg_dump -h localhost -U cmdb -s cmdb</span></div><div class="line"><span class="meta">$</span><span class="bash"> pg_dump -h localhost -U cmdb cmdb -t excmdb   <span class="comment">#导出数据</span></span></div></pre></td></tr></table></figure></li><li><p>执行sql文件:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">\i data.sql;</div></pre></td></tr></table></figure></li><li><p>查看描述:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">\dt #查看表list</div><div class="line">\d excmdb #查看表结构</div></pre></td></tr></table></figure></li><li><p>数组操作:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">select sample where ips @&gt; '&#123;127.0.0.1&#125;' # 查看数组包含</div><div class="line">update sample set ips = ips || '&#123;127.0.0.1&#125;' # 添加元素</div><div class="line">UPDATE excmdb SET ips = array_remove(ips,'10.13.2.144') WHERE asset_number = 'D10075981'; #删除元素</div><div class="line">select sample where ips ||  '&#123;127.0.0.1&#125;' # 数组元素的in查询</div></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;常见的几个sql:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;创建表：&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div c
      
    
    </summary>
    
      <category term="系统" scheme="https://xsec.7ever.cn/categories/%E7%B3%BB%E7%BB%9F/"/>
    
    
      <category term="PostgreSQL" scheme="https://xsec.7ever.cn/tags/PostgreSQL/"/>
    
  </entry>
  
  <entry>
    <title>苹果系统下通过键盘快捷键运行shell</title>
    <link href="https://xsec.7ever.cn/2017/12/02/osx-keyboard-run-shell/"/>
    <id>https://xsec.7ever.cn/2017/12/02/osx-keyboard-run-shell/</id>
    <published>2017-12-02T08:09:01.000Z</published>
    <updated>2017-12-02T08:19:37.693Z</updated>
    
    <content type="html"><![CDATA[<ul><li>创建系统服务<br>运行起automator ,<br>依次选择：文件-&gt;新建-&gt;服务<br>点开资源库-&gt;操作-&gt;运行Shell脚本或者其他脚本</li></ul><p>编写自己的脚本及运行环境</p><p>保存成对应的名字，比如sample service .</p><ul><li>绑定快捷键到系统服务:</li></ul><p>选择系统偏好设置，键盘，快捷键，服务，选择刚新创建的服务<br>添加适当的快捷键，<br>关闭该窗口就可以用该快捷键执行shell</p><ul><li>automator 创建的服务在 ~/Services 目录,可以自行删减</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;创建系统服务&lt;br&gt;运行起automator ,&lt;br&gt;依次选择：文件-&amp;gt;新建-&amp;gt;服务&lt;br&gt;点开资源库-&amp;gt;操作-&amp;gt;运行Shell脚本或者其他脚本&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;编写自己的脚本及运行环境&lt;/p&gt;
&lt;p&gt;保存成对应的名字，比如
      
    
    </summary>
    
      <category term="系统" scheme="https://xsec.7ever.cn/categories/%E7%B3%BB%E7%BB%9F/"/>
    
    
      <category term="shell" scheme="https://xsec.7ever.cn/tags/shell/"/>
    
      <category term="osx" scheme="https://xsec.7ever.cn/tags/osx/"/>
    
      <category term="apple script" scheme="https://xsec.7ever.cn/tags/apple-script/"/>
    
      <category term="automator" scheme="https://xsec.7ever.cn/tags/automator/"/>
    
  </entry>
  
  <entry>
    <title>docker 容器中使用syslog-ng</title>
    <link href="https://xsec.7ever.cn/2017/11/23/docker-use-syslog-ng/"/>
    <id>https://xsec.7ever.cn/2017/11/23/docker-use-syslog-ng/</id>
    <published>2017-11-23T11:06:31.000Z</published>
    <updated>2017-11-23T11:10:21.265Z</updated>
    
    <content type="html"><![CDATA[<p>容器中配置的是ubuntu的基础系统.<br>安装syslog-ng</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">apt-get install syslog-ng</div></pre></td></tr></table></figure><p>然后 启动 syslog-ng </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">service syslog-ng start</div></pre></td></tr></table></figure><ul><li>报错1<br>syslog-ng: Error setting capabilities</li></ul><p>按照如下的代码修改启动参数<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">cat /etc/default/syslog-ng</div><div class="line"></div><div class="line"><span class="meta">#</span>#添加这一行,注释打开</div><div class="line">SYSLOGNG_OPTS="--no-caps"</div></pre></td></tr></table></figure></p><ul><li>报错2 </li></ul><p>Error opening file for reading; filename=’/proc/kmsg’, error=’Operation not permitted (1)’</p><p>去掉syslog-ng配置中的system()</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">source s_src &#123;</div><div class="line"><span class="meta">#</span>       system();</div><div class="line">       internal();</div><div class="line">&#125;;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;容器中配置的是ubuntu的基础系统.&lt;br&gt;安装syslog-ng&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;
      
    
    </summary>
    
      <category term="系统" scheme="https://xsec.7ever.cn/categories/%E7%B3%BB%E7%BB%9F/"/>
    
    
      <category term="syslog-ng" scheme="https://xsec.7ever.cn/tags/syslog-ng/"/>
    
  </entry>
  
  <entry>
    <title>graylog 安装docker中</title>
    <link href="https://xsec.7ever.cn/2017/11/22/graylog-docker/"/>
    <id>https://xsec.7ever.cn/2017/11/22/graylog-docker/</id>
    <published>2017-11-22T03:09:12.000Z</published>
    <updated>2017-11-23T06:14:43.541Z</updated>
    
    <content type="html"><![CDATA[<ul><li><p>依赖于 docker-compose </p></li><li><p>创建储存graylog的目录:</p></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mkdir -p ./graylog/data/journal</div><div class="line">mkdir -p ./graylog/config</div></pre></td></tr></table></figure><ul><li><p>编写docker-compose.yml</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">version: '2'</div><div class="line">services:</div><div class="line">  mongo:</div><div class="line">    image: "index.alauda.cn/library/mongo:3"</div><div class="line">  elasticsearch:</div><div class="line">    image: "index.alauda.cn/library/elasticsearch:2.3.2"</div><div class="line">    command: "elasticsearch -Des.cluster.name='graylog'"</div><div class="line">  elasticsearch1:</div><div class="line">    image: "index.alauda.cn/library/elasticsearch:2.3.2"</div><div class="line">    command: "elasticsearch -Des.cluster.name='graylog'"</div><div class="line">  graylog:</div><div class="line">    image: graylog2/server:2.1.0-1</div><div class="line">    environment:</div><div class="line">      GRAYLOG_PASSWORD_SECRET: xsofdnasdfsgolwa</div><div class="line">      #echo -ne "koudai@a1@38t" | sha256sum</div><div class="line">      GRAYLOG_ROOT_PASSWORD_SHA2: 8c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918 </div><div class="line">      GRAYLOG_REST_TRANSPORT_URI: http://172.16.7.58:12900</div><div class="line">    depends_on:</div><div class="line">      - mongo</div><div class="line">      - elasticsearch</div><div class="line">      - elasticsearch1</div><div class="line">    ports:</div><div class="line">      - "172.16.7.58:9002:9000"</div><div class="line">      - "172.16.7.58:12900:12900"</div><div class="line">      - "172.16.7.58:8514:8514/udp"</div><div class="line">    volumes:</div><div class="line">      - "./graylog/data/journal:/usr/share/graylog/data/journal"</div><div class="line">      #- "./graylog/config:/usr/share/graylog/data/config"</div></pre></td></tr></table></figure></li><li><p>使用docker-compose启动服务:</p></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">docker-compose up -d</div></pre></td></tr></table></figure><ul><li>注:在配置文件中修改graylog的默认用户名密码:</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="meta">$</span> echo -ne "admin" | sha256sum</div></pre></td></tr></table></figure><ul><li>从容器中copy出 graylog.conf 配置文件 到 ./graylog/config/graylog.conf  ，然后修改,重新启动<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">docker cp graylog_graylog_1:/usr/share/graylog/data/config graylog/</div></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;&lt;p&gt;依赖于 docker-compose &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;创建储存graylog的目录:&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutte
      
    
    </summary>
    
      <category term="系统" scheme="https://xsec.7ever.cn/categories/%E7%B3%BB%E7%BB%9F/"/>
    
    
      <category term="docker" scheme="https://xsec.7ever.cn/tags/docker/"/>
    
      <category term="graylog" scheme="https://xsec.7ever.cn/tags/graylog/"/>
    
  </entry>
  
  <entry>
    <title>安装docker-compose</title>
    <link href="https://xsec.7ever.cn/2017/11/22/docker-compose-install/"/>
    <id>https://xsec.7ever.cn/2017/11/22/docker-compose-install/</id>
    <published>2017-11-22T01:51:40.000Z</published>
    <updated>2017-11-22T02:14:07.421Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span> curl -L https://github.com/docker/compose/releases/download/1.17.1/docker-compose-`uname -s`-`uname -m` -o /bin/docker-compose</div></pre></td></tr></table></figure><p>如果服务器网络不通，建议自己想办法搞下来吧,来自<a href="https://github.com/docker/compose" target="_blank" rel="external">github</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;lin
      
    
    </summary>
    
      <category term="系统" scheme="https://xsec.7ever.cn/categories/%E7%B3%BB%E7%BB%9F/"/>
    
    
      <category term="docker-compose" scheme="https://xsec.7ever.cn/tags/docker-compose/"/>
    
  </entry>
  
  <entry>
    <title>国内docker registry 库</title>
    <link href="https://xsec.7ever.cn/2017/11/20/cn-docker-registry/"/>
    <id>https://xsec.7ever.cn/2017/11/20/cn-docker-registry/</id>
    <published>2017-11-20T02:13:13.000Z</published>
    <updated>2017-11-20T02:23:54.839Z</updated>
    
    <content type="html"><![CDATA[<ul><li><p>灵雀云:<br><a href="https://hub.alauda.cn/" target="_blank" rel="external">https://hub.alauda.cn/</a></p></li><li><p>Daocloud:<br><a href="https://hub.daocloud.io/" target="_blank" rel="external">https://hub.daocloud.io/</a></p></li><li><p>网易蜂巢(需先登录):<br><a href="https://c.163.com/hub#/m/home/" target="_blank" rel="external">https://c.163.com/hub#/m/home/</a></p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;&lt;p&gt;灵雀云:&lt;br&gt;&lt;a href=&quot;https://hub.alauda.cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://hub.alauda.cn/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Daocloud:&lt;br
      
    
    </summary>
    
      <category term="系统" scheme="https://xsec.7ever.cn/categories/%E7%B3%BB%E7%BB%9F/"/>
    
    
      <category term="docker" scheme="https://xsec.7ever.cn/tags/docker/"/>
    
      <category term="registry" scheme="https://xsec.7ever.cn/tags/registry/"/>
    
  </entry>
  
  <entry>
    <title>docker中使用influxdb</title>
    <link href="https://xsec.7ever.cn/2017/11/20/influxdb-use-indocker/"/>
    <id>https://xsec.7ever.cn/2017/11/20/influxdb-use-indocker/</id>
    <published>2017-11-20T01:29:04.000Z</published>
    <updated>2017-11-20T01:34:08.037Z</updated>
    
    <content type="html"><![CDATA[<ul><li>拉取脚本:</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span><span class="bash"> docker pull daocloud.io/daocloud/influxdb:latest</span></div></pre></td></tr></table></figure><ul><li>基础运行脚本</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">lip=172.16.7.1 ##只暴露端口给内网的IP</div><div class="line">name=influxdb</div><div class="line">port=" -p $lip:8086:8086 -p $lip:2003:2003 -p $lip:8083:8083 "</div><div class="line"></div><div class="line">docker run -it $&#123;port&#125; --name $&#123;name&#125;  daocloud.io/daocloud/influxdb</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;拉取脚本:&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;
      
    
    </summary>
    
      <category term="系统" scheme="https://xsec.7ever.cn/categories/%E7%B3%BB%E7%BB%9F/"/>
    
    
      <category term="docker" scheme="https://xsec.7ever.cn/tags/docker/"/>
    
      <category term="influxdb" scheme="https://xsec.7ever.cn/tags/influxdb/"/>
    
  </entry>
  
</feed>
