<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Simple Xsec World</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://xsec.7ever.cn/"/>
  <updated>2019-03-15T08:42:48.455Z</updated>
  <id>https://xsec.7ever.cn/</id>
  
  <author>
    <name>Xingyue</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>python 打开excel</title>
    <link href="https://xsec.7ever.cn/2019/03/15/python-excel/"/>
    <id>https://xsec.7ever.cn/2019/03/15/python-excel/</id>
    <published>2019-03-15T08:41:45.000Z</published>
    <updated>2019-03-15T08:42:48.455Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="comment">#coding=utf-8</span></div><div class="line"></div><div class="line"><span class="keyword">import</span> logging</div><div class="line"><span class="keyword">import</span> xlrd</div><div class="line"></div><div class="line">logging.basicConfig(level=logging.DEBUG,format=<span class="string">'%(asctime)s %(filename)s[line:%(lineno)d] %(levelname)s %(message)s'</span>,datefmt=<span class="string">'%a, %d %b %Y %H:%M:%S'</span>)</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">xlsLoop</span><span class="params">(xlsName)</span>:</span></div><div class="line">wb = xlrd.open_workbook(xlsName)</div><div class="line">names = wb.sheet_names()</div><div class="line"></div><div class="line"><span class="keyword">for</span> name <span class="keyword">in</span> names:</div><div class="line">sheet = wb.sheet_by_name(name)</div><div class="line"><span class="keyword">for</span> rownum <span class="keyword">in</span> range(sheet.nrows):</div><div class="line">row = sheet.row_values(rownum)</div><div class="line">colnum = <span class="number">0</span></div><div class="line"><span class="keyword">for</span> col <span class="keyword">in</span> row:</div><div class="line"><span class="comment">#logging.debug("&lt;%s&gt; [%d,%d] %s",name,rownum,colnum,col)</span></div><div class="line">colnum += <span class="number">1</span> </div><div class="line"><span class="keyword">yield</span> (name,rownum,colnum,col)</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">for</span> sheet,rownum,colnum,col <span class="keyword">in</span> xlsLoop(<span class="string">'test.xlsx'</span>):</div><div class="line">logging.info(<span class="string">"%s %s %s %s "</span>,sheet,rownum,colnum,col)</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/d
      
    
    </summary>
    
      <category term="开发" scheme="https://xsec.7ever.cn/categories/%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="python" scheme="https://xsec.7ever.cn/tags/python/"/>
    
      <category term="xlrd" scheme="https://xsec.7ever.cn/tags/xlrd/"/>
    
  </entry>
  
  <entry>
    <title>openssl 生成自定义证书</title>
    <link href="https://xsec.7ever.cn/2019/03/15/openssl-custom/"/>
    <id>https://xsec.7ever.cn/2019/03/15/openssl-custom/</id>
    <published>2019-03-15T05:03:28.000Z</published>
    <updated>2019-03-15T05:04:04.488Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">openssl genrsa -out server.key 1024</div><div class="line">openssl req -new -x509 -days 3650 -key server.key -out server.crt -subj "/C=CN/ST=mykey/L=mykey/O=mykey/OU=mykey/CN=domain1/CN=domain2/CN=domain3"</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;c
      
    
    </summary>
    
      <category term="开发" scheme="https://xsec.7ever.cn/categories/%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="openssl" scheme="https://xsec.7ever.cn/tags/openssl/"/>
    
  </entry>
  
  <entry>
    <title>golang 编写测试用例</title>
    <link href="https://xsec.7ever.cn/2019/03/06/golang-test-code/"/>
    <id>https://xsec.7ever.cn/2019/03/06/golang-test-code/</id>
    <published>2019-03-06T02:22:11.000Z</published>
    <updated>2019-03-06T05:54:11.704Z</updated>
    
    <content type="html"><![CDATA[<p>golang 写测试用例，非常简单。如下几步即可:</p><ul><li>普通的包，文件命名必须以 test.go 结尾</li><li>包内必须包含 指定的包，指定的方式定义函数用例:</li></ul><figure class="highlight golang"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> <span class="string">"testing"</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">TestHello</span><span class="params">(t *testing.T)</span></span> &#123;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure><ul><li>打印日志,通过或者失败:</li></ul><figure class="highlight golang"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">t.Logf(<span class="string">"Hello Log Message %s "</span>,<span class="string">"&lt;something&gt;"</span>)</div><div class="line">t.Errorf(<span class="string">"One Error Happend %s"</span>,<span class="string">"&lt;badthing&gt;"</span>) <span class="comment">// 只要出现Error 那么就认为该测试用例失败</span></div></pre></td></tr></table></figure><ul><li>运行测试:</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span> go test  # 默认只包含测试不通过的用例，但是成功的也回执行,如果想看所有的日志，那么请用 go test -v </div><div class="line"></div><div class="line">➜  info go test</div><div class="line">--- FAIL: TestArraySlice (0.00s)</div><div class="line">info_test.go:28: 2 7</div><div class="line">info_test.go:29: 3 5</div><div class="line">info_test.go:30: End!</div><div class="line">FAIL</div><div class="line">exit status 1</div><div class="line">FAILinfo0.002s</div></pre></td></tr></table></figure><p>go test 会执行当前包内定义的所有的以 Test 开头的方法定义</p><ul><li>把go test 编译成一个可执行文件(不执行)</li></ul><p>可以使用这个命令生成可以灵活扩展的多入口程序</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span> go test -c</div></pre></td></tr></table></figure><ul><li>如下是一个编写好的简单测试用例文件:<figure class="highlight golang"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="keyword">package</span> info</div><div class="line"></div><div class="line"><span class="keyword">import</span> <span class="string">"testing"</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">TestSomething</span><span class="params">(t *testing.T)</span></span> &#123;</div><div class="line">t.Log(<span class="string">"Hello test something!"</span>)</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">TestGoAround</span><span class="params">(t *testing.T)</span></span> &#123;</div><div class="line"><span class="keyword">for</span> i := <span class="number">1</span>; i &lt; <span class="number">10</span>; i++ &#123;</div><div class="line">t.Log(i)</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">TestSlice</span><span class="params">(t *testing.T)</span></span> &#123;</div><div class="line"><span class="keyword">var</span> s []<span class="keyword">int</span></div><div class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">12</span>; i++ &#123;</div><div class="line">s = <span class="built_in">append</span>(s, i+<span class="number">3</span>)</div><div class="line">t.Log(<span class="built_in">len</span>(s), <span class="built_in">cap</span>(s))</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">TestArraySlice</span><span class="params">(t *testing.T)</span></span> &#123;</div><div class="line"><span class="keyword">var</span> items = [...]<span class="keyword">int</span>&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>&#125;</div><div class="line"><span class="keyword">var</span> a = items[<span class="number">3</span>:<span class="number">5</span>]</div><div class="line"><span class="keyword">var</span> b = items[<span class="number">5</span>:<span class="number">8</span>]</div><div class="line"></div><div class="line">t.Log(<span class="built_in">len</span>(a), <span class="built_in">cap</span>(a))</div><div class="line">t.Log(<span class="built_in">len</span>(b), <span class="built_in">cap</span>(b))</div><div class="line">t.Errorf(<span class="string">"End!"</span>)</div><div class="line">&#125;</div></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;golang 写测试用例，非常简单。如下几步即可:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;普通的包，文件命名必须以 test.go 结尾&lt;/li&gt;
&lt;li&gt;包内必须包含 指定的包，指定的方式定义函数用例:&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight gola
      
    
    </summary>
    
      <category term="开发" scheme="https://xsec.7ever.cn/categories/%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="golang" scheme="https://xsec.7ever.cn/tags/golang/"/>
    
      <category term="test" scheme="https://xsec.7ever.cn/tags/test/"/>
    
  </entry>
  
  <entry>
    <title>使用sphinx 生成python 包的注释文档</title>
    <link href="https://xsec.7ever.cn/2019/03/04/sphinx-python-document/"/>
    <id>https://xsec.7ever.cn/2019/03/04/sphinx-python-document/</id>
    <published>2019-03-04T07:30:11.000Z</published>
    <updated>2019-03-04T07:35:36.725Z</updated>
    
    <content type="html"><![CDATA[<h3 id="安装shpinx"><a href="#安装shpinx" class="headerlink" title="安装shpinx"></a>安装shpinx</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span><span class="bash"> pip install sphinx</span></div></pre></td></tr></table></figure><h3 id="创建代码目录，或者切换到代码目录-初始化sphinx-配置"><a href="#创建代码目录，或者切换到代码目录-初始化sphinx-配置" class="headerlink" title="创建代码目录，或者切换到代码目录,初始化sphinx 配置"></a>创建代码目录，或者切换到代码目录,初始化sphinx 配置</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span><span class="bash">  sphinx-quickstart</span></div></pre></td></tr></table></figure><h3 id="修改-source-conf-py"><a href="#修改-source-conf-py" class="headerlink" title="修改 source/conf.py"></a>修改 source/conf.py</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="keyword">import</span> os</div><div class="line"><span class="keyword">import</span> sys</div><div class="line">sys.path.insert(<span class="number">0</span>, os.path.abspath(<span class="string">'../'</span>))</div></pre></td></tr></table></figure><h3 id="生成rst-文件"><a href="#生成rst-文件" class="headerlink" title="生成rst 文件:"></a>生成rst 文件:</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sphinx-apidoc -o  ./source code</div></pre></td></tr></table></figure><h3 id="生成Html-文档"><a href="#生成Html-文档" class="headerlink" title="生成Html 文档:"></a>生成Html 文档:</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">make html</div></pre></td></tr></table></figure><p><em>Makefile 修改</em></p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="comment"># Minimal makefile for Sphinx documentation</span></div><div class="line"><span class="comment">#</span></div><div class="line"></div><div class="line"><span class="comment"># You can set these variables from the command line.</span></div><div class="line">SPHINXOPTS    =</div><div class="line">SPHINXBUILD   = sphinx-build</div><div class="line">SOURCEDIR     = source</div><div class="line">BUILDDIR      = build</div><div class="line"></div><div class="line"><span class="comment"># Put it first so that "make" without argument is like "make help".</span></div><div class="line"><span class="section">help:</span></div><div class="line">@<span class="variable">$(SPHINXBUILD)</span> -M help <span class="string">"<span class="variable">$(SOURCEDIR)</span>"</span> <span class="string">"<span class="variable">$(BUILDDIR)</span>"</span> <span class="variable">$(SPHINXOPTS)</span> <span class="variable">$(O)</span></div><div class="line"></div><div class="line"><span class="meta"><span class="meta-keyword">.PHONY</span>: help Makefile</span></div><div class="line"></div><div class="line"><span class="comment"># Catch-all target: route all unknown targets to Sphinx using the new</span></div><div class="line"><span class="comment"># "make mode" option.  $(O) is meant as a shortcut for $(SPHINXOPTS).</span></div><div class="line"><span class="section">%: Makefile</span></div><div class="line">sphinx-apidoc -o  ./source xsdk</div><div class="line">@<span class="variable">$(SPHINXBUILD)</span> -M <span class="variable">$@</span> <span class="string">"<span class="variable">$(SOURCEDIR)</span>"</span> <span class="string">"<span class="variable">$(BUILDDIR)</span>"</span> <span class="variable">$(SPHINXOPTS)</span> <span class="variable">$(O)</span></div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;安装shpinx&quot;&gt;&lt;a href=&quot;#安装shpinx&quot; class=&quot;headerlink&quot; title=&quot;安装shpinx&quot;&gt;&lt;/a&gt;安装shpinx&lt;/h3&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td cl
      
    
    </summary>
    
      <category term="开发" scheme="https://xsec.7ever.cn/categories/%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="sphinx" scheme="https://xsec.7ever.cn/tags/sphinx/"/>
    
  </entry>
  
  <entry>
    <title>shell 颜色脚本</title>
    <link href="https://xsec.7ever.cn/2019/02/22/shell-color-script/"/>
    <id>https://xsec.7ever.cn/2019/02/22/shell-color-script/</id>
    <published>2019-02-22T03:10:19.000Z</published>
    <updated>2019-02-22T03:11:32.309Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">if which tput &gt;/dev/null 2&gt;&amp;1; then</div><div class="line">      ncolors=$(tput colors)</div><div class="line">  fi</div><div class="line">  if [ -t 1 ] &amp;&amp; [ -n "$ncolors" ] &amp;&amp; [ "$ncolors" -ge 8 ]; then</div><div class="line">    RED="$(tput setaf 1)"</div><div class="line">    GREEN="$(tput setaf 2)"</div><div class="line">    YELLOW="$(tput setaf 3)"</div><div class="line">    BLUE="$(tput setaf 4)"</div><div class="line">    BOLD="$(tput bold)"</div><div class="line">    NORMAL="$(tput sgr0)"</div><div class="line">  else</div><div class="line">    RED=""</div><div class="line">    GREEN=""</div><div class="line">    YELLOW=""</div><div class="line">    BLUE=""</div><div class="line">    BOLD=""</div><div class="line">    NORMAL=""</div><div class="line">  fi</div><div class="line"></div><div class="line">echo $&#123;RED&#125;Hello This is color World $&#123;NORMAL&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/di
      
    
    </summary>
    
      <category term="运维" scheme="https://xsec.7ever.cn/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="shell" scheme="https://xsec.7ever.cn/tags/shell/"/>
    
      <category term="tput" scheme="https://xsec.7ever.cn/tags/tput/"/>
    
  </entry>
  
  <entry>
    <title>osx 终端默认颜色配置</title>
    <link href="https://xsec.7ever.cn/2019/02/19/osx-terminal-color/"/>
    <id>https://xsec.7ever.cn/2019/02/19/osx-terminal-color/</id>
    <published>2019-02-19T02:16:06.000Z</published>
    <updated>2019-02-19T02:18:17.935Z</updated>
    
    <content type="html"><![CDATA[<ul><li><a href="https://github.com/chriskempson/tomorrow-theme" target="_blank" rel="noopener">tomorrow-theme</a></li><li><a href="https://github.com/altercation/solarized" target="_blank" rel="noopener">solarized</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/chriskempson/tomorrow-theme&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;tomorrow-theme&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https:
      
    
    </summary>
    
    
      <category term="osx" scheme="https://xsec.7ever.cn/tags/osx/"/>
    
      <category term="terminal" scheme="https://xsec.7ever.cn/tags/terminal/"/>
    
  </entry>
  
  <entry>
    <title>git 断点clone</title>
    <link href="https://xsec.7ever.cn/2019/02/15/git-clone-disconnect/"/>
    <id>https://xsec.7ever.cn/2019/02/15/git-clone-disconnect/</id>
    <published>2019-02-15T09:30:11.000Z</published>
    <updated>2019-03-14T02:32:24.016Z</updated>
    
    <content type="html"><![CDATA[<h3 id="断点续传下载代码"><a href="#断点续传下载代码" class="headerlink" title="断点续传下载代码:"></a>断点续传下载代码:</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="meta">$</span> mkdir git/dir</div><div class="line"><span class="meta">$</span> cd git/dir </div><div class="line"><span class="meta">$</span> git init </div><div class="line"><span class="meta">$</span> git fetch https://github.com/docker/distribution.git </div><div class="line"><span class="meta">$</span> git checkout FETCH_HEAD -b master</div><div class="line"><span class="meta">$</span> git remote add origin https://github.com/docker/distribution.git</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;断点续传下载代码&quot;&gt;&lt;a href=&quot;#断点续传下载代码&quot; class=&quot;headerlink&quot; title=&quot;断点续传下载代码:&quot;&gt;&lt;/a&gt;断点续传下载代码:&lt;/h3&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td 
      
    
    </summary>
    
      <category term="开发" scheme="https://xsec.7ever.cn/categories/%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="git" scheme="https://xsec.7ever.cn/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>nginx vim 设置语法高亮</title>
    <link href="https://xsec.7ever.cn/2019/01/24/nginx-vim/"/>
    <id>https://xsec.7ever.cn/2019/01/24/nginx-vim/</id>
    <published>2019-01-23T23:21:11.000Z</published>
    <updated>2019-01-23T23:22:42.337Z</updated>
    
    <content type="html"><![CDATA[<h4 id="下载文件语法插件"><a href="#下载文件语法插件" class="headerlink" title="下载文件语法插件:"></a>下载文件语法插件:</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cd /usr/share/vim/vim74/syntax &amp;&amp; wget -O nginx.vim https://vim.sourceforge.io/scripts/download_script.php?src_id=19394</div></pre></td></tr></table></figure><h4 id="设置文件类型："><a href="#设置文件类型：" class="headerlink" title="设置文件类型："></a>设置文件类型：</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">vim /usr/share/vim/vim74/filetype.vim </div><div class="line">au BufNewFile,BufRead nginx_path    setf nginx</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;下载文件语法插件&quot;&gt;&lt;a href=&quot;#下载文件语法插件&quot; class=&quot;headerlink&quot; title=&quot;下载文件语法插件:&quot;&gt;&lt;/a&gt;下载文件语法插件:&lt;/h4&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td 
      
    
    </summary>
    
    
      <category term="nginx" scheme="https://xsec.7ever.cn/tags/nginx/"/>
    
      <category term="vim" scheme="https://xsec.7ever.cn/tags/vim/"/>
    
  </entry>
  
  <entry>
    <title>golang.org 下载失败问题解决</title>
    <link href="https://xsec.7ever.cn/2019/01/23/golang-org-bad/"/>
    <id>https://xsec.7ever.cn/2019/01/23/golang-org-bad/</id>
    <published>2019-01-23T00:27:33.000Z</published>
    <updated>2019-01-23T00:30:18.580Z</updated>
    
    <content type="html"><![CDATA[<h4 id="第一步：-从github-com-下载对应的镜像包"><a href="#第一步：-从github-com-下载对应的镜像包" class="headerlink" title="第一步： 从github.com 下载对应的镜像包:"></a>第一步： 从github.com 下载对应的镜像包:</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">git clone https://github.com/golang/net.git $GOPATH/src/github.com/golang/net</div><div class="line">git clone https://github.com/golang/sys.git $GOPATH/src/github.com/golang/sys</div><div class="line">git clone https://github.com/golang/tools.git $GOPATH/src/github.com/golang/tools</div></pre></td></tr></table></figure><h4 id="第二步："><a href="#第二步：" class="headerlink" title="第二步："></a>第二步：</h4><p>将net、sys、tools三个文件夹放到$GOPATH/src/golang.org/x目录下。 或者Linux下可以创建软连接：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ln -s $GOPATH/src/github.com/golang $GOPATH/src/golang.org/x</div></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;第一步：-从github-com-下载对应的镜像包&quot;&gt;&lt;a href=&quot;#第一步：-从github-com-下载对应的镜像包&quot; class=&quot;headerlink&quot; title=&quot;第一步： 从github.com 下载对应的镜像包:&quot;&gt;&lt;/a&gt;第一步： 从gith
      
    
    </summary>
    
    
      <category term="golang" scheme="https://xsec.7ever.cn/tags/golang/"/>
    
  </entry>
  
  <entry>
    <title>修改运行起来的docker 容器的端口参数</title>
    <link href="https://xsec.7ever.cn/2019/01/09/docker-container-port-modify/"/>
    <id>https://xsec.7ever.cn/2019/01/09/docker-container-port-modify/</id>
    <published>2019-01-09T07:00:24.000Z</published>
    <updated>2019-01-09T07:06:06.352Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">起因: 一台带公网IP的docker服务器，同事费了半天劲，折腾出来一个容器,（不可逆，不能重新创建）。端口监听到了0.0.0.0。</div><div class="line">改也不是，不改也不是。</div></pre></td></tr></table></figure><h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案:"></a>解决方案:</h3><ul><li>先找到对应的容器ID </li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">docker ps -a</div></pre></td></tr></table></figure><p>拿到一串字符ID 。去对应的docker 运行目录中，找containers 目录,然后按照前缀找到对应的文件件。</p><p>没错，这个文件件就是运行起来的容器。</p><ul><li>关闭docker 服务， </li></ul><p><em>关闭前做好善后工作，记录好运行了哪些容器，确保你了解那些容器的运行参数</em></p><ul><li><p>修改下配置吧:</p><p>修改这个容器的hostconfig.json文件中的端口（原帖有人提到，如果config.v2.json里面也记录了端口，也要修改）</p></li><li><p>然后重新启动docker 服务</p></li><li><p>最后docker ps -a 看到对应的端口信息改了吧 </p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;c
      
    
    </summary>
    
      <category term="开发" scheme="https://xsec.7ever.cn/categories/%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="docker" scheme="https://xsec.7ever.cn/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>python3 使用click 构建入口程序</title>
    <link href="https://xsec.7ever.cn/2018/12/03/python3-click-samples/"/>
    <id>https://xsec.7ever.cn/2018/12/03/python3-click-samples/</id>
    <published>2018-12-03T08:24:03.000Z</published>
    <updated>2018-12-03T08:27:17.144Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="keyword">import</span> click</div><div class="line"></div><div class="line"><span class="meta">@click.command()</span></div><div class="line"><span class="meta">@click.option("-a",default="",help="action you want to do! &lt;syslog,cron&gt;")</span></div><div class="line"></div><div class="line"><span class="comment">### 必须包含a 参数，包含click.option 中定义的所有参数</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">do_command</span><span class="params">(a)</span>:</span></div><div class="line">    <span class="keyword">if</span> a == <span class="string">'syslog'</span>:</div><div class="line">        print(<span class="string">'start syslog info ....'</span>)</div><div class="line">    <span class="keyword">else</span> :</div><div class="line">        print(<span class="string">'./app.py --help'</span>)</div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    do_command()</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/d
      
    
    </summary>
    
    
      <category term="click" scheme="https://xsec.7ever.cn/tags/click/"/>
    
      <category term="python3" scheme="https://xsec.7ever.cn/tags/python3/"/>
    
  </entry>
  
  <entry>
    <title>多logstash 消费同一个kafka 做队列数据转发</title>
    <link href="https://xsec.7ever.cn/2018/10/25/many-logstash-one-kafka/"/>
    <id>https://xsec.7ever.cn/2018/10/25/many-logstash-one-kafka/</id>
    <published>2018-10-25T05:02:20.000Z</published>
    <updated>2018-10-25T05:05:33.849Z</updated>
    
    <content type="html"><![CDATA[<p>logstash-2.4.0 </p><h3 id="修改如下的代码"><a href="#修改如下的代码" class="headerlink" title="修改如下的代码:"></a>修改如下的代码:</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">vendor/bundle/jruby/1.9/gems/jruby-kafka-1.5.0-java/lib/jruby-kafka/group.rb</div><div class="line"></div><div class="line">run 部分的代码:  大约163行</div><div class="line">if @reset_beginning == &apos;from-beginning&apos;</div><div class="line">    #Java::kafka::utils::ZkUtils.maybeDeletePath(@zk_connect, &quot;/consumers/#&#123;@group_id&#125;&quot;)</div><div class="line">end</div></pre></td></tr></table></figure><h3 id="批量创建配置文件的脚本"><a href="#批量创建配置文件的脚本" class="headerlink" title="批量创建配置文件的脚本:"></a>批量创建配置文件的脚本:</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">#!/bin/bash</div><div class="line"></div><div class="line">rm -f conf/*</div><div class="line">num=10</div><div class="line"></div><div class="line">for((in=0;in&lt;$num;in++))</div><div class="line">do</div><div class="line">    cat hflow.conf  | sed &quot;s/&lt;data_num&gt;/$&#123;in&#125;/g&quot; &gt; conf/hflow_$&#123;in&#125;.conf</div><div class="line">done</div></pre></td></tr></table></figure><h3 id="hflow-conf-的模板"><a href="#hflow-conf-的模板" class="headerlink" title="hflow.conf 的模板:"></a>hflow.conf 的模板:</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">input &#123;</div><div class="line">    kafka &#123;</div><div class="line">        zk_connect =&gt; &quot;zk.your.own.com:2181/kafka/k1001&quot;</div><div class="line">        topic_id =&gt; &quot;&quot;</div><div class="line">        group_id =&gt; &quot;&quot;</div><div class="line">        reset_beginning =&gt; true</div><div class="line">        consumer_threads =&gt; 1</div><div class="line">        decorate_events =&gt; false </div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">    </div><div class="line">output &#123;</div><div class="line"></div><div class="line">    file&#123;</div><div class="line">        path =&gt; &quot;/data0/logstash/logstash-2.4.0/data/hflow_%&#123;+YYYY-MM-dd&#125;_&lt;data_num&gt;.log&quot;    </div><div class="line">    &#125;</div><div class="line"></div><div class="line">    file&#123;</div><div class="line">        path =&gt; &quot;/data0/logstash/logstash-2.4.0/data/all_%&#123;+YYYY-MM-dd&#125;.log&quot;    </div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="supervisor-配置"><a href="#supervisor-配置" class="headerlink" title="supervisor 配置:"></a>supervisor 配置:</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">[program:starflow]</div><div class="line">process_name=%(program_name)s_%(process_num)01d;</div><div class="line">numprocs=10</div><div class="line">command=/data0/logstash/logstash-2.4.0/bin/logstash -f /data0/logstash/logstash-2.4.0/conf/hflow_%(process_num)01d.conf</div><div class="line">directory=/data0/logstash/logstash-2.4.0</div><div class="line">autostart=true</div><div class="line">startsecs=1</div><div class="line">startretries=5</div><div class="line">user=root</div><div class="line">redirect_stderr=true</div><div class="line">stdout_logfile=/data0/logstash/logstash-2.4.0/logs/stdout.log</div><div class="line">stdout_logfile_maxbytes=1024MB</div><div class="line">stdout_logfile_backups=10</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;logstash-2.4.0 &lt;/p&gt;
&lt;h3 id=&quot;修改如下的代码&quot;&gt;&lt;a href=&quot;#修改如下的代码&quot; class=&quot;headerlink&quot; title=&quot;修改如下的代码:&quot;&gt;&lt;/a&gt;修改如下的代码:&lt;/h3&gt;&lt;figure class=&quot;highlight pla
      
    
    </summary>
    
    
      <category term="logstash" scheme="https://xsec.7ever.cn/tags/logstash/"/>
    
      <category term="kafka" scheme="https://xsec.7ever.cn/tags/kafka/"/>
    
  </entry>
  
  <entry>
    <title>lsattr chattr</title>
    <link href="https://xsec.7ever.cn/2018/10/17/lsattr-to-file/"/>
    <id>https://xsec.7ever.cn/2018/10/17/lsattr-to-file/</id>
    <published>2018-10-17T06:19:06.000Z</published>
    <updated>2018-10-17T06:21:43.348Z</updated>
    
    <content type="html"><![CDATA[<p>Linux的chattr命令， chattr命令用于改变文件属性。这项指令可改变存放在ext2文件系统上的文件或目录属性，这些属性共有以下8种模式：</p><ul><li>a：让文件或目录仅供附加用途。</li><li>b：不更新文件或目录的最后存取时间。</li><li>c：将文件或目录压缩后存放。</li><li>d：将文件或目录排除在倾倒操作之外。</li><li>i：不得任意更动文件或目录。</li><li>s：保密性删除文件或目录。</li><li>S：即时更新文件或目录。</li><li>u：预防以外删除。</li></ul><p>lsattr -a 可以查看对应的属性</p><p>对于特殊属性的操作<br>chattr +i name<br>chattr -i name</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Linux的chattr命令， chattr命令用于改变文件属性。这项指令可改变存放在ext2文件系统上的文件或目录属性，这些属性共有以下8种模式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;a：让文件或目录仅供附加用途。&lt;/li&gt;
&lt;li&gt;b：不更新文件或目录的最后存取时间。&lt;/li&gt;

      
    
    </summary>
    
      <category term="linux" scheme="https://xsec.7ever.cn/categories/linux/"/>
    
    
      <category term="linux" scheme="https://xsec.7ever.cn/tags/linux/"/>
    
      <category term="lsattr" scheme="https://xsec.7ever.cn/tags/lsattr/"/>
    
      <category term="chattr" scheme="https://xsec.7ever.cn/tags/chattr/"/>
    
  </entry>
  
  <entry>
    <title>osx关闭开启spotlight 服务</title>
    <link href="https://xsec.7ever.cn/2018/08/01/osx-close-open-spotlight/"/>
    <id>https://xsec.7ever.cn/2018/08/01/osx-close-open-spotlight/</id>
    <published>2018-07-31T17:36:40.000Z</published>
    <updated>2018-07-31T17:38:03.682Z</updated>
    
    <content type="html"><![CDATA[<p>必要的时候，需要关闭spotlight 服务，节省系统资源.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo mdutil -a -i off</div></pre></td></tr></table></figure><p>重新开启服务:<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo mdutil -a -i on</div></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;必要的时候，需要关闭spotlight 服务，节省系统资源.&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td
      
    
    </summary>
    
    
      <category term="osx" scheme="https://xsec.7ever.cn/tags/osx/"/>
    
      <category term="spotlight" scheme="https://xsec.7ever.cn/tags/spotlight/"/>
    
  </entry>
  
  <entry>
    <title>python解析指定dns附加timeout</title>
    <link href="https://xsec.7ever.cn/2018/07/16/python-query-dns/"/>
    <id>https://xsec.7ever.cn/2018/07/16/python-query-dns/</id>
    <published>2018-07-16T03:20:43.000Z</published>
    <updated>2018-07-16T03:21:34.000Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="keyword">import</span> dns.resolver</div><div class="line"></div><div class="line">Resolver = dns.resolver.Resolver()</div><div class="line">Resolver.timeout = <span class="number">0.2</span></div><div class="line">Resolver.lifetime = <span class="number">0.2</span></div><div class="line">Resolver.nameservers = [<span class="string">"10.210.3.100"</span>]</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">Query</span><span class="params">(domain,type_=<span class="string">"A"</span>)</span>:</span></div><div class="line">   <span class="keyword">return</span> Resolver.query(domain,type_).response.answer</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">foolQueryIps</span><span class="params">(domain,default=[])</span>:</span></div><div class="line">    queryIps = []</div><div class="line">    <span class="keyword">try</span>:</div><div class="line">        result = Query(domain)</div><div class="line">        <span class="keyword">for</span> item <span class="keyword">in</span> result:</div><div class="line">            <span class="keyword">for</span> item_ <span class="keyword">in</span> item:</div><div class="line">                queryIps.append(item_.address)</div><div class="line">    <span class="keyword">except</span> Exception,ex:</div><div class="line">        queryIps = default</div><div class="line">    <span class="keyword">return</span> queryIps</div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span> :</div><div class="line">    domain = <span class="string">"slavemysql.newaaa.sec.intra.sina.com.cn"</span></div><div class="line">    <span class="keyword">print</span> foolQueryIps(domain)</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/d
      
    
    </summary>
    
    
      <category term="dnspython" scheme="https://xsec.7ever.cn/tags/dnspython/"/>
    
  </entry>
  
  <entry>
    <title>centos 下一个安装superset 的shell</title>
    <link href="https://xsec.7ever.cn/2018/07/11/one-shell-install-superset-centos/"/>
    <id>https://xsec.7ever.cn/2018/07/11/one-shell-install-superset-centos/</id>
    <published>2018-07-11T08:55:08.000Z</published>
    <updated>2018-07-11T08:55:46.000Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></div><div class="line"></div><div class="line">pip install --upgrade setuptools</div><div class="line">yum install gcc python-devel g++ gcc-c++ cyrus-sasl cyrus-sasl-devel -y</div><div class="line"></div><div class="line"></div><div class="line">exit</div><div class="line"></div><div class="line">fabmanager create-admin --app superset</div><div class="line"></div><div class="line"><span class="meta">#</span><span class="bash"> Initialize the database</span></div><div class="line">superset db upgrade</div><div class="line"></div><div class="line"><span class="meta">#</span><span class="bash"> Load some data to play with</span></div><div class="line">superset load_examples</div><div class="line"></div><div class="line"><span class="meta">#</span><span class="bash"> Create default roles and permissions</span></div><div class="line">superset init</div><div class="line"></div><div class="line"><span class="meta">#</span><span class="bash"> Start the web server on port 8088</span></div><div class="line">superset runserver -p 8088</div><div class="line"></div><div class="line"><span class="meta">#</span><span class="bash"> To start a development web server, use the -d switch</span></div><div class="line"><span class="meta">#</span><span class="bash"> superset runserver -d</span></div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/di
      
    
    </summary>
    
    
      <category term="superset" scheme="https://xsec.7ever.cn/tags/superset/"/>
    
  </entry>
  
  <entry>
    <title>postgreSQL基本使用指南</title>
    <link href="https://xsec.7ever.cn/2018/07/06/postgreSQL-basic-usage/"/>
    <id>https://xsec.7ever.cn/2018/07/06/postgreSQL-basic-usage/</id>
    <published>2018-07-06T07:49:01.000Z</published>
    <updated>2018-07-06T08:24:52.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="简单介绍"><a href="#简单介绍" class="headerlink" title="简单介绍:"></a>简单介绍:</h4><p>PostgreSQL的官方网站是：<a href="https://www.postgresql.org/" target="_blank" rel="noopener">https://www.postgresql.org/</a></p><p>简单工具:</p><ul><li><p>psql<br>cli 客户端</p></li><li><p>pg_ctl<br>服务控制工具</p></li><li><p>initdb<br>数据库初始化工具</p></li></ul><h4 id="初始化"><a href="#初始化" class="headerlink" title="初始化:"></a>初始化:</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">useradd -g postgres postgres </div><div class="line">mkdir -p /data0/pgsql/data</div><div class="line">chown -R postgres:postgres /data0/pgsql/data</div><div class="line">./initdb -E UNICODE -D /mnt/pgsql/data</div><div class="line">cat postgresql.conf | grep -n listen_addresses</div></pre></td></tr></table></figure><h5 id="pg-ctl-的一些帮助"><a href="#pg-ctl-的一些帮助" class="headerlink" title="pg_ctl 的一些帮助:"></a>pg_ctl 的一些帮助:</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">pg_ctl init[db] [-D DATADIR] [-s] [-o OPTIONS]</div><div class="line">pg_ctl start    [-D DATADIR] [-l FILENAME] [-W] [-t SECS] [-s]</div><div class="line">                [-o OPTIONS] [-p PATH] [-c]</div><div class="line">pg_ctl stop     [-D DATADIR] [-m SHUTDOWN-MODE] [-W] [-t SECS] [-s]</div><div class="line">pg_ctl restart  [-D DATADIR] [-m SHUTDOWN-MODE] [-W] [-t SECS] [-s]</div><div class="line">                [-o OPTIONS] [-c]</div><div class="line">pg_ctl reload   [-D DATADIR] [-s]</div><div class="line">pg_ctl status   [-D DATADIR]</div><div class="line">pg_ctl promote  [-D DATADIR] [-W] [-t SECS] [-s]</div><div class="line">pg_ctl kill     SIGNALNAME PID</div></pre></td></tr></table></figure><h4 id="简单的工具脚本"><a href="#简单的工具脚本" class="headerlink" title="简单的工具脚本:"></a>简单的工具脚本:</h4><ul><li><p>README 中的一些工具脚本:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">./configure</div><div class="line">make</div><div class="line">su</div><div class="line">make install</div><div class="line">adduser postgres</div><div class="line">mkdir /usr/local/pgsql/data</div><div class="line">chown postgres /usr/local/pgsql/data</div><div class="line">su - postgres</div><div class="line">/usr/local/pgsql/bin/initdb -D /usr/local/pgsql/data</div><div class="line">/usr/local/pgsql/bin/postgres -D /usr/local/pgsql/data &gt;logfile 2&gt;&amp;1 &amp;</div></pre></td></tr></table></figure></li><li><p>restart.sh</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">su postgres -c "/opt/postgreql/bin/pg_ctl restart -l /opt/postgreql/run/logs/postgreql.log -D /opt/postgreql/run/data "</div></pre></td></tr></table></figure></li><li><p>stop.sh 关闭服务:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">su postgres -c "/opt/postgreql/bin/pg_ctl stop -l /opt/postgreql/run/logs/postgreql.log -D /opt/postgreql/run/data "</div></pre></td></tr></table></figure></li><li><p>连接主机脚本:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">psql -U cmdb -h localhost -d cmdb ### 不适用任何配置信息，在本机执行pgsql 则使用超级管理员连接数据库</div></pre></td></tr></table></figure></li><li><p>基本sql:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"></div><div class="line">CREATE ROLE name;</div><div class="line">CREATE USER name;</div><div class="line">grantall on schema csm_ca to public;</div><div class="line"></div><div class="line">\du;</div><div class="line"></div><div class="line">GRANT UPDATE ON demo TO demo_role; --赋予demo_role demo表的update权限</div><div class="line">GRANT SELECT ON ALL TABLES IN SCHEMA PUBLIC to demo_role; --赋予demo_role所有表的SELECT权限</div><div class="line"></div><div class="line">CREATE DATABASE database_name;</div><div class="line">drop database testdb;</div><div class="line">CREATE TABLE table_name(  </div><div class="line">   column1 datatype,  </div><div class="line">   column2 datatype,  </div><div class="line">   column3 datatype,  </div><div class="line">   .....  </div><div class="line">   columnN datatype,  </div><div class="line">   PRIMARY KEY( one or more columns )  </div><div class="line">);</div></pre></td></tr></table></figure></li><li><p>基于主机授权:<br>pg_hba.conf</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">host    all             all             127.0.0.1/32            trust</div><div class="line">host    all             all             10.210.12.18/32            trust</div><div class="line">host    all             all             10.210.12.17/32            trust</div><div class="line">host    all             all             ::1/128                 trust</div><div class="line">host    replication     all             127.0.0.1/32            trust</div><div class="line">host    replication     all             ::1/128                 trust</div></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;简单介绍&quot;&gt;&lt;a href=&quot;#简单介绍&quot; class=&quot;headerlink&quot; title=&quot;简单介绍:&quot;&gt;&lt;/a&gt;简单介绍:&lt;/h4&gt;&lt;p&gt;PostgreSQL的官方网站是：&lt;a href=&quot;https://www.postgresql.org/&quot; targe
      
    
    </summary>
    
    
      <category term="postgreSQL" scheme="https://xsec.7ever.cn/tags/postgreSQL/"/>
    
  </entry>
  
  <entry>
    <title>golang使用yaml做配置信息</title>
    <link href="https://xsec.7ever.cn/2018/07/04/golang-use-yaml/"/>
    <id>https://xsec.7ever.cn/2018/07/04/golang-use-yaml/</id>
    <published>2018-07-04T05:30:55.000Z</published>
    <updated>2018-07-04T06:10:20.000Z</updated>
    
    <content type="html"><![CDATA[<ul><li>安装 gopkg.in/yaml.v2</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span> go get gopkg.in/yaml.v2</div></pre></td></tr></table></figure><figure class="highlight golang"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="keyword">package</span> main</div><div class="line"></div><div class="line"><span class="comment">/****</span></div><div class="line"><span class="comment"></span></div><div class="line"><span class="comment">yaml document content:</span></div><div class="line"><span class="comment"></span></div><div class="line"><span class="comment">enable: true</span></div><div class="line"><span class="comment">path: /usr/local</span></div><div class="line"><span class="comment">#white: [ hello world, one item, two items ]</span></div><div class="line"><span class="comment">white:</span></div><div class="line"><span class="comment">- 1</span></div><div class="line"><span class="comment">- 2</span></div><div class="line"><span class="comment">- 3</span></div><div class="line"><span class="comment">- 4</span></div><div class="line"><span class="comment">item:</span></div><div class="line"><span class="comment">    name: aries</span></div><div class="line"><span class="comment">    port: 22</span></div><div class="line"><span class="comment">black:</span></div><div class="line"><span class="comment">-</span></div><div class="line"><span class="comment">  name: 10.210.12.17</span></div><div class="line"><span class="comment">  port: 6379</span></div><div class="line"><span class="comment">-</span></div><div class="line"><span class="comment">  name: 10.210.12.18</span></div><div class="line"><span class="comment">  port: 3306</span></div><div class="line"><span class="comment"></span></div><div class="line"><span class="comment">nodes:</span></div><div class="line"><span class="comment">- &#123; name: 10.210.12.17 , port: 3306&#125;</span></div><div class="line"><span class="comment">- &#123; name: 10.210.12.18 , port: 3306&#125;</span></div><div class="line"><span class="comment">- &#123; name: 10.211.221.3, port: 3306&#125;</span></div><div class="line"><span class="comment"></span></div><div class="line"><span class="comment">*****/</span></div><div class="line"></div><div class="line"><span class="keyword">import</span> (</div><div class="line"><span class="string">"gopkg.in/yaml.v2"</span></div><div class="line"><span class="string">"io/ioutil"</span></div><div class="line"><span class="string">"log"</span></div><div class="line">)</div><div class="line"></div><div class="line"><span class="keyword">type</span> ConfigType <span class="keyword">struct</span> &#123;</div><div class="line">Enabled <span class="keyword">bool</span>                <span class="string">`yaml:"enabled"`</span></div><div class="line">Path    <span class="keyword">string</span>              <span class="string">`yaml:"path"`</span></div><div class="line">White   []<span class="keyword">string</span>            <span class="string">`yaml:white`</span></div><div class="line">Black   []<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">string</span> <span class="string">`yaml:black`</span></div><div class="line">Item    <span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">string</span>   <span class="string">`yaml:item`</span></div><div class="line">Nodes   []<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">string</span> <span class="string">`yaml:nodes`</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">var</span> (</div><div class="line">Config ConfigType</div><div class="line">)</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">init</span><span class="params">()</span></span> &#123;</div><div class="line">yamlFile, err := ioutil.ReadFile(<span class="string">"conf.yaml"</span>)</div><div class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</div><div class="line">log.Printf(<span class="string">"yamlFile.Get err   #%v "</span>, err)</div><div class="line">&#125;</div><div class="line">err = yaml.Unmarshal(yamlFile, &amp;Config)</div><div class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</div><div class="line">log.Fatalf(<span class="string">"Unmarshal: %v"</span>, err)</div><div class="line">&#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure><p><a href="http://nodeca.github.io/js-yaml/" target="_blank" rel="noopener">YAML语法预览</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;安装 gopkg.in/yaml.v2&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/
      
    
    </summary>
    
    
      <category term="golang" scheme="https://xsec.7ever.cn/tags/golang/"/>
    
      <category term="yaml" scheme="https://xsec.7ever.cn/tags/yaml/"/>
    
  </entry>
  
  <entry>
    <title>golang 使用flag 传递参数</title>
    <link href="https://xsec.7ever.cn/2018/07/02/golang-use-flag-with-skip/"/>
    <id>https://xsec.7ever.cn/2018/07/02/golang-use-flag-with-skip/</id>
    <published>2018-07-02T06:59:45.000Z</published>
    <updated>2018-07-02T07:02:50.000Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight golang"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> main</div><div class="line"></div><div class="line"><span class="keyword">import</span> (</div><div class="line"><span class="string">"flag"</span></div><div class="line"><span class="string">"fmt"</span></div><div class="line"><span class="string">"os"</span></div><div class="line">)</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</div><div class="line">ok := flag.Bool(<span class="string">"ok"</span>, <span class="literal">false</span>, <span class="string">"is ok"</span>)</div><div class="line">flag.CommandLine.Parse(os.Args[<span class="number">2</span>:])</div><div class="line">action := os.Args[<span class="number">1</span>]</div><div class="line">fmt.Println(<span class="string">"Action: "</span>, action)</div><div class="line">fmt.Println(*ok)</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="运行参数"><a href="#运行参数" class="headerlink" title="运行参数:"></a>运行参数:</h2><figure class="highlight golang"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ ./flag &lt;action&gt; --ok</div></pre></td></tr></table></figure><h2 id="传递参数的方法"><a href="#传递参数的方法" class="headerlink" title="传递参数的方法:"></a>传递参数的方法:</h2><figure class="highlight golang"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">./flag &lt;action&gt; -ok</div><div class="line">./flag &lt;action&gt; --ok</div><div class="line">./flag &lt;action&gt; --ok=<span class="literal">true</span></div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight golang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/d
      
    
    </summary>
    
      <category term="开发" scheme="https://xsec.7ever.cn/categories/%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="golang" scheme="https://xsec.7ever.cn/tags/golang/"/>
    
      <category term="flag" scheme="https://xsec.7ever.cn/tags/flag/"/>
    
  </entry>
  
  <entry>
    <title>一些git的基本操作</title>
    <link href="https://xsec.7ever.cn/2018/05/04/some-git-tips/"/>
    <id>https://xsec.7ever.cn/2018/05/04/some-git-tips/</id>
    <published>2018-05-04T01:37:06.000Z</published>
    <updated>2019-03-14T02:34:48.133Z</updated>
    
    <content type="html"><![CDATA[<ul><li><p>创建分支:<br>git checkout -b <branch_name></branch_name></p></li><li><p>切换分支:<br>git checkout <branch_name></branch_name></p></li><li><p>对比分支的变化:<br>git log branch1 ^branch2    ##查看branch1 中包含，但是branch2中没有的变化</p></li><li><p>不明确的分支变化:<br>git log branch1…branch2    ##对比两个branch的变化</p></li><li><p>查看某次提交的详细变化:<br>git show <change_name></change_name></p></li><li><p>合并某次变化到当前分支:<br>git log –oneline <branch_name><br>git cherry-pick commit-id   ### 合并某次提交到当前分支<br>git push origin upstream  </branch_name></p></li><li><p>删除远程分支:<br>git branch -d <dev_banch> # 删除本地分支<br>git push origin –delete <del_branch> #删除远程分支</del_branch></dev_banch></p></li><li><p>删除远程commits，谨记，错误提交加密信息到github时候需要:<br> 操作还是很麻烦的，不小心就丢了代码了，所以小心，小心再小心操作</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">git checkout -b &lt;n_branch&gt;   ## 创建临时分支</div><div class="line">git reset --hard &lt;commit_id&gt; ## 退回到之前的版本</div><div class="line">git push -b origin &lt;n_branch&gt;   # 推送一个远程分支</div><div class="line">git cherry-pick                 # 合并指定提交</div><div class="line">git branch -d master            #master 分支出错，先删除远程分支</div><div class="line">git push origin --delete master #删除master的远程分支</div><div class="line">git git checkout -b master      #重新生成master 分支</div><div class="line">git push -b origin master       #推送本地master分支到远程</div></pre></td></tr></table></figure></li><li><p>合并fork源提交到当前master ，用于fork 的项目:</p></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="meta">$</span><span class="bash"> git fetch https://github.com/opensec-cn/kunpeng.git master  <span class="comment">## 或者其他分支的名字</span></span></div><div class="line"><span class="meta">$</span><span class="bash"> git checkout FETCH_HEAD -b remote <span class="comment"># 或者自己定义的名字</span></span></div><div class="line"><span class="meta">$</span><span class="bash"> git checkout master</span></div><div class="line"><span class="meta">$</span><span class="bash"> git <span class="built_in">log</span> remote ^master</span></div><div class="line"><span class="meta">$</span><span class="bash"> git cherry-pick commit-id</span></div><div class="line"><span class="meta">$</span><span class="bash"> git push origin master</span></div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;&lt;p&gt;创建分支:&lt;br&gt;git checkout -b &lt;branch_name&gt;&lt;/branch_name&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;切换分支:&lt;br&gt;git checkout &lt;branch_name&gt;&lt;/branch_name&gt;&lt;/p&gt;
&lt;/li
      
    
    </summary>
    
      <category term="开发" scheme="https://xsec.7ever.cn/categories/%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="git" scheme="https://xsec.7ever.cn/tags/git/"/>
    
  </entry>
  
</feed>
