<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Simple Xsec World</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://xsec.7ever.cn/"/>
  <updated>2017-10-05T09:03:06.000Z</updated>
  <id>https://xsec.7ever.cn/</id>
  
  <author>
    <name>Xingyue</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>expect 脚本自动登录ssh服务器</title>
    <link href="https://xsec.7ever.cn/2017/10/05/expect-ssh-login/"/>
    <id>https://xsec.7ever.cn/2017/10/05/expect-ssh-login/</id>
    <published>2017-10-05T09:00:33.000Z</published>
    <updated>2017-10-05T09:03:06.000Z</updated>
    
    <content type="html"><![CDATA[<p>配置如下的expect脚本:<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span>!/usr/bin/expect</div><div class="line"></div><div class="line">trap &#123;</div><div class="line"> set rows [stty rows]</div><div class="line"> set cols [stty columns]</div><div class="line"> stty rows $rows columns $cols &lt; $spawn_out(slave,name)</div><div class="line">&#125; WINCH</div><div class="line"></div><div class="line">set mode [lindex $argv 0]  </div><div class="line">set user xingyue</div><div class="line"></div><div class="line">switch $mode &#123;</div><div class="line">    "" &#123;</div><div class="line">        set ip &lt;ip&gt;</div><div class="line">        set pwd &lt;your pwd&gt;</div><div class="line">    &#125;</div><div class="line">    "www" &#123;</div><div class="line">        set ip &lt;ip&gt;</div><div class="line">        set pwd &lt;your pwd&gt;</div><div class="line">    &#125;</div><div class="line">    "dx" &#123;</div><div class="line">        set ip &lt;ip&gt;</div><div class="line">        set pwd &lt;your pwd&gt;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">set timeout 3600</div><div class="line">spawn ssh $user@$ip</div><div class="line">expect "*password:" </div><div class="line">send "$pwd\r"</div><div class="line">expect "*PASSCODE:" #可能需要修改这一部分</div><div class="line">interact</div></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;配置如下的expect脚本:&lt;br&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;d
      
    
    </summary>
    
      <category term="系统" scheme="https://xsec.7ever.cn/categories/%E7%B3%BB%E7%BB%9F/"/>
    
    
      <category term="expect" scheme="https://xsec.7ever.cn/tags/expect/"/>
    
      <category term="ssh" scheme="https://xsec.7ever.cn/tags/ssh/"/>
    
  </entry>
  
  <entry>
    <title>centos7固定ip</title>
    <link href="https://xsec.7ever.cn/2017/10/05/centos7-fix-ipaddress/"/>
    <id>https://xsec.7ever.cn/2017/10/05/centos7-fix-ipaddress/</id>
    <published>2017-10-05T08:55:14.000Z</published>
    <updated>2017-10-05T08:58:29.000Z</updated>
    
    <content type="html"><![CDATA[<p>配置文件 /etc/sysconfig/network-scripts/ifcfg-xxxxx :<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">BOOTPROTO="static" #dhcp改为static   </div><div class="line">ONBOOT="yes" #开机启用本配置  </div><div class="line">IPADDR=192.168.7.106 #静态IP  </div><div class="line">GATEWAY=192.168.7.1 #默认网关  </div><div class="line">NETMASK=255.255.255.0 #子网掩码  </div><div class="line">DNS1=192.168.7.1 #DNS 配置  </div><div class="line"></div><div class="line"></div><div class="line"><span class="meta">#</span>#修改为:</div><div class="line">BOOTPROTO=static</div><div class="line">IPADDR=192.168.122.216</div><div class="line">GATEWAY=192.168.122.1</div><div class="line">NETMASK=255.255.255.0</div><div class="line">DNS1=192.168.122.1 </div><div class="line">DNS2=192.168.122.2</div></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;配置文件 /etc/sysconfig/network-scripts/ifcfg-xxxxx :&lt;br&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;
      
    
    </summary>
    
      <category term="系统" scheme="https://xsec.7ever.cn/categories/%E7%B3%BB%E7%BB%9F/"/>
    
    
      <category term="centos7" scheme="https://xsec.7ever.cn/tags/centos7/"/>
    
  </entry>
  
  <entry>
    <title>pip配置可用的其他更新源</title>
    <link href="https://xsec.7ever.cn/2017/10/05/pip-aliyun-https/"/>
    <id>https://xsec.7ever.cn/2017/10/05/pip-aliyun-https/</id>
    <published>2017-10-05T08:28:26.000Z</published>
    <updated>2017-10-05T08:36:23.000Z</updated>
    
    <content type="html"><![CDATA[<p>创建当前用户目录下的.pip子目录(~/.pip/),创建文本文件: <em>pip.conf</em> ，写入内容为:<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[global]</div><div class="line">trusted-host=mirrors.aliyun.com</div><div class="line">index-url=http://mirrors.aliyun.com/pypi/simple/</div></pre></td></tr></table></figure></p><hr><h2 id="注意-一定要在当前用户目录下创建对应的文件"><a href="#注意-一定要在当前用户目录下创建对应的文件" class="headerlink" title=" 注意 一定要在当前用户目录下创建对应的文件"></a> <em>注意</em> 一定要在当前用户目录下创建对应的文件</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;创建当前用户目录下的.pip子目录(~/.pip/),创建文本文件: &lt;em&gt;pip.conf&lt;/em&gt; ，写入内容为:&lt;br&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div c
      
    
    </summary>
    
      <category term="开发" scheme="https://xsec.7ever.cn/categories/%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="pip" scheme="https://xsec.7ever.cn/tags/pip/"/>
    
  </entry>
  
  <entry>
    <title>使用pandas做数据分析</title>
    <link href="https://xsec.7ever.cn/2017/10/03/pandas-data-sight/"/>
    <id>https://xsec.7ever.cn/2017/10/03/pandas-data-sight/</id>
    <published>2017-10-03T01:01:58.000Z</published>
    <updated>2017-10-04T07:19:41.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="安装"><a href="#安装" class="headerlink" title="安装:"></a>安装:</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span><span class="bash"> pip install pandas</span></div></pre></td></tr></table></figure><p>安装完成，系统中会包含三个包:numpy, pytz, pandas,主要使用的pandas,numpy 是一个扩展的数组</p><h4 id="引入类库"><a href="#引入类库" class="headerlink" title="引入类库:"></a>引入类库:</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</div><div class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</div><div class="line"><span class="keyword">from</span> pandas <span class="keyword">import</span> Series, DataFrame</div></pre></td></tr></table></figure><h4 id="Series-一个hash索引的数组，比普通的dict，map-计算更方便快捷"><a href="#Series-一个hash索引的数组，比普通的dict，map-计算更方便快捷" class="headerlink" title="Series 一个hash索引的数组，比普通的dict，map 计算更方便快捷:"></a>Series 一个hash索引的数组，比普通的dict，map 计算更方便快捷:</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#初始化</span></div><div class="line">ser = Series([<span class="number">6</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">9</span>,<span class="number">2</span>],index=[<span class="string">'A'</span>,<span class="string">'B'</span>,<span class="string">'C'</span>,<span class="string">'D'</span>,<span class="string">'E'</span>])</div></pre></td></tr></table></figure><p>将得到一个以A,B,C,D,E为键，值为6,5,4,9,2的数组</p><h5 id="计算"><a href="#计算" class="headerlink" title="计算"></a>计算</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">nser = ser[ser &lt; <span class="number">5</span>] <span class="comment">#将得到小于5的数组</span></div><div class="line">nser = nser + <span class="number">10</span> <span class="comment">#将所有的值都添加10</span></div><div class="line">nser = nser &lt; <span class="number">10</span> <span class="comment">#转成boolean</span></div><div class="line"><span class="string">'A'</span> <span class="keyword">in</span> nser <span class="comment">#判断包含关系</span></div><div class="line">A = Series([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>])</div><div class="line">B = Series([<span class="number">2</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>])</div><div class="line">C = A + B <span class="comment">#相加</span></div></pre></td></tr></table></figure><h4 id="二维检索计算的基本单位DataFrame"><a href="#二维检索计算的基本单位DataFrame" class="headerlink" title="二维检索计算的基本单位DataFrame"></a>二维检索计算的基本单位DataFrame</h4><h5 id="数据加载构成DataFrame"><a href="#数据加载构成DataFrame" class="headerlink" title="数据加载构成DataFrame"></a>数据加载构成DataFrame</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">df=pd.read_csv(<span class="string">"/Users/vbabu/Documents/personal/MyGitWork/csv/mls-salaries-2016.csv"</span>)</div><div class="line">df=pd.read_json(<span class="string">"/Users/vbabu/Documents/personal/MyGitWork/csv/mls-salaries-2016.json"</span>)</div></pre></td></tr></table></figure><h5 id="获取头，尾的数据"><a href="#获取头，尾的数据" class="headerlink" title="获取头，尾的数据:"></a>获取头，尾的数据:</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">df.head(count)</div><div class="line">df.tail(count)</div><div class="line">df.info() <span class="comment">#获取DataFrame的相关存储设置</span></div><div class="line">df[<span class="string">'index_name'</span>].head(count) <span class="comment"># 获取某一列的头数据</span></div><div class="line">df[<span class="string">'new_name'</span>] = df[new_name + <span class="number">10</span>] <span class="comment">#添加新列，并且赋值</span></div><div class="line"><span class="keyword">del</span> df[<span class="string">'name'</span>] <span class="comment">#删除列</span></div><div class="line">df.fillna(<span class="string">'5'</span>) <span class="comment">#填充null的数据</span></div></pre></td></tr></table></figure><h5 id="简单计算"><a href="#简单计算" class="headerlink" title="简单计算:"></a>简单计算:</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">df.sum(axis=<span class="number">1</span>)</div><div class="line">df.sum(axis=<span class="number">0</span>)</div><div class="line">df.min(axis=<span class="number">0</span>) <span class="comment">#求最小值</span></div><div class="line">df.max(axis=<span class="number">0</span>) <span class="comment">#求最小值</span></div><div class="line">df.groupby([<span class="string">'name'</span>]).count().sort_values().head() <span class="comment">#相当于graylog里边的quick values</span></div></pre></td></tr></table></figure><h5 id="数据删减"><a href="#数据删减" class="headerlink" title="数据删减"></a>数据删减</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">dframe.drop(<span class="string">'B'</span>) <span class="comment">#删除数据</span></div><div class="line">dframe.append([]) <span class="comment">#添加数据</span></div><div class="line">df = dframe[ <span class="string">'B'</span> &gt; <span class="number">10</span>] <span class="comment">#数据筛选</span></div></pre></td></tr></table></figure><h5 id="数据排序"><a href="#数据排序" class="headerlink" title="数据排序:"></a>数据排序:</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">df.sort_values(ascending=<span class="keyword">True</span>|<span class="keyword">False</span>)</div></pre></td></tr></table></figure><p><a href="https://kanoki.org/2017/07/16/pandas-in-a-nutshell/#Selecting-Index" target="_blank" rel="external">数据翻译来源https://kanoki.org/2017/07/16/pandas-in-a-nutshell/#Selecting-Index</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装:&quot;&gt;&lt;/a&gt;安装:&lt;/h4&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div
      
    
    </summary>
    
      <category term="数据分析" scheme="https://xsec.7ever.cn/categories/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
    
      <category term="pandas" scheme="https://xsec.7ever.cn/tags/pandas/"/>
    
      <category term="python" scheme="https://xsec.7ever.cn/tags/python/"/>
    
      <category term="pip" scheme="https://xsec.7ever.cn/tags/pip/"/>
    
  </entry>
  
  <entry>
    <title>使用tcpreplay系列命令做流量转发</title>
    <link href="https://xsec.7ever.cn/2017/09/28/tcp-replay/"/>
    <id>https://xsec.7ever.cn/2017/09/28/tcp-replay/</id>
    <published>2017-09-28T10:20:35.000Z</published>
    <updated>2017-09-29T03:20:59.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="注，仅供参考，不要使用在生产环境中"><a href="#注，仅供参考，不要使用在生产环境中" class="headerlink" title="注，仅供参考，不要使用在生产环境中"></a>注，仅供参考，不要使用在生产环境中</h2><p>centos 安装:<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span><span class="bash"> yum install epel-release </span></div><div class="line"><span class="meta">$</span><span class="bash"> yum install tcpreplay</span></div></pre></td></tr></table></figure></p><p>使用tcpdump 抓取数据,及查看数据包命令:<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span><span class="bash"> tcpdump -vv  -i eth1 host 192.168.1.123 -w test.cap</span></div><div class="line"><span class="meta">$</span><span class="bash"> tcpdump -r test.cap</span></div></pre></td></tr></table></figure></p><p>使用tcpprep提前解析数据:<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span><span class="bash"> tcpprep -i test.cap -a client -o test.cache</span></div></pre></td></tr></table></figure></p><p>使用tcprewrite改写数据:<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span><span class="bash"> tcprewrite --endpoints=10.210.128.63:10.210.3.100  -i test.cap -c test.cache -o rewrite.cap</span></div></pre></td></tr></table></figure></p><p>使用tcpreplay重放数据:<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span><span class="bash"> tcpreplay -c test.cache -i lo -I eth0 to3.100.cap</span></div></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;注，仅供参考，不要使用在生产环境中&quot;&gt;&lt;a href=&quot;#注，仅供参考，不要使用在生产环境中&quot; class=&quot;headerlink&quot; title=&quot;注，仅供参考，不要使用在生产环境中&quot;&gt;&lt;/a&gt;注，仅供参考，不要使用在生产环境中&lt;/h2&gt;&lt;p&gt;centos 安装:
      
    
    </summary>
    
      <category term="系统" scheme="https://xsec.7ever.cn/categories/%E7%B3%BB%E7%BB%9F/"/>
    
    
      <category term="tcpdump" scheme="https://xsec.7ever.cn/tags/tcpdump/"/>
    
      <category term="tcpreplay" scheme="https://xsec.7ever.cn/tags/tcpreplay/"/>
    
      <category term="centos" scheme="https://xsec.7ever.cn/tags/centos/"/>
    
  </entry>
  
  <entry>
    <title>使用python的pcap模块构建tcpdump系统</title>
    <link href="https://xsec.7ever.cn/2017/09/26/python-tcpdump/"/>
    <id>https://xsec.7ever.cn/2017/09/26/python-tcpdump/</id>
    <published>2017-09-26T02:17:43.000Z</published>
    <updated>2017-09-28T02:27:15.000Z</updated>
    
    <content type="html"><![CDATA[<p>libcap-devel 及 pypcap 安装<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span><span class="bash"> yum install libpcap-devel </span></div><div class="line"><span class="meta">$</span><span class="bash"> pip install pypcap</span></div><div class="line"><span class="meta">$</span><span class="bash"> pip install dpkt</span></div></pre></td></tr></table></figure></p><p>简单的抓取80端口的数据包:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#coding=utf-8</span></div><div class="line"></div><div class="line"><span class="keyword">import</span> pcap</div><div class="line"><span class="keyword">import</span> dpkt</div><div class="line"></div><div class="line">pc = pcap.pcap(<span class="string">'eth0'</span>)</div><div class="line"></div><div class="line">pc.setfilter(<span class="string">'tcp port 80'</span>)</div><div class="line"><span class="keyword">for</span> ptime,pdata <span class="keyword">in</span> pc:</div><div class="line">frame = dpkt.ethernet.Ethernet(pdata)</div><div class="line">ip = <span class="string">'%d.%d.%d.%d'</span> % tuple(map(ord,list(frame.data.dst)))</div><div class="line">transfer = frame.data.data.__class__.__name__</div><div class="line"><span class="keyword">print</span> ip,transfer</div><div class="line"><span class="keyword">print</span> frame.data.data</div></pre></td></tr></table></figure></p><p>数据分析的几个关键点:</p><ul><li>pcap.pcap的参数网卡name 一般是ech0</li><li>pc.setfilter 数据包的过滤器,比如 tcp port 80 , udp port 53 filter语法遵循<a href="/bpf/">bpf语法</a></li><li>解析成frame frame = dpkt.ethernet.Ethernet(pdata) 数据的原内容放在frame.data.data中</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;libcap-devel 及 pypcap 安装&lt;br&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;
      
    
    </summary>
    
      <category term="开发" scheme="https://xsec.7ever.cn/categories/%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="python" scheme="https://xsec.7ever.cn/tags/python/"/>
    
      <category term="tcpdump" scheme="https://xsec.7ever.cn/tags/tcpdump/"/>
    
      <category term="pcap" scheme="https://xsec.7ever.cn/tags/pcap/"/>
    
  </entry>
  
  <entry>
    <title>终端输出带颜色的字符</title>
    <link href="https://xsec.7ever.cn/2017/09/25/echo-with-color/"/>
    <id>https://xsec.7ever.cn/2017/09/25/echo-with-color/</id>
    <published>2017-09-25T03:24:22.000Z</published>
    <updated>2017-10-01T03:19:25.000Z</updated>
    
    <content type="html"><![CDATA[<p>输出以下的格式 \033[背景色;前景色;显示方式m</p><p>各颜色编码说明：</p><table><thead><tr><th>前景色</th><th>背景色</th><th>颜色</th></tr></thead><tbody><tr><td>  30</td><td>40</td><td>黑色</td></tr><tr><td>  31</td><td>41</td><td>红色</td></tr><tr><td>  32</td><td>42</td><td>绿色</td></tr><tr><td>  33</td><td>43</td><td>黃色</td></tr><tr><td>  34</td><td>44</td><td>蓝色</td></tr><tr><td>  35</td><td>45</td><td>紫红色</td></tr><tr><td>  36</td><td>46</td><td>青蓝色</td></tr><tr><td>  37</td><td>47</td><td>白色</td></tr><tr><td>  37</td><td>0</td><td>当前背景</td></tr></tbody></table><p>几种不通的显示方式:</p><table><thead><tr><th>显示方式</th><th>意义</th></tr></thead><tbody><tr><td>0</td><td>终端默认设置</td></tr><tr><td>1</td><td>高亮显示</td></tr><tr><td>4</td><td>使用下划线</td></tr><tr><td>5</td><td>闪烁</td></tr><tr><td>7</td><td>反白显示</td></tr><tr><td>8</td><td>不可见</td></tr></tbody></table><p>几种输出的例子:</p><ul><li><p>\033[0;31;1m<br> 0 当前背景,31红色,1 高亮显示</p></li><li><p>\033[0;32;1m<br> 0 当前背景,32绿色,1 高亮显示</p></li><li><p>\033[0;31;5m<br> 0 当前背景,31红色,5 闪烁显示</p></li></ul><ul><li>\033[0m<br> 采用终端默认设置，即取消颜色设置</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;输出以下的格式 \033[背景色;前景色;显示方式m&lt;/p&gt;
&lt;p&gt;各颜色编码说明：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;前景色&lt;/th&gt;
&lt;th&gt;背景色&lt;/th&gt;
&lt;th&gt;颜色&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td
      
    
    </summary>
    
      <category term="开发" scheme="https://xsec.7ever.cn/categories/%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="echo" scheme="https://xsec.7ever.cn/tags/echo/"/>
    
      <category term="shell" scheme="https://xsec.7ever.cn/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>使用python 实现一个dns proxy</title>
    <link href="https://xsec.7ever.cn/2017/09/23/python-dns/"/>
    <id>https://xsec.7ever.cn/2017/09/23/python-dns/</id>
    <published>2017-09-23T02:23:58.000Z</published>
    <updated>2017-09-23T02:40:07.000Z</updated>
    
    <content type="html"><![CDATA[<p>dns验证主python脚本。运行基本流程如下:</p><ul><li>主server 基于gevent.server.DatagramServer , </li><li>核心逻辑方法handle</li><li>handle中首先通过DnsParser 解析传过来的dns数据包，如果解析失败，直接返回给用户127.0.0.1</li><li>query.qname 解析出来的是需要解析的域名，本代码通过正则匹配 domain.A中的配置项,如果解析出来，并且查询类型是A记录就直接返回</li><li>如果没有相应的解析内容选择forward,forward默认为goolge 8.8.8.8 ,如果匹配了domain.innet中那么直接转发innet </li><li>forward 逻辑封装在udp_send中 ，forward 以后把返回的数据直接扔给用户</li><li><p>config.LOCALDNS中配置一个转发的Hash </p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">LOCALDNS = &#123;</div><div class="line"><span class="string">'innet'</span>:( <span class="string">"10.210.12.10"</span>,<span class="number">53</span>) ,</div><div class="line"><span class="string">'google'</span>:( <span class="string">"10.210.12.10"</span>,<span class="number">53</span>) </div><div class="line">&#125;</div></pre></td></tr></table></figure></li><li><p>config.server_bind 设置需要绑定的ip 端口 :</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">port = <span class="number">53</span> <span class="keyword">if</span> len(sys.argv) &lt; <span class="number">2</span> <span class="keyword">else</span> int(sys.argv[<span class="number">1</span>])</div><div class="line">server_bind = <span class="string">'10.210.3.100:%d'</span> % (port)</div></pre></td></tr></table></figure></li><li><p>域名的配置代码如下:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#domain.py</span></div><div class="line">A = &#123;</div><div class="line"><span class="string">"*.sina.com"</span>:<span class="string">"10.210.3.100"</span>,</div><div class="line"><span class="string">"*.sina.com.cn"</span>:<span class="string">"10.210.3.100"</span>,</div><div class="line"><span class="string">"*.weibo.com"</span>:<span class="string">"10.210.3.100"</span>,</div><div class="line"><span class="string">"weibo.com"</span>:<span class="string">"10.210.3.100"</span>,</div><div class="line"><span class="string">"*.weibo.cn"</span>:<span class="string">"10.210.3.100"</span></div><div class="line">&#125;</div><div class="line"></div><div class="line">FORWARD = [</div><div class="line"><span class="string">"autodiscover.staff.sina.com.cn"</span>,</div><div class="line"><span class="string">"mail.staff.sina.com.cn"</span> </div><div class="line">]</div><div class="line"></div><div class="line">innet = [</div><div class="line"><span class="string">"*.sina.com.cn"</span>,</div><div class="line"><span class="string">"*.weibo.com"</span>,</div><div class="line"><span class="string">"*.weibo.cn"</span></div><div class="line">]</div></pre></td></tr></table></figure></li><li><p>主循环，主逻辑的代码如下:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># dns_server.py</span></div><div class="line"><span class="comment"># -*- coding=utf-8 -*-</span></div><div class="line"><span class="keyword">import</span> os</div><div class="line"><span class="keyword">import</span> struct</div><div class="line"><span class="keyword">from</span> cStringIO <span class="keyword">import</span> StringIO</div><div class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> namedtuple</div><div class="line"><span class="keyword">from</span> gevent <span class="keyword">import</span> socket</div><div class="line"><span class="keyword">from</span> gevent.server <span class="keyword">import</span> DatagramServer</div><div class="line"><span class="keyword">import</span> domain</div><div class="line"><span class="keyword">import</span> config</div><div class="line"><span class="keyword">import</span> logging</div><div class="line"></div><div class="line">Hex = <span class="keyword">lambda</span> x : <span class="string">'0x&#123;0:04x&#125;'</span>.format(x) <span class="comment"># Hex(256) =&gt; "0x0100"</span></div><div class="line"></div><div class="line">QueryResult = namedtuple(<span class="string">"DnsQuery"</span>,</div><div class="line"><span class="string">"transactionID,flags,questions,answerRrs \</span></div><div class="line"><span class="string">authorityRrs,additionalRrs,qname,qtype,qclass"</span></div><div class="line">)</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">parseIpList</span><span class="params">(data)</span>:</span></div><div class="line"><span class="keyword">assert</span> isinstance(data, basestring)</div><div class="line">iplist = [<span class="string">'.'</span>.join(str(ord(x)) <span class="keyword">for</span> x <span class="keyword">in</span> s) <span class="keyword">for</span> s <span class="keyword">in</span> re.findall(<span class="string">'\xc0.\x00\x01\x00\x01.&#123;6&#125;(.&#123;4&#125;)'</span>, data) <span class="keyword">if</span> all(ord(x) &lt;= <span class="number">255</span> <span class="keyword">for</span> x <span class="keyword">in</span> s)]</div><div class="line"><span class="keyword">return</span> iplist</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">preg_match</span><span class="params">(preg,real)</span>:</span></div><div class="line"><span class="string">"""</span></div><div class="line"><span class="string">only support '*'</span></div><div class="line"><span class="string">&gt;&gt;&gt;preg_match("www.*.test*.com","www.python.test.com")</span></div><div class="line"><span class="string">True</span></div><div class="line"><span class="string">&gt;&gt;&gt;preg_match("www.*.test*.com","www.python.tes.com")</span></div><div class="line"><span class="string">False</span></div><div class="line"><span class="string">"""</span></div><div class="line">pre = <span class="number">0</span></div><div class="line"><span class="keyword">for</span> s <span class="keyword">in</span> preg.split(<span class="string">'*'</span>):</div><div class="line">now = real.find(s)</div><div class="line"><span class="keyword">if</span> now &lt; pre:</div><div class="line"><span class="keyword">return</span> <span class="keyword">False</span></div><div class="line">pre = now +len(s)</div><div class="line"><span class="keyword">return</span> <span class="keyword">True</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">udp_send</span><span class="params">(address,data)</span>:</span></div><div class="line">sock = socket.socket(type=socket.SOCK_DGRAM)</div><div class="line">sock.connect(address)</div><div class="line">sock.send(data)</div><div class="line">response, address = sock.recvfrom(<span class="number">8192</span>*<span class="number">4</span>)</div><div class="line"><span class="keyword">return</span> response,address</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">DnsParser</span>:</span></div><div class="line">    </div><div class="line"><span class="meta">@classmethod</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">parseQuery</span><span class="params">(self,query)</span>:</span></div><div class="line"><span class="string">"""</span></div><div class="line"><span class="string">       6a 02 01 00 00 01                         j.....</span></div><div class="line"><span class="string">00 00 00 00 00 00 03 77 77 77 03 61 61 61 03 63  .......www.aaa.c</span></div><div class="line"><span class="string">6f 6d 00 00 01 00 01                             om.....</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">dns query package like above</span></div><div class="line"><span class="string">03 77 77 77 : three www</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">"""</span></div><div class="line">transactionID,flags,questions,answerRrs,authorityRrs,additionalRrs = map(Hex,struct.unpack(<span class="string">"!6H"</span>,query[:<span class="number">12</span>]))</div><div class="line">quries = StringIO(query[<span class="number">12</span>:])</div><div class="line">c = struct.unpack(<span class="string">"!c"</span>,quries.read(<span class="number">1</span>))[<span class="number">0</span>]</div><div class="line">domain = []</div><div class="line"><span class="keyword">while</span>  c != <span class="string">'\x00'</span>:</div><div class="line">n = ord(c)</div><div class="line">domain.append(<span class="string">''</span>.join(struct.unpack(<span class="string">"!%sc"</span> % n,quries.read(ord(c)))))</div><div class="line">c = struct.unpack(<span class="string">"!c"</span>,quries.read(<span class="number">1</span>))[<span class="number">0</span>]</div><div class="line">domain = <span class="string">'.'</span>.join(domain)</div><div class="line">qtype,qclass = map(Hex,struct.unpack(<span class="string">"!2H"</span>,quries.read()))</div><div class="line"><span class="keyword">return</span> QueryResult(transactionID,flags,questions,answerRrs,authorityRrs,additionalRrs,domain,qtype,qclass)</div><div class="line"></div><div class="line"><span class="meta">@classmethod</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">generateReqponse</span><span class="params">(self,queryData,ip)</span>:</span></div><div class="line"><span class="string">"""</span></div><div class="line"><span class="string">only support ipv4</span></div><div class="line"><span class="string">"""</span></div><div class="line"><span class="keyword">return</span> <span class="string">''</span>.join([</div><div class="line">  queryData[:<span class="number">2</span>],</div><div class="line">  <span class="string">"\x81\x80\x00\x01\x00\x02\x00\x00\x00\x00"</span>,</div><div class="line">  queryData[<span class="number">12</span>:],</div><div class="line">  <span class="string">"\xc0\x0c"</span>,</div><div class="line">  <span class="string">"\x00\x01"</span>,</div><div class="line">  <span class="string">"\x00\x01"</span>,</div><div class="line">  <span class="string">"\x00\x00\x00\x1e"</span>,</div><div class="line">  <span class="string">"\x00\x04"</span>,</div><div class="line">  struct.pack(<span class="string">'BBBB'</span>,*map(int,ip.split(<span class="string">'.'</span>)))</div><div class="line">])</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">DnsServer</span><span class="params">(DatagramServer)</span>:</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">handle</span><span class="params">(self,data,address)</span>:</span></div><div class="line"><span class="keyword">try</span>:</div><div class="line">query = DnsParser.parseQuery(data)</div><div class="line"><span class="keyword">except</span> Exception,e:</div><div class="line">response = DnsParser.generateReqponse(data,<span class="string">"127.0.0.1"</span>)</div><div class="line">self.socket.sendto(response,address)</div><div class="line"><span class="keyword">return</span> </div><div class="line"></div><div class="line">find = <span class="keyword">False</span></div><div class="line"><span class="keyword">for</span> preg,ip <span class="keyword">in</span> domain.A.iteritems():</div><div class="line"><span class="keyword">if</span> preg_match(preg,query.qname):</div><div class="line">find = <span class="keyword">True</span></div><div class="line"><span class="keyword">break</span></div><div class="line"></div><div class="line"><span class="keyword">if</span> query.qname  <span class="keyword">in</span> domain.FORWARD :</div><div class="line">find = <span class="keyword">False</span></div><div class="line"></div><div class="line"><span class="keyword">if</span> find <span class="keyword">and</span> query.qtype == <span class="string">"0x0001"</span>: <span class="comment">#only handle A record</span></div><div class="line">response = DnsParser.generateReqponse(data,ip)</div><div class="line">self.socket.sendto(response,address)</div><div class="line"><span class="keyword">else</span>:</div><div class="line">forward = <span class="string">'google'</span></div><div class="line"><span class="keyword">for</span> preg <span class="keyword">in</span> domain.innet:</div><div class="line"><span class="keyword">if</span> preg_match(preg,query.qname):</div><div class="line">forward = <span class="string">'innet'</span></div><div class="line">response,serveraddress = udp_send(config.LOCALDNS.get(forward),data)</div><div class="line"></div><div class="line"><span class="comment">#try:</span></div><div class="line"><span class="comment">#iplist = parseIpList(response)</span></div><div class="line"><span class="comment">#logging.info("  %s " % (iplist))</span></div><div class="line"><span class="comment">#except Exception,e:</span></div><div class="line"><span class="comment">#pass</span></div><div class="line"></div><div class="line">logging.info(<span class="string">"%s %s"</span>,address,query.qname)</div><div class="line">self.socket.sendto(response,address)</div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</div><div class="line">logging.info(<span class="string">"start ok"</span>)</div><div class="line">DnsServer(config.server_bind).serve_forever()</div></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;dns验证主python脚本。运行基本流程如下:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;主server 基于gevent.server.DatagramServer , &lt;/li&gt;
&lt;li&gt;核心逻辑方法handle&lt;/li&gt;
&lt;li&gt;handle中首先通过DnsParser 解析传过来
      
    
    </summary>
    
      <category term="开发" scheme="https://xsec.7ever.cn/categories/%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="proxy" scheme="https://xsec.7ever.cn/tags/proxy/"/>
    
      <category term="python" scheme="https://xsec.7ever.cn/tags/python/"/>
    
      <category term="dns" scheme="https://xsec.7ever.cn/tags/dns/"/>
    
  </entry>
  
  <entry>
    <title>使用nginx做后端tcp,udp的proxy</title>
    <link href="https://xsec.7ever.cn/2017/09/23/nginx-stream-proxy/"/>
    <id>https://xsec.7ever.cn/2017/09/23/nginx-stream-proxy/</id>
    <published>2017-09-22T23:51:16.000Z</published>
    <updated>2017-09-23T02:08:35.000Z</updated>
    
    <content type="html"><![CDATA[<p>安装参数:<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">./configure \</div><div class="line">--prefix=/data1/mginx/ \</div><div class="line">--with-stream \</div><div class="line">--with-stream_realip_module \</div><div class="line">--with-stream_ssl_module \</div><div class="line">--without-http \</div><div class="line"></div><div class="line">make -j4</div><div class="line">make install</div></pre></td></tr></table></figure></p><p>stream的配置文件，在nginx主配置文件中添加容器stream<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">''''</div><div class="line">stream &#123;</div><div class="line">upstream sample_stream &#123;</div><div class="line">server 127.0.0.1:5800 max_fails=3 fail_timeout=5s;</div><div class="line">server 127.0.0.1:5801 max_fails=3 fail_timeout=5s;</div><div class="line">&#125;</div><div class="line"></div><div class="line">server &#123; </div><div class="line">listen 1812 ; # 可以用指定ip 或者指定协议,比如 listen 10.211.61.88 1812 ; 比如  listen 10.211.61.88 1812 udp;</div><div class="line">proxy_pass radius_upstream_onetime; #数据转发</div><div class="line">allow 10.210.12.17; #指定基于ip的访问控制</div><div class="line">deny all;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">http&#123;</div><div class="line">&#125;</div><div class="line">''''</div></pre></td></tr></table></figure></p><p>stream 中可以添加lua控制，这样就可以方便的用lua编写tcp，udp 程序,在编译参数中添加stream_lua组件:<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">--with-ld-opt="-Wl,-rpath,/data1/luajit/lib" \</div><div class="line">--add-module="../stream-lua-nginx-module" \</div></pre></td></tr></table></figure></p><p>设置stream中生成lua控制:<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">content_by_lua_file /data1/code/lua/streams/echo.lua;</div></pre></td></tr></table></figure></p><p>lua脚本控制，配置一个echo协议，即输入什么返回什么:<br><figure class="highlight lua"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">local</span> sock = <span class="built_in">assert</span>(ngx.req.socket(<span class="literal">true</span>))</div><div class="line"><span class="keyword">local</span> ip = ngx.var.remote_addr</div><div class="line"><span class="keyword">local</span> data </div><div class="line"></div><div class="line"><span class="keyword">while</span>(<span class="number">1</span> == <span class="number">1</span>)</div><div class="line"><span class="keyword">do</span></div><div class="line">data = sock:receive()  </div><div class="line">ngx.say(data)</div><div class="line"><span class="keyword">end</span></div></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;安装参数:&lt;br&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=
      
    
    </summary>
    
      <category term="系统" scheme="https://xsec.7ever.cn/categories/%E7%B3%BB%E7%BB%9F/"/>
    
    
      <category term="nginx" scheme="https://xsec.7ever.cn/tags/nginx/"/>
    
      <category term="proxy" scheme="https://xsec.7ever.cn/tags/proxy/"/>
    
      <category term="stream" scheme="https://xsec.7ever.cn/tags/stream/"/>
    
  </entry>
  
  <entry>
    <title>xcode 使用cocoapods</title>
    <link href="https://xsec.7ever.cn/2017/09/22/xcode-use-cocoapods/"/>
    <id>https://xsec.7ever.cn/2017/09/22/xcode-use-cocoapods/</id>
    <published>2017-09-22T08:01:32.000Z</published>
    <updated>2017-09-23T02:07:48.000Z</updated>
    
    <content type="html"><![CDATA[<ul><li>安装cocoapods:</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">gem sources --remove https://rubygems.org/</div><div class="line">gem sources -a https://gems.ruby-china.org/</div><div class="line">gem sources -l</div><div class="line">sudo gem install cocoapods</div></pre></td></tr></table></figure><ul><li><p>新建xcode project sample 保存到 ~/Documents/samplle</p></li><li><p>新建Podfile 安装相应的库:</p></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span><span class="bash">Podfile:</span></div><div class="line">platform :ios, '7.0'</div><div class="line">target 'sample' do</div><div class="line">pod 'AFNetworking', '~&gt; 3.1.0'</div><div class="line">end</div></pre></td></tr></table></figure><ul><li>执行安装:</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cd ~/Documents/sample</div><div class="line">pod install</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;安装cocoapods:&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;lin
      
    
    </summary>
    
      <category term="开发" scheme="https://xsec.7ever.cn/categories/%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="xcode" scheme="https://xsec.7ever.cn/tags/xcode/"/>
    
      <category term="pods" scheme="https://xsec.7ever.cn/tags/pods/"/>
    
      <category term="brew" scheme="https://xsec.7ever.cn/tags/brew/"/>
    
  </entry>
  
  <entry>
    <title>使用nginx制作全代理</title>
    <link href="https://xsec.7ever.cn/2017/09/21/nginx-proxy/"/>
    <id>https://xsec.7ever.cn/2017/09/21/nginx-proxy/</id>
    <published>2017-09-21T12:47:02.000Z</published>
    <updated>2017-09-23T02:07:36.000Z</updated>
    
    <content type="html"><![CDATA[<ul><li>编译nginx,编译脚本:</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">./configure \</div><div class="line">--prefix=/data0/nginx/ \</div><div class="line">--with-stream \</div><div class="line">--with-http_ssl_module  \</div><div class="line">--with-stream_ssl_module \</div><div class="line">make -j4</div><div class="line">make install</div></pre></td></tr></table></figure><ul><li>主nginx配置文件：</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">http &#123;</div><div class="line">resolver 10.212.0.43  valid=3600s;</div><div class="line"></div><div class="line">include       mime.types;</div><div class="line">default_type  application/octet-stream;</div><div class="line"></div><div class="line">log_format  main  '$remote_addr $http_host - $remote_user [$time_local] "$request" '</div><div class="line">'$status $body_bytes_sent "$http_referer" '</div><div class="line">'"$http_user_agent" "$http_x_forwarded_for"';</div><div class="line">sendfile        on; </div><div class="line">keepalive_timeout  65; </div><div class="line">gzip  on; </div><div class="line">include vhost/*.conf;</div><div class="line">&#125;</div></pre></td></tr></table></figure><ul><li>http代理比较简单:</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span><span class="bash">vhost/proxy.conf</span></div><div class="line">server &#123;</div><div class="line">listen  80;</div><div class="line">error_log logs/proxy_err.log;</div><div class="line">access_log logs/proxy_ac.log main;</div><div class="line"></div><div class="line">location / &#123; </div><div class="line">proxy_pass http://$http_host;</div><div class="line">proxy_set_header X-RealIP $remote_addr;</div><div class="line">proxy_set_header Host $http_host;</div><div class="line">&#125;   </div><div class="line">&#125;</div></pre></td></tr></table></figure><ul><li><p>https代理:<br>生成证书:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">openssl genrsa -des3 -out common.key 1024</div><div class="line">openssl req -new -key common.key -out common.csr</div><div class="line">openssl rsa -in common.key -out common_nopwd.key</div><div class="line">openssl x509 -req -days 365 -in common.csr -signkey common_nopwd.key -out common.crt</div><div class="line">echo "ssl on;"</div><div class="line">echo "ssl_certificate ssl/common.crt;"</div><div class="line">echo "ssl_certificate_key ssl/common_nopwd.key;"</div></pre></td></tr></table></figure></li><li><p>配置https代理:</p></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">server &#123;</div><div class="line">listen  443;</div><div class="line">error_log logs/proxy_ssl_err.log;</div><div class="line">access_log logs/proxy_ssl_ac.log main;</div><div class="line"></div><div class="line">ssl on;</div><div class="line">ssl_certificate ssl/common.crt;</div><div class="line">ssl_certificate_key ssl/common_nopwd.key;</div><div class="line"></div><div class="line">location / &#123; </div><div class="line">proxy_pass https://$http_host;</div><div class="line">proxy_set_header Host $http_host;</div><div class="line">&#125;   </div><div class="line">&#125;</div></pre></td></tr></table></figure><ul><li>最后一步，你绑定需要的hosts就可以把当前nginx机器伪装成需要访问的主机。当前nginx主机通过resolver 来解析需要访问的域名对应的ip<br>然后，去访问该ip端口对应的数据返回给浏览器。</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;编译nginx,编译脚本:&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;li
      
    
    </summary>
    
      <category term="系统" scheme="https://xsec.7ever.cn/categories/%E7%B3%BB%E7%BB%9F/"/>
    
    
      <category term="nginx" scheme="https://xsec.7ever.cn/tags/nginx/"/>
    
      <category term="linux" scheme="https://xsec.7ever.cn/tags/linux/"/>
    
      <category term="proxy" scheme="https://xsec.7ever.cn/tags/proxy/"/>
    
  </entry>
  
  <entry>
    <title>从头到尾搭建hexo博客</title>
    <link href="https://xsec.7ever.cn/2017/03/07/hello-world/"/>
    <id>https://xsec.7ever.cn/2017/03/07/hello-world/</id>
    <published>2017-03-07T08:54:31.000Z</published>
    <updated>2017-09-23T02:08:17.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h2><h3 id="安装nodejs-npm"><a href="#安装nodejs-npm" class="headerlink" title="安装nodejs,npm"></a>安装nodejs,npm</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install -g hexo</div></pre></td></tr></table></figure><p>有的时候，需要在命令前，添加sudo</p><h3 id="创建博客目录-并cd到对应的目录"><a href="#创建博客目录-并cd到对应的目录" class="headerlink" title="创建博客目录,并cd到对应的目录"></a>创建博客目录,并cd到对应的目录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ mkdir blog </div><div class="line">$ <span class="built_in">cd</span> `<span class="built_in">pwd</span>`/blog</div><div class="line">$ <span class="built_in">pwd</span></div></pre></td></tr></table></figure><h3 id="生成对应的页面文件"><a href="#生成对应的页面文件" class="headerlink" title="生成对应的页面文件"></a>生成对应的页面文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure><p>查看更多: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">生成页面</a></p><h3 id="部署到github"><a href="#部署到github" class="headerlink" title="部署到github"></a>部署到github</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure><p>有时候会报错:ERROR Deployer not found: github<br>解决办法如下,运行如下命令:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install hexo-deployer-git --save</div></pre></td></tr></table></figure><h3 id="生成新的文章"><a href="#生成新的文章" class="headerlink" title="生成新的文章:"></a>生成新的文章:</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new &lt;layout&gt; &lt;title&gt;</div></pre></td></tr></table></figure><p>其中layout的值为: post, page, draft 或者其他的内容</p><p>当修改内容以后，需要调用以下命令，重新生成，重新部署:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo g &amp;&amp; hexo d</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;安装hexo&quot;&gt;&lt;a href=&quot;#安装hexo&quot; class=&quot;headerlink&quot; title=&quot;安装hexo&quot;&gt;&lt;/a&gt;安装hexo&lt;/h2&gt;&lt;h3 id=&quot;安装nodejs-npm&quot;&gt;&lt;a href=&quot;#安装nodejs-npm&quot; class=&quot;head
      
    
    </summary>
    
      <category term="系统" scheme="https://xsec.7ever.cn/categories/%E7%B3%BB%E7%BB%9F/"/>
    
    
      <category term="hello" scheme="https://xsec.7ever.cn/tags/hello/"/>
    
  </entry>
  
  <entry>
    <title>centos7升级gcc到4.9.3</title>
    <link href="https://xsec.7ever.cn/2017/03/07/centos7%E5%8D%87%E7%BA%A7gcc%E5%88%B04-9-3/"/>
    <id>https://xsec.7ever.cn/2017/03/07/centos7升级gcc到4-9-3/</id>
    <published>2017-03-07T08:54:31.000Z</published>
    <updated>2017-09-23T02:08:33.000Z</updated>
    
    <content type="html"><![CDATA[<ol><li>下载源代码:</li></ol><p>从<a href="https://gcc.gnu.org/mirrors.html" target="_blank" rel="external">https://gcc.gnu.org/mirrors.html</a>选择一个相对快的镜像库,我选择的是<br><a href="http://www.netgull.com/gcc/releases/" target="_blank" rel="external">http://www.netgull.com/gcc/releases/</a></p><ol><li>下载必要库:</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span> ./contrib/download_prerequisites</div></pre></td></tr></table></figure><ol><li><p>编译依赖c++</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span> yum install gcc-c++</div></pre></td></tr></table></figure></li><li><p>创建安装文件编译目录:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span> mkdir objdir  &amp;&amp; cd objdir</div><div class="line"><span class="meta">$</span> ../configure --enable-languages=c,c++ --disable-multilib</div><div class="line"><span class="meta">$</span> make </div><div class="line"><span class="meta">$</span> make install</div></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ol&gt;
&lt;li&gt;下载源代码:&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;从&lt;a href=&quot;https://gcc.gnu.org/mirrors.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://gcc.gnu.org/mirrors.html&lt;/a
      
    
    </summary>
    
      <category term="系统" scheme="https://xsec.7ever.cn/categories/%E7%B3%BB%E7%BB%9F/"/>
    
    
      <category term="centos7" scheme="https://xsec.7ever.cn/tags/centos7/"/>
    
      <category term="gcc" scheme="https://xsec.7ever.cn/tags/gcc/"/>
    
  </entry>
  
  <entry>
    <title>supervisor安装配置使用</title>
    <link href="https://xsec.7ever.cn/2017/03/07/supervisor%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE%E4%BD%BF%E7%94%A8/"/>
    <id>https://xsec.7ever.cn/2017/03/07/supervisor安装配置使用/</id>
    <published>2017-03-07T00:57:50.000Z</published>
    <updated>2017-10-05T08:51:38.000Z</updated>
    
    <content type="html"><![CDATA[<ol><li>安装supervisor<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span><span class="bash"> yum install python-setuptools</span></div><div class="line"><span class="meta">$</span><span class="bash"> easy_install pip</span></div><div class="line"><span class="meta">$</span><span class="bash"> pip install supervisor</span></div></pre></td></tr></table></figure></li></ol><p>这个工具分为两个命令:</p><ul><li>supervisord : supervisor的服务器端部分，启动supervisor就是运行这个命令</li><li>supervisorctl：启动supervisor的命令行窗口。</li></ul><ol><li><p>生成配置文件:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span><span class="bash"> echo_supervisord_conf &gt; /etc/supervisord.conf</span></div></pre></td></tr></table></figure></li><li><p>修改配置文件:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">[program:mobsf]</div><div class="line">;process_name = %(program_name)s-%(process_num)d  </div><div class="line">;numprocs = 5</div><div class="line">;command = python /data0/Mobile-Security-Framework-MobSF/manage.py --port=30%(process_num)02d 根据进程设置端口</div><div class="line">command = python /data0/Mobile-Security-Framework-MobSF/manage.py runserver 0.0.0.0:8000</div><div class="line">user = root</div><div class="line">autostart = true</div><div class="line">autorestart = true</div><div class="line">startsecs = 5</div><div class="line">stderr_logfile = /data0/Mobile-Security-Framework-MobSF/logs/run/error.log</div><div class="line">stdout_logfile = /data0/Mobile-Security-Framework-MobSF/logs/run/stdout.log</div><div class="line">; 标准输入，标准输出配置文件大小</div><div class="line">stdout_logfile_maxbytes = 200MB</div><div class="line">stdout_logfile_backups = 50</div><div class="line">stderr_logfile_maxbytes = 200MB</div><div class="line">stderr_logfile_backups = 10</div></pre></td></tr></table></figure></li><li><p>启动命令:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span><span class="bash"> supervisord -c /etc/supervisord.conf</span></div></pre></td></tr></table></figure></li><li><p>查看状态:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span><span class="bash"> supervisorctl status</span></div></pre></td></tr></table></figure></li><li><p>修改supervisord.conf以后，重载:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span><span class="bash"> supervisorctl reload</span></div></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ol&gt;
&lt;li&gt;安装supervisor&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;d
      
    
    </summary>
    
      <category term="系统" scheme="https://xsec.7ever.cn/categories/%E7%B3%BB%E7%BB%9F/"/>
    
    
      <category term="python" scheme="https://xsec.7ever.cn/tags/python/"/>
    
      <category term="pip" scheme="https://xsec.7ever.cn/tags/pip/"/>
    
      <category term="supervisor" scheme="https://xsec.7ever.cn/tags/supervisor/"/>
    
  </entry>
  
  <entry>
    <title>安全牛的免费课程</title>
    <link href="https://xsec.7ever.cn/2017/03/06/%E5%AE%89%E5%85%A8%E7%89%9B%E7%9A%84%E5%85%8D%E8%B4%B9%E8%AF%BE/"/>
    <id>https://xsec.7ever.cn/2017/03/06/安全牛的免费课/</id>
    <published>2017-03-06T08:05:00.000Z</published>
    <updated>2017-10-05T09:11:27.000Z</updated>
    
    <content type="html"><![CDATA[<p>安全牛的免费课程:<br><a href="http://edu.aqniu.com/course/2188" target="_blank" rel="external">Deep Edge</a><br><a href="http://edu.aqniu.com/course/2059" target="_blank" rel="external">SFDC Security</a><br><a href="http://edu.aqniu.com/course/2058" target="_blank" rel="external">SFDC -移动安全</a><br><a href="http://edu.aqniu.com/course/2057" target="_blank" rel="external">SFDC -服务安全</a><br><a href="http://edu.aqniu.com/course/2056" target="_blank" rel="external">SFDC -项目安全开发</a><br><a href="http://edu.aqniu.com/course/2030" target="_blank" rel="external">安全需要简单的交付</a><br><a href="http://edu.aqniu.com/course/2029" target="_blank" rel="external">加大持续检测和快速响应投入</a><br><a href="http://edu.aqniu.com/course/2028" target="_blank" rel="external">可视是安全的基础</a><br><a href="http://edu.aqniu.com/course/2024" target="_blank" rel="external">身份认证</a><br><a href="http://edu.aqniu.com/course/1852" target="_blank" rel="external">TDA</a><br><a href="http://edu.aqniu.com/course/1850" target="_blank" rel="external">OfficeScan</a><br><a href="http://edu.aqniu.com/course/1020" target="_blank" rel="external">Kali Linux 安装配置和优化</a><br><a href="http://edu.aqniu.com/course/959" target="_blank" rel="external">TCSP</a><br><a href="http://edu.aqniu.com/course/353" target="_blank" rel="external">网络异常行为分析</a><br><a href="http://edu.aqniu.com/course/347" target="_blank" rel="external">IT风险控制</a><br><a href="http://edu.aqniu.com/course/340" target="_blank" rel="external">威胁情报峰会</a><br><a href="http://edu.aqniu.com/course/190" target="_blank" rel="external">云安全实践</a><br><a href="http://edu.aqniu.com/course/189" target="_blank" rel="external">威胁情报</a><br><a href="http://edu.aqniu.com/course/188" target="_blank" rel="external">大数据分析</a><br><a href="http://edu.aqniu.com/course/187" target="_blank" rel="external">安全产业创新</a><br><a href="http://edu.aqniu.com/course/186" target="_blank" rel="external">物联网安全</a><br><a href="http://edu.aqniu.com/course/185" target="_blank" rel="external">网络安全法律</a><br><a href="http://edu.aqniu.com/course/184" target="_blank" rel="external">移动终端攻防</a><br><a href="http://edu.aqniu.com/course/183" target="_blank" rel="external">互联网+安全管理</a><br><a href="http://edu.aqniu.com/course/182" target="_blank" rel="external">云计算虚拟化</a><br><a href="http://edu.aqniu.com/course/181" target="_blank" rel="external">APT与新威胁</a><br><a href="http://edu.aqniu.com/course/180" target="_blank" rel="external">电子取证</a><br><a href="http://edu.aqniu.com/course/179" target="_blank" rel="external">网络空间安全</a><br><a href="http://edu.aqniu.com/course/178" target="_blank" rel="external">漏洞与源码分析</a><br><a href="http://edu.aqniu.com/course/140" target="_blank" rel="external">SQLMAP基础</a><br><a href="http://edu.aqniu.com/course/129" target="_blank" rel="external">WebSP</a><br><a href="http://edu.aqniu.com/course/126" target="_blank" rel="external">Metasploit应用</a><br><a href="http://edu.aqniu.com/course/120" target="_blank" rel="external">金山终端安全</a><br><a href="http://edu.aqniu.com/course/104" target="_blank" rel="external">山石HCSP认证</a><br><a href="http://edu.aqniu.com/course/103" target="_blank" rel="external">山石HCSA认证</a><br><a href="http://edu.aqniu.com/course/101" target="_blank" rel="external">防火墙实验指南</a><br><a href="http://edu.aqniu.com/course/100" target="_blank" rel="external">防火墙功能演示</a><br><a href="http://edu.aqniu.com/course/81" target="_blank" rel="external">第三方支付风险</a><br><a href="http://edu.aqniu.com/course/78" target="_blank" rel="external">提升安全意识</a><br><a href="http://edu.aqniu.com/course/44" target="_blank" rel="external">RSA Archer-SecOps</a><br><a href="http://edu.aqniu.com/course/41" target="_blank" rel="external">GRC安全合规治理平台</a><br><a href="http://edu.aqniu.com/course/40" target="_blank" rel="external">Zmap 、Nmap</a><br><a href="http://edu.aqniu.com/course/39" target="_blank" rel="external">安全工具-Snort</a><br><a href="http://edu.aqniu.com/course/35" target="_blank" rel="external">基于漏洞的安全开发管理</a><br><a href="http://edu.aqniu.com/course/33" target="_blank" rel="external">CISA证书申请指导</a></p><h2 id="获取脚本"><a href="#获取脚本" class="headerlink" title="获取脚本"></a>获取脚本</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#coding=utf-8</span></div><div class="line"><span class="keyword">import</span> requests</div><div class="line"><span class="keyword">from</span> pyquery <span class="keyword">import</span> PyQuery <span class="keyword">as</span> PQ</div><div class="line"></div><div class="line">urls = [ <span class="string">"http://edu.aqniu.com/course/explore?page=%d"</span> % (page) <span class="keyword">for</span> page <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">11</span>)]</div><div class="line"></div><div class="line"><span class="keyword">print</span> <span class="string">"安全牛的免费课程:"</span></div><div class="line"></div><div class="line"><span class="keyword">for</span> url <span class="keyword">in</span> urls:</div><div class="line">    content = requests.get(url).text</div><div class="line">    dom = PQ(content)</div><div class="line">    items = dom.find(<span class="string">"div.course-item"</span>)</div><div class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> items:</div><div class="line">        title = PQ(item).find(<span class="string">"div.title"</span>).text()</div><div class="line">        price = PQ(item).find(<span class="string">"span.price"</span>).text().encode(<span class="string">"utf-8"</span>)</div><div class="line">        link = <span class="string">"http://edu.aqniu.com"</span> + PQ(item).find(<span class="string">"div.course-img a"</span>).attr(<span class="string">"href"</span>)</div><div class="line"></div><div class="line">        <span class="keyword">if</span> <span class="string">"免费"</span> == price:</div><div class="line">            <span class="keyword">print</span> <span class="string">"[%s](%s)"</span> % (title.encode(<span class="string">"utf-8"</span>),link)</div><div class="line"></div><div class="line"><span class="keyword">print</span> <span class="string">"## 获取脚本"</span></div><div class="line"><span class="keyword">print</span> <span class="string">"```python"</span></div><div class="line"><span class="keyword">print</span> open(<span class="string">"find_free_security.py"</span>,<span class="string">"r"</span>).read()</div><div class="line"><span class="keyword">print</span> <span class="string">"```"</span></div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;安全牛的免费课程:&lt;br&gt;&lt;a href=&quot;http://edu.aqniu.com/course/2188&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Deep Edge&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://edu.aqniu.com/cou
      
    
    </summary>
    
      <category term="开发" scheme="https://xsec.7ever.cn/categories/%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="python" scheme="https://xsec.7ever.cn/tags/python/"/>
    
      <category term="spider" scheme="https://xsec.7ever.cn/tags/spider/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu 下 adb No Such file</title>
    <link href="https://xsec.7ever.cn/2017/03/03/ubuntu-%E4%B8%8B-adb-No-Such-file/"/>
    <id>https://xsec.7ever.cn/2017/03/03/ubuntu-下-adb-No-Such-file/</id>
    <published>2017-03-03T06:34:19.000Z</published>
    <updated>2017-10-05T09:10:58.000Z</updated>
    
    <content type="html"><![CDATA[<p>1、打开终端，安装 lib32z1（注意最后一位是数字 1 不是字母 l）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install lib32z1</div></pre></td></tr></table></figure><p>2、完成后还需要安装 libstdc++.so.6 这个库（adb需要32位的库）：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install lib32stdc++6</div></pre></td></tr></table></figure></p><p>OK，现在就可以使用adb命令了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1、打开终端，安装 lib32z1（注意最后一位是数字 1 不是字母 l）&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pr
      
    
    </summary>
    
      <category term="系统" scheme="https://xsec.7ever.cn/categories/%E7%B3%BB%E7%BB%9F/"/>
    
    
      <category term="ubuntu" scheme="https://xsec.7ever.cn/tags/ubuntu/"/>
    
      <category term="adb" scheme="https://xsec.7ever.cn/tags/adb/"/>
    
      <category term="android" scheme="https://xsec.7ever.cn/tags/android/"/>
    
  </entry>
  
</feed>
