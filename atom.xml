<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Simple Xsec World</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://xsec.7ever.cn/"/>
  <updated>2019-10-12T08:37:35.961Z</updated>
  <id>https://xsec.7ever.cn/</id>
  
  <author>
    <name>Xingyue</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>golang 1.4 编译错误</title>
    <link href="https://xsec.7ever.cn/2019/10/12/golang1-4-compile-error/"/>
    <id>https://xsec.7ever.cn/2019/10/12/golang1-4-compile-error/</id>
    <published>2019-10-12T08:35:30.000Z</published>
    <updated>2019-10-12T08:37:35.961Z</updated>
    
    <content type="html"><![CDATA[<p>报错信息如下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> Building C bootstrap tool.</span><br><span class="line">cmd/dist</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> Building compilers and Go bootstrap tool for host, linux/amd64.</span><br><span class="line">lib9</span><br><span class="line">/usr/local/go-go1.4.2/src/lib9/fmt/fltfmt.c: In function ‘__efgfmt’:</span><br><span class="line">/usr/local/go-go1.4.2/src/lib9/fmt/fltfmt.c:437:5: error: this statement may fall through [-Werror=implicit-fallthrough=]</span><br><span class="line">   if(ndigits &gt; prec) &#123;</span><br><span class="line">     ^</span><br><span class="line">/usr/local/go-go1.4.2/src/lib9/fmt/fltfmt.c:451:2: note: here</span><br><span class="line">  default:</span><br><span class="line">  ^~~~~~~</span><br><span class="line">cc1: all warnings being treated as errors</span><br><span class="line">go tool dist: FAILED: gcc -Wall -Wstrict-prototypes -Wextra -Wunused -Wno-sign-compare -Wno-missing-braces -Wno-parentheses -Wno-unknown-pragmas -Wno-switch -Wno-comment -Wno-missing-field-initializers -Werror -fno-common -ggdb -pipe -Wuninitialized -O2 -fmessage-length=0 -c -m64 -I /usr/local/go-go1.4.2/include -DPLAN9PORT -I /usr/local/go-go1.4.2/src/lib9 -o $WORK/fltfmt.o /usr/local/go-go1.4.2/src/lib9/fmt/fltfmt.c</span><br></pre></td></tr></table></figure><p>修复办法</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> grep "Werror" . -nR  # 去掉Werror 选项</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;报错信息如下&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;
      
    
    </summary>
    
      <category term="开发" scheme="https://xsec.7ever.cn/categories/%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="golang" scheme="https://xsec.7ever.cn/tags/golang/"/>
    
  </entry>
  
  <entry>
    <title>elasticsearch 插入自动识别的date类型</title>
    <link href="https://xsec.7ever.cn/2019/08/21/es-timestamp-field-auto/"/>
    <id>https://xsec.7ever.cn/2019/08/21/es-timestamp-field-auto/</id>
    <published>2019-08-21T02:29:08.000Z</published>
    <updated>2019-08-21T02:29:39.071Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">DELETE /b_20190821</span><br><span class="line"></span><br><span class="line">POST /b_20190821/_doc/7</span><br><span class="line">&#123;</span><br><span class="line">    "uid": 99,</span><br><span class="line">    "gid": 99,</span><br><span class="line">    "shell": "/sbin/nologin",</span><br><span class="line">    "ip": "10.87.50.181",</span><br><span class="line">    "cat_id": "b7b397fde32729da12a59d5ab09301a0",</span><br><span class="line">    "name": "nobody",</span><br><span class="line">    "comment": "Nobody",</span><br><span class="line">    "timestamp": "2019-08-21T10:00:30+08:00Z",</span><br><span class="line">    "home": "/"</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">GET /b_*/_mapping</span><br><span class="line"></span><br><span class="line">GET /b_20190821/_doc/3</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class
      
    
    </summary>
    
    
      <category term="elasticsearch" scheme="https://xsec.7ever.cn/tags/elasticsearch/"/>
    
  </entry>
  
  <entry>
    <title>rpm 包 编译和生成</title>
    <link href="https://xsec.7ever.cn/2019/08/14/rpm-build-and-publish/"/>
    <id>https://xsec.7ever.cn/2019/08/14/rpm-build-and-publish/</id>
    <published>2019-08-14T02:29:28.000Z</published>
    <updated>2019-08-14T02:47:13.997Z</updated>
    
    <content type="html"><![CDATA[<h2 id="生成rpmbuild-基础目录"><a href="#生成rpmbuild-基础目录" class="headerlink" title="生成rpmbuild 基础目录"></a>生成rpmbuild 基础目录</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum install rpmbuild</span><br><span class="line">yum install rpmdevtools </span><br><span class="line">rpmdev-setuptree # 默认生成在/root/rpmbuild 目录</span><br></pre></td></tr></table></figure><h2 id="一个简单的spec-文件，用来编译rpm"><a href="#一个简单的spec-文件，用来编译rpm" class="headerlink" title="一个简单的spec 文件，用来编译rpm"></a>一个简单的spec 文件，用来编译rpm</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">Name:           niffler</span><br><span class="line">Version:        0.2.6</span><br><span class="line">Release:        1%&#123;?dist&#125;</span><br><span class="line">Summary:        niffler</span><br><span class="line">  </span><br><span class="line">Group:          Development/Tools  </span><br><span class="line">License:        GPL  </span><br><span class="line">Source0:        %&#123;name&#125;-%&#123;version&#125;.tar.gz  </span><br><span class="line">  </span><br><span class="line">BuildRequires:    libpcap-devel</span><br><span class="line">Requires:         libpcap-devel</span><br><span class="line">  </span><br><span class="line"><span class="meta">%</span><span class="bash">description  </span></span><br><span class="line">  </span><br><span class="line"><span class="meta">%</span><span class="bash">prep  </span></span><br><span class="line"><span class="meta">%</span><span class="bash">setup -q  </span></span><br><span class="line">  </span><br><span class="line"><span class="meta">%</span><span class="bash">build  </span></span><br><span class="line"></span><br><span class="line"><span class="meta">%</span><span class="bash">install  </span></span><br><span class="line">mkdir -p $&#123;RPM_BUILD_ROOT&#125;/bin</span><br><span class="line">mkdir -p $&#123;RPM_BUILD_ROOT&#125;/etc/</span><br><span class="line">mkdir -p $&#123;RPM_BUILD_ROOT&#125;/etc/init.d/</span><br><span class="line">install -m 755 niffler $&#123;RPM_BUILD_ROOT&#125;/bin/niffler</span><br><span class="line">./niffler echo service &gt; $&#123;RPM_BUILD_ROOT&#125;/etc/init.d/niffler</span><br><span class="line"></span><br><span class="line"><span class="meta">%</span><span class="bash">post</span></span><br><span class="line">if [ -f /etc/niffler.json ] </span><br><span class="line">then</span><br><span class="line">    cp /etc/niffler.json /etc/niffler_old.json</span><br><span class="line">fi</span><br><span class="line">niffler echo config &gt; /etc/niffler.json</span><br><span class="line">chmod 755 $&#123;RPM_BUILD_ROOT&#125;/etc/init.d/niffler</span><br><span class="line">chkconfig --add niffler</span><br><span class="line">killall niffler</span><br><span class="line">service niffler start</span><br><span class="line"></span><br><span class="line"><span class="meta">%</span><span class="bash">clean</span></span><br><span class="line">rm -rf $RPM_BUILD_ROOT</span><br><span class="line"></span><br><span class="line"><span class="meta">%</span><span class="bash">files</span></span><br><span class="line">/bin/niffler</span><br><span class="line">/etc/init.d/niffler</span><br></pre></td></tr></table></figure><h2 id="编译生成rpm"><a href="#编译生成rpm" class="headerlink" title="编译生成rpm"></a>编译生成rpm</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">version=$(cat niffler.spec  | grep Version | awk '&#123;print $2&#125;')</span><br><span class="line">echo "build rpm package version $version"</span><br><span class="line">killall niffler</span><br><span class="line">rm -rf build/*</span><br><span class="line">rpmbuild_dir=/root/rpmbuild</span><br><span class="line">source_dir=`pwd`</span><br><span class="line"></span><br><span class="line">go build -o build/niffler -ldflags "-s -w"</span><br><span class="line">mkdir -p build</span><br><span class="line">rpmdev-setuptree</span><br><span class="line">mkdir -p $&#123;rpmbuild_dir&#125;/SOURCES/niffler-$&#123;version&#125;</span><br><span class="line">cp build/niffler $&#123;rpmbuild_dir&#125;/SOURCES/niffler-$&#123;version&#125;</span><br><span class="line">cd $&#123;rpmbuild_dir&#125;/SOURCES/</span><br><span class="line">tar czvf niffler-$&#123;version&#125;.tar.gz niffler-$&#123;version&#125;</span><br><span class="line">cd $&#123;source_dir&#125;</span><br><span class="line">cp niffler.spec $&#123;rpmbuild_dir&#125;/SPECS/niffler.spec</span><br><span class="line">rpmbuild -bb $&#123;rpmbuild_dir&#125;/SPECS/niffler.spec</span><br><span class="line">cp $&#123;rpmbuild_dir&#125;/RPMS/x86_64/*.rpm build/</span><br><span class="line">rm -rf $&#123;rpmbuild_dir&#125;</span><br><span class="line"></span><br><span class="line">go clean </span><br><span class="line">rm -rf build/niffler</span><br></pre></td></tr></table></figure><h2 id="发布rpm-nginx-配置文件"><a href="#发布rpm-nginx-配置文件" class="headerlink" title="发布rpm,nginx 配置文件"></a>发布rpm,nginx 配置文件</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">location /secrepo &#123;</span><br><span class="line">    autoindex on;  </span><br><span class="line">    root /data0/www/secrepo/public;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="生成repo-相关文件"><a href="#生成repo-相关文件" class="headerlink" title="生成repo 相关文件"></a>生成repo 相关文件</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">createrepo /data0/www/secrepo/public/secrepo/</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;生成rpmbuild-基础目录&quot;&gt;&lt;a href=&quot;#生成rpmbuild-基础目录&quot; class=&quot;headerlink&quot; title=&quot;生成rpmbuild 基础目录&quot;&gt;&lt;/a&gt;生成rpmbuild 基础目录&lt;/h2&gt;&lt;figure class=&quot;highli
      
    
    </summary>
    
      <category term="工具" scheme="https://xsec.7ever.cn/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="linux" scheme="https://xsec.7ever.cn/tags/linux/"/>
    
      <category term="rpm" scheme="https://xsec.7ever.cn/tags/rpm/"/>
    
  </entry>
  
  <entry>
    <title>govendor使用安装</title>
    <link href="https://xsec.7ever.cn/2019/07/25/govendor/"/>
    <id>https://xsec.7ever.cn/2019/07/25/govendor/</id>
    <published>2019-07-25T04:57:06.000Z</published>
    <updated>2019-07-25T04:58:56.212Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> go get -u -v github.com/kardianos/govendor</span></span><br></pre></td></tr></table></figure><h2 id="添加依赖"><a href="#添加依赖" class="headerlink" title="添加依赖"></a>添加依赖</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> govendor init</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> govendor fetch project_url_with_out_http </span></span><br><span class="line"><span class="meta">$</span><span class="bash"> cat vendor/vendor.json</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h2&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span 
      
    
    </summary>
    
      <category term="开发" scheme="https://xsec.7ever.cn/categories/%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="golang" scheme="https://xsec.7ever.cn/tags/golang/"/>
    
      <category term="govendor" scheme="https://xsec.7ever.cn/tags/govendor/"/>
    
  </entry>
  
  <entry>
    <title>centos 搭建nfs 运行环境</title>
    <link href="https://xsec.7ever.cn/2019/07/24/centos-nfs/"/>
    <id>https://xsec.7ever.cn/2019/07/24/centos-nfs/</id>
    <published>2019-07-24T01:33:10.000Z</published>
    <updated>2019-07-24T01:42:18.599Z</updated>
    
    <content type="html"><![CDATA[<h2 id="centos-服务端搭建基本的nfs-挂载环境"><a href="#centos-服务端搭建基本的nfs-挂载环境" class="headerlink" title="centos 服务端搭建基本的nfs 挂载环境"></a>centos 服务端搭建基本的nfs 挂载环境</h2><ul><li>安装基本的运行环境</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">yum install nfs-utils</span><br><span class="line">systemctl enable rpcbind</span><br><span class="line">systemctl start rpcbind</span><br><span class="line">systemctl enable nfs</span><br><span class="line">systemctl start nfs</span><br></pre></td></tr></table></figure><ul><li>防火墙配置</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --zone=public --permanent --add-service=rpc-bind</span><br><span class="line">firewall-cmd --zone=public --permanent --add-service=mountd</span><br><span class="line">firewall-cmd --zone=public --permanent --add-service=nfs</span><br><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure><ul><li>配置共享目录</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cat  /etc/exports</span><br><span class="line"></span><br><span class="line">/data/     192.168.0.0/24(rw,sync,no_root_squash,no_all_squash)</span><br><span class="line"></span><br><span class="line">systemctl restart nfs</span><br><span class="line">showmount -e localhost # 查看挂载点</span><br></pre></td></tr></table></figure><h2 id="centos-客户端"><a href="#centos-客户端" class="headerlink" title="centos 客户端"></a>centos 客户端</h2><ul><li>单次挂载</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">yum install nfs-utils</span><br><span class="line">systemctl enable rpcbind</span><br><span class="line">systemctl start rpcbind</span><br><span class="line">showmount -e 192.168.0.101 #检查远程挂载点</span><br><span class="line">mkdir /data #创建远程挂载目录</span><br><span class="line">mount -t nfs 192.168.0.101:/data /data</span><br></pre></td></tr></table></figure><ul><li>自动挂载配置</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/fstab</span><br><span class="line"></span><br><span class="line">192.168.0.101:/data      /data                   nfs     defaults        0 0</span><br><span class="line"></span><br><span class="line">systemctl daemon-reload # 重启服务</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;centos-服务端搭建基本的nfs-挂载环境&quot;&gt;&lt;a href=&quot;#centos-服务端搭建基本的nfs-挂载环境&quot; class=&quot;headerlink&quot; title=&quot;centos 服务端搭建基本的nfs 挂载环境&quot;&gt;&lt;/a&gt;centos 服务端搭建基本的nf
      
    
    </summary>
    
      <category term="运维" scheme="https://xsec.7ever.cn/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="centos" scheme="https://xsec.7ever.cn/tags/centos/"/>
    
      <category term="nfs" scheme="https://xsec.7ever.cn/tags/nfs/"/>
    
  </entry>
  
  <entry>
    <title>jupyter 配置文件</title>
    <link href="https://xsec.7ever.cn/2019/06/26/jupyter-config-file/"/>
    <id>https://xsec.7ever.cn/2019/06/26/jupyter-config-file/</id>
    <published>2019-06-26T03:25:12.000Z</published>
    <updated>2019-06-28T09:06:15.468Z</updated>
    
    <content type="html"><![CDATA[<ul><li><p>生成配置:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jupyter notebook --generate-config</span><br></pre></td></tr></table></figure></li><li><p>修改配置:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">c.NotebookApp.ip = <span class="string">'10.41.13.133'</span></span><br><span class="line">c.NotebookApp.notebook_dir = <span class="string">'.notebook/'</span></span><br><span class="line">c.NotebookApp.open_browser = <span class="keyword">False</span></span><br><span class="line"><span class="comment">### 密码生成 : from notebook.auth import passwd ; passwd()</span></span><br><span class="line">c.NotebookApp.password = <span class="string">'sha1:bde2e6d43d20:7ea9c0f5fd382a294cc3fcc125cd7af4684fe434'</span></span><br><span class="line">c.NotebookApp.port = <span class="number">8888</span></span><br></pre></td></tr></table></figure></li><li><p>启动server:</p></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jupyter notebook</span><br></pre></td></tr></table></figure><ul><li>nginx 做反向代理:</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">location /playground &#123;</span><br><span class="line"></span><br><span class="line">    proxy_set_header Host $host;</span><br><span class="line">    proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">    proxy_set_header REMOTE-HOST $remote_addr;</span><br><span class="line"></span><br><span class="line">    proxy_http_version 1.1;</span><br><span class="line">    proxy_set_header Upgrade $http_upgrade;</span><br><span class="line">    proxy_set_header Connection "upgrade";</span><br><span class="line">    proxy_read_timeout 120s;</span><br><span class="line">    proxy_next_upstream error;</span><br><span class="line"></span><br><span class="line">    proxy_pass http://127.0.0.1:8888;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">## 需要设置 jupyter : </span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">## c.NotebookApp.allow_remote_access = True</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">## c.NotebookApp.base_url = '/playground/'</span></span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;&lt;p&gt;生成配置:&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class
      
    
    </summary>
    
      <category term="python" scheme="https://xsec.7ever.cn/categories/python/"/>
    
    
      <category term="jupyter" scheme="https://xsec.7ever.cn/tags/jupyter/"/>
    
  </entry>
  
  <entry>
    <title>本地搭建graylog 环境简单注意</title>
    <link href="https://xsec.7ever.cn/2019/04/29/graylog-local/"/>
    <id>https://xsec.7ever.cn/2019/04/29/graylog-local/</id>
    <published>2019-04-29T08:07:12.000Z</published>
    <updated>2019-04-29T08:10:36.597Z</updated>
    
    <content type="html"><![CDATA[<ul><li>下载文件:</li></ul><p>找一个快速一点儿的机房下载:<br>wget <a href="https://packages.graylog2.org/releases/graylog/graylog-2.5.1.tgz" target="_blank" rel="noopener">https://packages.graylog2.org/releases/graylog/graylog-2.5.1.tgz</a></p><ul><li>编辑修改graylogctl 文件在bin 目录下:</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">GRAYLOGCTL_DIR=$&#123;GRAYLOGCTL_DIR:=$(dirname "$GRAYLOGCTL")&#125;</span><br><span class="line">GRAYLOG_SERVER_JAR=$&#123;GRAYLOG_SERVER_JAR:=graylog.jar&#125;</span><br><span class="line">GRAYLOG_CONF=$&#123;GRAYLOG_CONF:=graylog.conf&#125;</span><br><span class="line">GRAYLOG_PID=$&#123;GRAYLOG_PID:=graylog.pid&#125;</span><br><span class="line">LOG_FILE=$&#123;LOG_FILE:=log/graylog-server.log&#125;</span><br></pre></td></tr></table></figure><ul><li><p>重命名配置文件:<br>graylog.example.conf<br>修改几个地方:<br>password_secret ： 为自定义的96个字符<br>root_username 超级用户昵称<br>root_password_sha2 超级用户密码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo -n "Enter Password: " &amp;&amp; head -1 &lt;/dev/stdin | tr -d '\n' | sha256sum | cut -d" " -f1</span><br></pre></td></tr></table></figure><p>rest_listen_uri ， web_listen_uri</p></li><li><p>日志rotate 配置:</p><p>  Configure Index Set -&gt;  Index Rotation Configuration 一般配置以天为单位就好</p></li><li>graylog.conf 中还可以单独配置使用的mongodb , elasticsearch 集群地址等</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;下载文件:&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;找一个快速一点儿的机房下载:&lt;br&gt;wget &lt;a href=&quot;https://packages.graylog2.org/releases/graylog/graylog-2.5.1.tgz&quot; target=&quot;_blan
      
    
    </summary>
    
      <category term="系统" scheme="https://xsec.7ever.cn/categories/%E7%B3%BB%E7%BB%9F/"/>
    
    
      <category term="graylog" scheme="https://xsec.7ever.cn/tags/graylog/"/>
    
  </entry>
  
  <entry>
    <title>mysql-slave-config</title>
    <link href="https://xsec.7ever.cn/2019/04/22/mysql-slave-config/"/>
    <id>https://xsec.7ever.cn/2019/04/22/mysql-slave-config/</id>
    <published>2019-04-22T10:06:50.000Z</published>
    <updated>2019-04-23T04:32:16.013Z</updated>
    
    <content type="html"><![CDATA[<h3 id="主库mysql-配置"><a href="#主库mysql-配置" class="headerlink" title="主库mysql 配置:"></a>主库mysql 配置:</h3> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line">max_connections = 2048</span><br><span class="line">sql_mode=NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES </span><br><span class="line">server_id = 4</span><br><span class="line">relay-log-index=slave-relay-bin.index</span><br><span class="line">relay-log=slave-relay-bin </span><br><span class="line">#slave-skip-errors=all</span><br><span class="line"></span><br><span class="line">log_bin = &quot;/data0/mysql/logs/bin.log&quot;</span><br><span class="line">expire_logs_days = 30</span><br><span class="line">max_binlog_size = 512m</span><br><span class="line">binlog_cache_size       = 4m</span><br><span class="line">max_binlog_cache_size   = 512m</span><br></pre></td></tr></table></figure><h3 id="授权语句"><a href="#授权语句" class="headerlink" title="授权语句:"></a>授权语句:</h3><p>GRANT REPLICATION SLAVE ON <em>.</em> TO ‘rep’@’192.168.%’  IDENTIFIED BY ‘123456’;</p><h4 id="从库配置："><a href="#从库配置：" class="headerlink" title="从库配置："></a>从库配置：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">[mysqld]</span><br><span class="line">max_connections = 2048</span><br><span class="line">sql_mode=NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES </span><br><span class="line">server_id = 3</span><br><span class="line">relay-log-index=slave-relay-bin.index</span><br><span class="line">relay-log=slave-relay-bin</span><br></pre></td></tr></table></figure><h4 id="操作从库语句"><a href="#操作从库语句" class="headerlink" title="操作从库语句:"></a>操作从库语句:</h4><p>CHANGE MASTER TO<br>           -&gt;     MASTER_HOST=’master_host_name’,<br>            -&gt;     MASTER_USER=’replication_user_name’,<br>            -&gt;     MASTER_PASSWORD=’replication_password’,<br>            -&gt;     MASTER_LOG_FILE=’recorded_log_file_name’,<br>            -&gt;     MASTER_LOG_POS=recorded_log_position;</p><h4 id="主从切换之前，可以先把主库，单方面写锁定"><a href="#主从切换之前，可以先把主库，单方面写锁定" class="headerlink" title="主从切换之前，可以先把主库，单方面写锁定:"></a>主从切换之前，可以先把主库，单方面写锁定:</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">FLUSH TABLES WITH READ LOCK</span><br><span class="line">UNLOCK TABLES;</span><br></pre></td></tr></table></figure><h3 id="锁定单个库"><a href="#锁定单个库" class="headerlink" title="锁定单个库:"></a>锁定单个库:</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> LOCK TABLES tbl_name [AS <span class="built_in">alias</span>] &#123;READ [LOCAL] | [LOW_PRIORITY] WRITE&#125;</span></span><br><span class="line">lock  tables test read;  ## 只锁定一个表</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;主库mysql-配置&quot;&gt;&lt;a href=&quot;#主库mysql-配置&quot; class=&quot;headerlink&quot; title=&quot;主库mysql 配置:&quot;&gt;&lt;/a&gt;主库mysql 配置:&lt;/h3&gt; &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table
      
    
    </summary>
    
      <category term="运维" scheme="https://xsec.7ever.cn/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="mysql" scheme="https://xsec.7ever.cn/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>rsync log 添加服务选项</title>
    <link href="https://xsec.7ever.cn/2019/04/22/rsync-log-setting/"/>
    <id>https://xsec.7ever.cn/2019/04/22/rsync-log-setting/</id>
    <published>2019-04-22T08:40:42.000Z</published>
    <updated>2019-04-22T08:41:52.810Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">log file = /var/log/rsyncd.log</span><br><span class="line">transfer logging = yes </span><br><span class="line">log format = %t %a %m %f %b</span><br><span class="line">syslog facility = local3</span><br><span class="line">timeout = 300 </span><br><span class="line"></span><br><span class="line">[cold]</span><br><span class="line">hosts allow = 1.1.1.1</span><br><span class="line">read only = no</span><br><span class="line">path = /data1/cold</span><br><span class="line">uid = cold</span><br><span class="line">gid = cold</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class
      
    
    </summary>
    
      <category term="开发" scheme="https://xsec.7ever.cn/categories/%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="rsync" scheme="https://xsec.7ever.cn/tags/rsync/"/>
    
  </entry>
  
  <entry>
    <title>golang 生成随机数种子设置</title>
    <link href="https://xsec.7ever.cn/2019/04/19/golang-random-number/"/>
    <id>https://xsec.7ever.cn/2019/04/19/golang-random-number/</id>
    <published>2019-04-19T03:07:38.000Z</published>
    <updated>2019-04-19T03:08:24.277Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">        <span class="string">"fmt"</span></span><br><span class="line">        <span class="string">"math/rand"</span></span><br><span class="line">        <span class="string">"time"</span></span><br><span class="line">       )</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">i := <span class="number">0</span></span><br><span class="line">       <span class="keyword">for</span> i &lt; <span class="number">10</span> &#123;</span><br><span class="line">           i++</span><br><span class="line">               r := rand.New(rand.NewSource(time.Now().UnixNano()))</span><br><span class="line">               fmt.Println(r.Intn(<span class="number">100</span>))</span><br><span class="line">       &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight golang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span clas
      
    
    </summary>
    
      <category term="开发" scheme="https://xsec.7ever.cn/categories/%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="golang" scheme="https://xsec.7ever.cn/tags/golang/"/>
    
      <category term="random" scheme="https://xsec.7ever.cn/tags/random/"/>
    
  </entry>
  
  <entry>
    <title>shell 命令审计</title>
    <link href="https://xsec.7ever.cn/2019/04/12/bash-audit/"/>
    <id>https://xsec.7ever.cn/2019/04/12/bash-audit/</id>
    <published>2019-04-12T00:52:41.000Z</published>
    <updated>2019-04-12T01:03:03.077Z</updated>
    
    <content type="html"><![CDATA[<h3 id="提前看"><a href="#提前看" class="headerlink" title="提前看:"></a>提前看:</h3><ul><li>.bash版本至少3.00或以上</li><li>接受审计的登录用户默认shell必须为bash</li></ul><p>配置方法，使用history ，添加固定的 PROMPT_COMMAND 命令格式, HISTTIMEFORMAT 设置history 的格式。<br>(如果其他的shell 也支持类似的变量，也可以用类似的方法解决)</p><h3 id="创建所需文件，及权限限制修改"><a href="#创建所需文件，及权限限制修改" class="headerlink" title="创建所需文件，及权限限制修改:"></a>创建所需文件，及权限限制修改:</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mkdir /var/log/shell_audit</span><br><span class="line">touch /var/log/shell_audit/audit.log</span><br><span class="line">chown nobody:nobody /var/log/shell_audit/audit.log</span><br><span class="line">chmod 002 /var/log/shell_audit/audit.log</span><br><span class="line">chattr +a /var/log/shell_audit/audit.log</span><br></pre></td></tr></table></figure><h3 id="提前设置history-的相关设置"><a href="#提前设置history-的相关设置" class="headerlink" title="提前设置history 的相关设置:"></a>提前设置history 的相关设置:</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 添加如下内容到 bashrc ,保证用户登录及生效</span><br><span class="line">HISTSIZE=2048</span><br><span class="line">HISTTIMEFORMAT="%Y/%m/%d %T   ";export HISTTIMEFORMAT</span><br><span class="line">export HISTORY_FILE=/var/log/shell_audit/audit.log</span><br><span class="line">export PROMPT_COMMAND='&#123; code=$?;thisHistID=`history 1|awk "&#123;print \\$1&#125;"`;lastCommand=`history 1| awk "&#123;\\$1=\"\" ;print&#125;"`;user=`id -un`;whoStr=(`who -u am i`);realUser=$&#123;whoStr[0]&#125;;logDay=$&#123;whoStr[2]&#125;;logTime=$&#123;whoStr[3]&#125;;pid=$&#123;whoStr[5]&#125;;ip=$&#123;whoStr[6]&#125;;if [ $&#123;thisHistID&#125;x != $&#123;lastHistID&#125;x ];then echo -E `date "+%Y/%m/%d %H:%M:%S"` $user\($realUser\)@$ip[PID:$pid][LOGIN:$logDay $logTime] --- [$PWD]$lastCommand [$code];lastHistID=$thisHistID;fi; &#125; &gt;&gt; $HISTORY_FILE'</span><br></pre></td></tr></table></figure><h3 id="添加相应的logrotate-防止日志过大"><a href="#添加相应的logrotate-防止日志过大" class="headerlink" title="添加相应的logrotate 防止日志过大:"></a>添加相应的logrotate 防止日志过大:</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/logrotate.d/shell_audit</span><br><span class="line">/var/log/shell_audit/audit.log &#123;</span><br><span class="line">    weekly</span><br><span class="line">    missingok</span><br><span class="line">    dateext</span><br><span class="line">    rotate 100</span><br><span class="line">    sharedscripts</span><br><span class="line">    prerotate</span><br><span class="line">    /usr/bin/chattr -a /var/log/shell_audit/audit.log</span><br><span class="line">    endscript</span><br><span class="line">    sharedscripts</span><br><span class="line">    postrotate</span><br><span class="line">      /bin/touch /var/log/shell_audit/audit.log</span><br><span class="line">      /bin/chmod 002 /var/log/shell_audit/audit.log</span><br><span class="line">      /bin/chown nobody:nobody /var/log/shell_audit/audit.log</span><br><span class="line">      /usr/bin/chattr +a /var/log/shell_audit/audit.log</span><br><span class="line">    endscript</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="还可以配合rsyslog-传输到-集中的命令日志服务器-添加实时审计监控"><a href="#还可以配合rsyslog-传输到-集中的命令日志服务器-添加实时审计监控" class="headerlink" title="还可以配合rsyslog 传输到 集中的命令日志服务器,添加实时审计监控:"></a>还可以配合rsyslog 传输到 集中的命令日志服务器,添加实时审计监控:</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">ruleset(name="rule_rsyslog") &#123;</span><br><span class="line">    action(type="omfwd"</span><br><span class="line">        Protocol="udp"</span><br><span class="line">        Target="10.211.101.93"</span><br><span class="line">        Port="521")</span><br><span class="line">    stop</span><br><span class="line">&#125;</span><br><span class="line">input(</span><br><span class="line">    type="imfile"</span><br><span class="line">    File="/var/log/shell_audit/audit.log"</span><br><span class="line">    Facility="user"</span><br><span class="line">    Severity="notice"</span><br><span class="line">    Tag=""</span><br><span class="line">    PersistStateInterval="1"</span><br><span class="line">    Ruleset="rule_rsyslog"</span><br><span class="line">)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;提前看&quot;&gt;&lt;a href=&quot;#提前看&quot; class=&quot;headerlink&quot; title=&quot;提前看:&quot;&gt;&lt;/a&gt;提前看:&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;.bash版本至少3.00或以上&lt;/li&gt;
&lt;li&gt;接受审计的登录用户默认shell必须为bash&lt;/li&gt;
&lt;/u
      
    
    </summary>
    
      <category term="审计" scheme="https://xsec.7ever.cn/categories/%E5%AE%A1%E8%AE%A1/"/>
    
    
      <category term="shell" scheme="https://xsec.7ever.cn/tags/shell/"/>
    
      <category term="audit" scheme="https://xsec.7ever.cn/tags/audit/"/>
    
  </entry>
  
  <entry>
    <title>yaf 控制器分层处理</title>
    <link href="https://xsec.7ever.cn/2019/04/03/yaf-use-module/"/>
    <id>https://xsec.7ever.cn/2019/04/03/yaf-use-module/</id>
    <published>2019-04-03T06:48:48.000Z</published>
    <updated>2019-04-28T07:24:16.204Z</updated>
    
    <content type="html"><![CDATA[<p>主要分两个处理办法:</p><h2 id="分模块处理"><a href="#分模块处理" class="headerlink" title="分模块处理:"></a>分模块处理:</h2><p>配置选项中，添加当前的模块:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">application.modules = 'Test,Index'</span><br></pre></td></tr></table></figure><p>创建相应的目录:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@hids application]# tree modules/</span><br><span class="line">modules/</span><br><span class="line">└── Test</span><br><span class="line">    └── controllers</span><br><span class="line">        └── Hello.php</span><br><span class="line"></span><br><span class="line">2 directories, 1 file</span><br></pre></td></tr></table></figure><p>访问地址:<br><a href="http://yourhost/prefix/test/hello/world" target="_blank" rel="noopener">http://yourhost/prefix/test/hello/world</a></p><ul><li>注: 地址去掉prefix 以后超过三段，才会去识别模块 * </li></ul><h2 id="分文件夹存储"><a href="#分文件夹存储" class="headerlink" title="分文件夹存储:"></a>分文件夹存储:</h2><p>Controller 中创建对应的文件夹:<br>比如 controllers/Flow/Strategy.php</p><p>文件中的类名为 Flow_StrategyController</p><p>URL 的访问对应关系: </p><ul><li><prefix>/flow_strategy/list  -&gt; class listAction 方法</prefix></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;主要分两个处理办法:&lt;/p&gt;
&lt;h2 id=&quot;分模块处理&quot;&gt;&lt;a href=&quot;#分模块处理&quot; class=&quot;headerlink&quot; title=&quot;分模块处理:&quot;&gt;&lt;/a&gt;分模块处理:&lt;/h2&gt;&lt;p&gt;配置选项中，添加当前的模块:&lt;/p&gt;
&lt;figure class=&quot;high
      
    
    </summary>
    
      <category term="开发" scheme="https://xsec.7ever.cn/categories/%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="yaf" scheme="https://xsec.7ever.cn/tags/yaf/"/>
    
      <category term="php" scheme="https://xsec.7ever.cn/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>一个空的kafka 接收数据</title>
    <link href="https://xsec.7ever.cn/2019/03/29/kafka-receive/"/>
    <id>https://xsec.7ever.cn/2019/03/29/kafka-receive/</id>
    <published>2019-03-29T05:40:43.000Z</published>
    <updated>2019-03-29T05:45:13.008Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简单代码实现如下"><a href="#简单代码实现如下" class="headerlink" title="简单代码实现如下:"></a>简单代码实现如下:</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> kafka <span class="keyword">import</span> KafkaConsumer</span><br><span class="line"></span><br><span class="line">consumer = KafkaConsumer(</span><br><span class="line">        <span class="string">'topic-name'</span>,</span><br><span class="line">        bootstrap_servers=<span class="string">'.....com:9092'</span>,</span><br><span class="line">        enable_auto_commit=<span class="keyword">False</span>,</span><br><span class="line">        api_version=(<span class="number">0</span>, <span class="number">8</span>, <span class="number">2</span>, <span class="number">1</span>)</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> msg <span class="keyword">in</span> consumer:</span><br><span class="line">    print(msg)</span><br></pre></td></tr></table></figure><h2 id="运行监控"><a href="#运行监控" class="headerlink" title="运行监控:"></a>运行监控:</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> ./tools/kafka_2.10-0.9.0.1/bin/kafka-consumer-offset-checker.sh --group group_name --zookeeper=zookeeper_server --topic yourtopic</span></span><br></pre></td></tr></table></figure><h2 id="网卡流量监控"><a href="#网卡流量监控" class="headerlink" title="网卡流量监控:"></a>网卡流量监控:</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sar -n DEV 10</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;简单代码实现如下&quot;&gt;&lt;a href=&quot;#简单代码实现如下&quot; class=&quot;headerlink&quot; title=&quot;简单代码实现如下:&quot;&gt;&lt;/a&gt;简单代码实现如下:&lt;/h2&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td
      
    
    </summary>
    
      <category term="开发" scheme="https://xsec.7ever.cn/categories/%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="python" scheme="https://xsec.7ever.cn/tags/python/"/>
    
      <category term="kafka" scheme="https://xsec.7ever.cn/tags/kafka/"/>
    
  </entry>
  
  <entry>
    <title>arts 记录 第0周</title>
    <link href="https://xsec.7ever.cn/2019/03/24/arts-2019-03-24/"/>
    <id>https://xsec.7ever.cn/2019/03/24/arts-2019-03-24/</id>
    <published>2019-03-24T05:04:40.000Z</published>
    <updated>2019-03-24T05:05:41.109Z</updated>
    
    <content type="html"><![CDATA[<h1 id="arts-2019-03-18-2019-03-24"><a href="#arts-2019-03-18-2019-03-24" class="headerlink" title="arts 2019-03-18 ~ 2019-03-24"></a>arts 2019-03-18 ~ 2019-03-24</h1><hr><h2 id="A-（Algorithm）"><a href="#A-（Algorithm）" class="headerlink" title="A （Algorithm）"></a>A （Algorithm）</h2><ul><li>题目如下: </li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">给你两个非空的链式队列代表两个非负的整数.</span><br><span class="line">You are given two non-empty linked lists representing two non-negative integers. </span><br><span class="line">位数按照相反的顺序存在队列对应的位置，每一位只包含一位</span><br><span class="line">The digits are stored in reverse order and each of their nodes contain a single digit. </span><br><span class="line">把这两个数字加起来用链式队列的方式返回。</span><br><span class="line">Add the two numbers and return it as a linked list.</span><br><span class="line">你可以假设这两个数字不以0开头，除了0本身。</span><br><span class="line">You may assume the two numbers do not contain any leading zero, except the number 0 itself.</span><br><span class="line"></span><br><span class="line">测试用例：</span><br><span class="line">Example:</span><br><span class="line">输入:</span><br><span class="line">Input: (2 -&gt; 4 -&gt; 3) + (5 -&gt; 6 -&gt; 4)</span><br><span class="line">输出:</span><br><span class="line">Output: 7 -&gt; 0 -&gt; 8</span><br><span class="line">解释:</span><br><span class="line">Explanation: 342 + 465 = 807.</span><br></pre></td></tr></table></figure><ul><li>解法如下</li></ul><figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">addTwoNumbers</span><span class="params">(l1 *ListNode, l2 *ListNode)</span> *<span class="title">ListNode</span></span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//指针pos1,pos2,resultPos 分别表示队列l1,l2,结果的当前值</span></span><br><span class="line">    <span class="keyword">var</span> pos1 *ListNode = l1</span><br><span class="line">    <span class="keyword">var</span> pos2 *ListNode = l2</span><br><span class="line">    <span class="keyword">var</span> result,resultPos *ListNode</span><br><span class="line">    <span class="comment">// 用来表示进位</span></span><br><span class="line">    <span class="keyword">var</span> plusNumber <span class="keyword">int</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 表示循环条件 l1 不为空，或者 l2 不为空</span></span><br><span class="line">    <span class="keyword">for</span> ; (pos1 != <span class="literal">nil</span> || pos2 != <span class="literal">nil</span> ); &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//初始化结果的第一个元素,并且处理当前循环计算的新元素</span></span><br><span class="line">        <span class="keyword">if</span> resultPos == <span class="literal">nil</span> &#123;</span><br><span class="line">            resultPos = <span class="built_in">new</span>(ListNode)</span><br><span class="line">            result = resultPos</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            resultPos.Next = <span class="built_in">new</span>(ListNode)</span><br><span class="line">            resultPos = resultPos.Next</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//多重if条件判断，这段代码比较有意思</span></span><br><span class="line">        <span class="comment">//可以减掉频繁的if为空判断</span></span><br><span class="line">        <span class="keyword">switch</span> &#123;</span><br><span class="line">            <span class="keyword">case</span> pos1 != <span class="literal">nil</span> &amp;&amp; pos2 == <span class="literal">nil</span>:</span><br><span class="line">                 resultPos.Val = pos1.Val + plusNumber</span><br><span class="line">                 pos1 = pos1.Next</span><br><span class="line">            <span class="keyword">case</span> pos1 == <span class="literal">nil</span> &amp;&amp; pos2 != <span class="literal">nil</span>:</span><br><span class="line">                resultPos.Val = pos2.Val + plusNumber</span><br><span class="line">                pos2 = pos2.Next</span><br><span class="line">            <span class="keyword">default</span> :</span><br><span class="line">                resultPos.Val = pos1.Val + pos2.Val + plusNumber</span><br><span class="line">                pos1 = pos1.Next</span><br><span class="line">                pos2 = pos2.Next</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//重新设置进位，plusNumber 一定要归零</span></span><br><span class="line">        plusNumber = <span class="number">0</span></span><br><span class="line">        <span class="keyword">if</span> resultPos.Val &gt; <span class="number">9</span> &#123;</span><br><span class="line">            plusNumber = resultPos.Val / <span class="number">10</span></span><br><span class="line">        &#125;</span><br><span class="line">        resultPos.Val = resultPos.Val % <span class="number">10</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//最后如果仍然存在进位，那么添加一个新的元素为1</span></span><br><span class="line">    <span class="keyword">if</span> plusNumber != <span class="number">0</span> &#123;</span><br><span class="line">        resultPos.Next = &amp;ListNode&#123;Val:<span class="number">1</span>,Next:<span class="literal">nil</span>&#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="R-Review"><a href="#R-Review" class="headerlink" title="R (Review)"></a>R (Review)</h2><p><a href="https://medium.com/@saginadir/why-i-love-golang-90085898b4f7" target="_blank" rel="noopener">Why I Love Golang</a></p><p>文章讲述了一个golang语言爱好者的简单总结。</p><ul><li>GOPATH 的环境变量:</li></ul><p>golang 强制把你对go语言的开发，放置到一个叫做GOPATH 的目录里，而不像其他语言那样，可以到处存放。<br>同时也解决了项目迁移的问题，只需要带走整个GOPATH 即可。</p><ul><li><p>Golang 应用:<br>构造及其简单，只需要打包成main包，然后其中包含一个main 函数 即可</p></li><li><p>Golang 的模块:<br>Golang 的每一个目录都是一个模块，一个包。就像一个静态类型，所有的成员都像static 。静态变量或者静态方法。<br>但是需要外部调用的方法，首字母必须大写。</p></li><li><p>Gofmt :<br>golang 还提供了一个格式化代码的工具。省去了大家格式化代码的麻烦，专注于代码本身。<br>（解决了tab,空格问题，大括号问题 O(∩_∩)O哈哈哈~)</p></li><li><p>Golang 的import:<br>每次引入都是相对于GOPATH/src ，而不像其他语言可以添加自定义的引入目录。<br>这样就不会出现莫名其妙的引入(鬼知道有些包哪里来的)</p></li><li><p>Go Get 系统:<br>go get 像nodejs 里边的npm 系统。<br>安装一个包的建议命令:<br>go get -v -u # -u 允许更新，-v 显示详细过程</p></li><li><p>Go的Build 和包系统:<br>GOPATH 其他目录介绍:<br>bin 存放编译好的执行文件<br>pkg 放置编译好的类库文件<br>golang 的编译很快。<br>每一个package 都可以编译成一个对应的静态链接库.a文件 </p></li><li><p>Golang 的跨平台系统：<br>你不需要去其他的系统上就可以完成跨平台编译:</p></li><li><p>Goang 语言本身:<br>足够简单的语言，没有的特性:<br>classes<br>Operators overloading<br>Function overloading<br>Optional Parameters<br>exceptions</p></li><li><p>Golang 语言并发特性：<br>作者觉得这不是golang语言的特性.<br>golang 摒弃了线程，使用更简单的goroutine 。<br>goroutine 允许开发者把任务扔给cpu处理而不必担心怎么管理他们.</p></li></ul><p>一个极简单的并发处理代码:</p><figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"time"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> data_scan <span class="keyword">chan</span> <span class="keyword">string</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">init</span><span class="params">()</span></span> &#123;</span><br><span class="line">data_scan = <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">string</span>, <span class="number">128</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Scan</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">&lt;-data_scan</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Send</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">data_scan &lt;- <span class="string">"hello send message"</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">24</span>; i++ &#123;</span><br><span class="line"><span class="keyword">go</span> Scan()</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">24</span>; i++ &#123;</span><br><span class="line"><span class="keyword">go</span> Send()</span><br><span class="line">&#125;</span><br><span class="line">time.Sleep(time.Second * <span class="number">120</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="T-（Tip）"><a href="#T-（Tip）" class="headerlink" title="T （Tip）"></a>T （Tip）</h2><p>golang 写一个跨语言调用的so文件:</p><p>编译脚本:<br>go build -buildmode=c-shared -ldflags=”-w -s” -o goso.so<br>其中 -ldflags 中可以包含-X a=b -X c=d 在编译时决定变量的值<br>goso.go 的编写，<br>包含一个空的main函数。<br>其中包含的导出函数，添加 export 注释即可以导出:<br><figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main </span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">"fmt"</span></span><br><span class="line">    <span class="string">"C"</span></span><br><span class="line">    <span class="string">"github.com/v1xingyue/goso/info"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">//export BoxHello</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">BoxHello</span><span class="params">(message \*C.char)</span> \*<span class="title">C</span>.<span class="title">char</span></span> &#123;</span><br><span class="line">    fmt.Println(<span class="string">"Hello Box World !"</span>)</span><br><span class="line">    info.Hello()</span><br><span class="line">    fmt.Println(<span class="string">"this is message "</span>,C.GoString(message))</span><br><span class="line">    <span class="keyword">return</span> C.CString(<span class="string">"this is message from golang !"</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>&#123;&#125;</span><br></pre></td></tr></table></figure></p><p>具体可以参看goso的项目: <a href="https://github.com/v1xingyue/goso" target="_blank" rel="noopener">goso</a></p><h2 id="S-Share"><a href="#S-Share" class="headerlink" title="S (Share)"></a>S (Share)</h2><p>分享几个工作中遇到的问题。</p><ul><li><ol><li>centos 双网卡配置，第一个网卡通，第二个网卡上的IP地址不通。</li></ol></li></ul><p>原因是因为,linux 内核的反向路由检测功能。该内核参数为: rp_filter。<br>取值有三种: </p><pre><code>* 0 关闭反向路由检测。* 1 开启严格的路由检测,检测数据包的源地址是否为最佳地址，如果不是直接丢弃* 2 开启简单的路由检测,检测数据包的反向地址是否可达，如果不可达，直接丢弃。</code></pre><p>需要将该值设置为0:<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">echo</span> 0 &gt; /proc/sys/net/ipv4/conf/all/rp_filter</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">echo</span> 0 &gt; /proc/sys/net/ipv4/conf/eth0/rp_filter </span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">echo</span> 0 &gt; /proc/sys/net/ipv4/conf/eth1/rp_filter</span></span><br></pre></td></tr></table></figure></p><ul><li>2 使用ipvsadm 搭建一个简单的LVS DR 模式:</li></ul><p>先简单说下DR模式的数据流向, 从外部设备到 Director Server （包含了vip的机器）,<br>ipvsadm 检测到该ip 是一个集群，那么将该数据包转发到 对应的Rip （真实提供服务的机器）。<br>然后，数据直接从Rip 路由到外部设备。</p><p>配置有几个要点:</p><p>单网卡绑定多个虚拟地址,（该地址需保持在同一个网段,且不被其他机器占用）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ip addr add 10.212.0.129/24 dev eth1</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">## 删除IP 绑定 使用 ip addr del 10.212.0.129/24 dev eth1</span></span></span><br></pre></td></tr></table></figure><p>简单配置ipvsadm 使用DR 模式:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ipvsadm -C</span><br><span class="line">ipvsadm -A -t 10.212.0.129:80 -s rr</span><br><span class="line">ipvsadm -a -t 10.212.0.129:80 -r 10.212.0.23:80 ## 添加成员</span><br></pre></td></tr></table></figure><p>rip 配置:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">VIP=10.212.0.129</span><br><span class="line">ifconfig lo:0 $VIP broadcast $VIP netmask 255.255.255.255 up</span><br><span class="line">route add -host $VIP dev lo:0</span><br></pre></td></tr></table></figure><p>这样就完成了简单的LVS 配置: 访问 <a href="http://10.212.0.129" target="_blank" rel="noopener">http://10.212.0.129</a> 就可以路由到 10.212.0.23 上，并且会带了客户端的源IP.</p><hr><h2 id="还需要arp两个相关的概念"><a href="#还需要arp两个相关的概念" class="headerlink" title="还需要arp两个相关的概念:"></a>还需要arp两个相关的概念:</h2><ul><li>arp_ignore参数：</li></ul><p>设定请求的目标地址为本地ip时，对其arp的查询作不同的应答模式。默认有8个值，我们只使用2个。<br>arp_ignore为0时，表示无论哪块网卡收到arp查询请求，只要本机有此mac地址的网卡，就给予回应。<br>arp_ignore为1时，表示只有请求的mac地址是自己的网卡给予回应。比如一台服务器有两块网卡，其中的一块网卡收arp请求，但是请求的mac是本机的另一块网卡。那么这块网卡就一定不会作出应答。</p><ul><li>arp_announce参数:</li></ul><p>设定了网卡在向外部宣告自己IP-MAC时的级别。有3个值。</p><p>arp_announce为0时，表示无论哪块网卡收到了arp的请求，只要发现本机有请求的mac，就会响应。<br>arp_announce为1时，表示尽量避免响应ARP请求中MAC不是本网卡的。如一个主机有多块网卡，其中一块网卡接收到了ARP请求，发现所请求的MAC是本机另一块网卡的，这个时候接收到ARP请求的这块网卡就尽量避免响应。<br>arp_announce为2时，表示总是使用最合适的网卡来响应。一个主机有多块网卡，其中一块网卡接收到了ARP请求，发现所请求的MAC是本机另一块网卡的，这个时候接收到ARP请求的这块网卡就一定不响应，只有发现请求的MAC是自己的才给与响应。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;arts-2019-03-18-2019-03-24&quot;&gt;&lt;a href=&quot;#arts-2019-03-18-2019-03-24&quot; class=&quot;headerlink&quot; title=&quot;arts 2019-03-18 ~ 2019-03-24&quot;&gt;&lt;/a&gt;arts 2
      
    
    </summary>
    
      <category term="arts" scheme="https://xsec.7ever.cn/categories/arts/"/>
    
    
      <category term="arts" scheme="https://xsec.7ever.cn/tags/arts/"/>
    
  </entry>
  
  <entry>
    <title>centos 双网卡配置有一个网卡不通</title>
    <link href="https://xsec.7ever.cn/2019/03/22/centos-double-card/"/>
    <id>https://xsec.7ever.cn/2019/03/22/centos-double-card/</id>
    <published>2019-03-22T04:32:47.000Z</published>
    <updated>2019-03-22T04:35:00.873Z</updated>
    
    <content type="html"><![CDATA[<p>根本原因:</p><p>Linux默认启用了反向路由检查</p><p>如果2个网卡在一个Lan里面,那么服务器可能从eth0或者eth1发现网关, 如果一个包从eth0进入了, 而网关在eth1上, 那么从eth1是出不去的, 就不通了.  反向路由检查要求从哪里来的才能回哪去.</p><p>关闭反向路由检查(根据自己的情况替换第二第三行的网卡名):</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">echo 0 &gt; /proc/sys/net/ipv4/conf/all/rp_filter</span><br><span class="line">echo 0 &gt; /proc/sys/net/ipv4/conf/eth0/rp_filter</span><br><span class="line">echo 0 &gt; /proc/sys/net/ipv4/conf/eth1/rp_filter</span><br></pre></td></tr></table></figure><p>每次开机自动关闭反向路由检查, 加入 /etc/rc.local 即可.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;根本原因:&lt;/p&gt;
&lt;p&gt;Linux默认启用了反向路由检查&lt;/p&gt;
&lt;p&gt;如果2个网卡在一个Lan里面,那么服务器可能从eth0或者eth1发现网关, 如果一个包从eth0进入了, 而网关在eth1上, 那么从eth1是出不去的, 就不通了.  反向路由检查要求从哪里来的才
      
    
    </summary>
    
      <category term="运维" scheme="https://xsec.7ever.cn/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="centos" scheme="https://xsec.7ever.cn/tags/centos/"/>
    
      <category term="rp_filter" scheme="https://xsec.7ever.cn/tags/rp-filter/"/>
    
  </entry>
  
  <entry>
    <title>python 打开excel</title>
    <link href="https://xsec.7ever.cn/2019/03/15/python-excel/"/>
    <id>https://xsec.7ever.cn/2019/03/15/python-excel/</id>
    <published>2019-03-15T08:41:45.000Z</published>
    <updated>2019-03-18T07:30:07.506Z</updated>
    
    <content type="html"><![CDATA[<hr><p>日常工作生活中，经常用到excel 传递表格。而excel 的处理能力有限，所以催生了如下的脚本。<br>该脚本会自动返回一组迭代器，返回四个值(表格名，行号，列号，内容)。然后自己做进一步处理就好</p><p><em>脚本如下:</em></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">#coding=utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> logging</span><br><span class="line"><span class="keyword">import</span> xlrd</span><br><span class="line"></span><br><span class="line">logging.basicConfig(level=logging.DEBUG,format=<span class="string">'%(asctime)s %(filename)s[line:%(lineno)d] %(levelname)s %(message)s'</span>,datefmt=<span class="string">'%a, %d %b %Y %H:%M:%S'</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">xlsLoop</span><span class="params">(xlsName)</span>:</span></span><br><span class="line">wb = xlrd.open_workbook(xlsName)</span><br><span class="line">names = wb.sheet_names()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> name <span class="keyword">in</span> names:</span><br><span class="line">sheet = wb.sheet_by_name(name)</span><br><span class="line"><span class="keyword">for</span> rownum <span class="keyword">in</span> range(sheet.nrows):</span><br><span class="line">row = sheet.row_values(rownum)</span><br><span class="line">colnum = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> col <span class="keyword">in</span> row:</span><br><span class="line"><span class="comment">#logging.debug("&lt;%s&gt; [%d,%d] %s",name,rownum,colnum,col)</span></span><br><span class="line">colnum += <span class="number">1</span> </span><br><span class="line"><span class="keyword">yield</span> (name,rownum,colnum,col)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> sheet,rownum,colnum,col <span class="keyword">in</span> xlsLoop(<span class="string">'test.xlsx'</span>):</span><br><span class="line">logging.info(<span class="string">"%s %s %s %s "</span>,sheet,rownum,colnum,col)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;p&gt;日常工作生活中，经常用到excel 传递表格。而excel 的处理能力有限，所以催生了如下的脚本。&lt;br&gt;该脚本会自动返回一组迭代器，返回四个值(表格名，行号，列号，内容)。然后自己做进一步处理就好&lt;/p&gt;
&lt;p&gt;&lt;em&gt;脚本如下:&lt;/em&gt;&lt;/p&gt;
&lt;figur
      
    
    </summary>
    
      <category term="开发" scheme="https://xsec.7ever.cn/categories/%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="python" scheme="https://xsec.7ever.cn/tags/python/"/>
    
      <category term="xlrd" scheme="https://xsec.7ever.cn/tags/xlrd/"/>
    
  </entry>
  
  <entry>
    <title>openssl 生成自定义证书</title>
    <link href="https://xsec.7ever.cn/2019/03/15/openssl-custom/"/>
    <id>https://xsec.7ever.cn/2019/03/15/openssl-custom/</id>
    <published>2019-03-15T05:03:28.000Z</published>
    <updated>2019-03-15T05:04:04.489Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">openssl genrsa -out server.key 1024</span><br><span class="line">openssl req -new -x509 -days 3650 -key server.key -out server.crt -subj "/C=CN/ST=mykey/L=mykey/O=mykey/OU=mykey/CN=domain1/CN=domain2/CN=domain3"</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;
      
    
    </summary>
    
      <category term="开发" scheme="https://xsec.7ever.cn/categories/%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="openssl" scheme="https://xsec.7ever.cn/tags/openssl/"/>
    
  </entry>
  
  <entry>
    <title>golang 编写测试用例</title>
    <link href="https://xsec.7ever.cn/2019/03/06/golang-test-code/"/>
    <id>https://xsec.7ever.cn/2019/03/06/golang-test-code/</id>
    <published>2019-03-06T02:22:11.000Z</published>
    <updated>2019-03-06T05:54:11.705Z</updated>
    
    <content type="html"><![CDATA[<p>golang 写测试用例，非常简单。如下几步即可:</p><ul><li>普通的包，文件命名必须以 test.go 结尾</li><li>包内必须包含 指定的包，指定的方式定义函数用例:</li></ul><figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">"testing"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">TestHello</span><span class="params">(t *testing.T)</span></span> &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>打印日志,通过或者失败:</li></ul><figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">t.Logf(<span class="string">"Hello Log Message %s "</span>,<span class="string">"&lt;something&gt;"</span>)</span><br><span class="line">t.Errorf(<span class="string">"One Error Happend %s"</span>,<span class="string">"&lt;badthing&gt;"</span>) <span class="comment">// 只要出现Error 那么就认为该测试用例失败</span></span><br></pre></td></tr></table></figure><ul><li>运行测试:</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> go test  # 默认只包含测试不通过的用例，但是成功的也回执行,如果想看所有的日志，那么请用 go test -v </span><br><span class="line"></span><br><span class="line">➜  info go test</span><br><span class="line">--- FAIL: TestArraySlice (0.00s)</span><br><span class="line">info_test.go:28: 2 7</span><br><span class="line">info_test.go:29: 3 5</span><br><span class="line">info_test.go:30: End!</span><br><span class="line">FAIL</span><br><span class="line">exit status 1</span><br><span class="line">FAILinfo0.002s</span><br></pre></td></tr></table></figure><p>go test 会执行当前包内定义的所有的以 Test 开头的方法定义</p><ul><li>把go test 编译成一个可执行文件(不执行)</li></ul><p>可以使用这个命令生成可以灵活扩展的多入口程序</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> go test -c</span><br></pre></td></tr></table></figure><ul><li>如下是一个编写好的简单测试用例文件:<figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> info</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"testing"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">TestSomething</span><span class="params">(t *testing.T)</span></span> &#123;</span><br><span class="line">t.Log(<span class="string">"Hello test something!"</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">TestGoAround</span><span class="params">(t *testing.T)</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">1</span>; i &lt; <span class="number">10</span>; i++ &#123;</span><br><span class="line">t.Log(i)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">TestSlice</span><span class="params">(t *testing.T)</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> s []<span class="keyword">int</span></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">12</span>; i++ &#123;</span><br><span class="line">s = <span class="built_in">append</span>(s, i+<span class="number">3</span>)</span><br><span class="line">t.Log(<span class="built_in">len</span>(s), <span class="built_in">cap</span>(s))</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">TestArraySlice</span><span class="params">(t *testing.T)</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> items = [...]<span class="keyword">int</span>&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>&#125;</span><br><span class="line"><span class="keyword">var</span> a = items[<span class="number">3</span>:<span class="number">5</span>]</span><br><span class="line"><span class="keyword">var</span> b = items[<span class="number">5</span>:<span class="number">8</span>]</span><br><span class="line"></span><br><span class="line">t.Log(<span class="built_in">len</span>(a), <span class="built_in">cap</span>(a))</span><br><span class="line">t.Log(<span class="built_in">len</span>(b), <span class="built_in">cap</span>(b))</span><br><span class="line">t.Errorf(<span class="string">"End!"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;golang 写测试用例，非常简单。如下几步即可:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;普通的包，文件命名必须以 test.go 结尾&lt;/li&gt;
&lt;li&gt;包内必须包含 指定的包，指定的方式定义函数用例:&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight gola
      
    
    </summary>
    
      <category term="开发" scheme="https://xsec.7ever.cn/categories/%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="golang" scheme="https://xsec.7ever.cn/tags/golang/"/>
    
      <category term="test" scheme="https://xsec.7ever.cn/tags/test/"/>
    
  </entry>
  
  <entry>
    <title>使用sphinx 生成python 包的注释文档</title>
    <link href="https://xsec.7ever.cn/2019/03/04/sphinx-python-document/"/>
    <id>https://xsec.7ever.cn/2019/03/04/sphinx-python-document/</id>
    <published>2019-03-04T07:30:11.000Z</published>
    <updated>2019-03-04T07:35:36.725Z</updated>
    
    <content type="html"><![CDATA[<h3 id="安装shpinx"><a href="#安装shpinx" class="headerlink" title="安装shpinx"></a>安装shpinx</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> pip install sphinx</span></span><br></pre></td></tr></table></figure><h3 id="创建代码目录，或者切换到代码目录-初始化sphinx-配置"><a href="#创建代码目录，或者切换到代码目录-初始化sphinx-配置" class="headerlink" title="创建代码目录，或者切换到代码目录,初始化sphinx 配置"></a>创建代码目录，或者切换到代码目录,初始化sphinx 配置</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash">  sphinx-quickstart</span></span><br></pre></td></tr></table></figure><h3 id="修改-source-conf-py"><a href="#修改-source-conf-py" class="headerlink" title="修改 source/conf.py"></a>修改 source/conf.py</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">sys.path.insert(<span class="number">0</span>, os.path.abspath(<span class="string">'../'</span>))</span><br></pre></td></tr></table></figure><h3 id="生成rst-文件"><a href="#生成rst-文件" class="headerlink" title="生成rst 文件:"></a>生成rst 文件:</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sphinx-apidoc -o  ./source code</span><br></pre></td></tr></table></figure><h3 id="生成Html-文档"><a href="#生成Html-文档" class="headerlink" title="生成Html 文档:"></a>生成Html 文档:</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make html</span><br></pre></td></tr></table></figure><p><em>Makefile 修改</em></p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># Minimal makefile for Sphinx documentation</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># You can set these variables from the command line.</span></span><br><span class="line">SPHINXOPTS    =</span><br><span class="line">SPHINXBUILD   = sphinx-build</span><br><span class="line">SOURCEDIR     = source</span><br><span class="line">BUILDDIR      = build</span><br><span class="line"></span><br><span class="line"><span class="comment"># Put it first so that "make" without argument is like "make help".</span></span><br><span class="line"><span class="section">help:</span></span><br><span class="line">@<span class="variable">$(SPHINXBUILD)</span> -M help <span class="string">"<span class="variable">$(SOURCEDIR)</span>"</span> <span class="string">"<span class="variable">$(BUILDDIR)</span>"</span> <span class="variable">$(SPHINXOPTS)</span> <span class="variable">$(O)</span></span><br><span class="line"></span><br><span class="line"><span class="meta"><span class="meta-keyword">.PHONY</span>: help Makefile</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Catch-all target: route all unknown targets to Sphinx using the new</span></span><br><span class="line"><span class="comment"># "make mode" option.  $(O) is meant as a shortcut for $(SPHINXOPTS).</span></span><br><span class="line"><span class="section">%: Makefile</span></span><br><span class="line">sphinx-apidoc -o  ./source xsdk</span><br><span class="line">@<span class="variable">$(SPHINXBUILD)</span> -M <span class="variable">$@</span> <span class="string">"<span class="variable">$(SOURCEDIR)</span>"</span> <span class="string">"<span class="variable">$(BUILDDIR)</span>"</span> <span class="variable">$(SPHINXOPTS)</span> <span class="variable">$(O)</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;安装shpinx&quot;&gt;&lt;a href=&quot;#安装shpinx&quot; class=&quot;headerlink&quot; title=&quot;安装shpinx&quot;&gt;&lt;/a&gt;安装shpinx&lt;/h3&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td cl
      
    
    </summary>
    
      <category term="开发" scheme="https://xsec.7ever.cn/categories/%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="sphinx" scheme="https://xsec.7ever.cn/tags/sphinx/"/>
    
  </entry>
  
  <entry>
    <title>shell 颜色脚本</title>
    <link href="https://xsec.7ever.cn/2019/02/22/shell-color-script/"/>
    <id>https://xsec.7ever.cn/2019/02/22/shell-color-script/</id>
    <published>2019-02-22T03:10:19.000Z</published>
    <updated>2019-02-22T03:11:32.309Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">if which tput &gt;/dev/null 2&gt;&amp;1; then</span><br><span class="line">      ncolors=$(tput colors)</span><br><span class="line">  fi</span><br><span class="line">  if [ -t 1 ] &amp;&amp; [ -n "$ncolors" ] &amp;&amp; [ "$ncolors" -ge 8 ]; then</span><br><span class="line">    RED="$(tput setaf 1)"</span><br><span class="line">    GREEN="$(tput setaf 2)"</span><br><span class="line">    YELLOW="$(tput setaf 3)"</span><br><span class="line">    BLUE="$(tput setaf 4)"</span><br><span class="line">    BOLD="$(tput bold)"</span><br><span class="line">    NORMAL="$(tput sgr0)"</span><br><span class="line">  else</span><br><span class="line">    RED=""</span><br><span class="line">    GREEN=""</span><br><span class="line">    YELLOW=""</span><br><span class="line">    BLUE=""</span><br><span class="line">    BOLD=""</span><br><span class="line">    NORMAL=""</span><br><span class="line">  fi</span><br><span class="line"></span><br><span class="line">echo $&#123;RED&#125;Hello This is color World $&#123;NORMAL&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class
      
    
    </summary>
    
      <category term="运维" scheme="https://xsec.7ever.cn/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="shell" scheme="https://xsec.7ever.cn/tags/shell/"/>
    
      <category term="tput" scheme="https://xsec.7ever.cn/tags/tput/"/>
    
  </entry>
  
</feed>
